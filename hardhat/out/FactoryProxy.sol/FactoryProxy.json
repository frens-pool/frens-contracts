{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "_frensStorage",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60803461008257601f61029f38819003918201601f19168301916001600160401b038311848410176100875780849260209460405283398101031261008257516001600160a01b038116810361008257600080546001600160a81b03191660089290921b610100600160a81b0316919091179055604051610201908161009e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561002c575b361561001f575b61001d610064565b005b610027610064565b610015565b6000803560e01c6354fd4d5014610043575061000e565b3461006157806003193601126100615760ff90541660805260206080f35b80fd5b60405160208101906f636f6e74726163742e6164647265737360801b8252715374616b696e67506f6f6c466163746f727960701b6030820152602281526100aa81610153565b5190206000546040516321f8a72160e01b815260048101929092526020908290602490829060081c6001600160a01b03165afa8015610125576100f5916000916100f7575b50610131565b565b610118915060203d811161011e575b6101108183610185565b8101906101a7565b386100ef565b503d610106565b6040513d6000823e3d90fd5b9050600080809236828037818036925af13d82803e1561014f573d90f35b3d90fd5b6060810190811067ffffffffffffffff82111761016f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761016f57604052565b908160209103126101c657516001600160a01b03811681036101c65790565b600080fdfea2646970667358221220ab3a2c20ed8be06973d2de0d224dcddbe89687ad6a213a3dfcd04847d9dad47f64736f6c63430008110033",
    "sourceMap": "93:1809:0:-:0;;;;;;;;;;;;;-1:-1:-1;;93:1809:0;;;;-1:-1:-1;;;;;93:1809:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;93:1809:0;;;;;;-1:-1:-1;93:1809:0;;-1:-1:-1;;;;;;93:1809:0;;;;;;-1:-1:-1;;;;;93:1809:0;;;;;;;;;;;;;;;;;-1:-1:-1;93:1809:0;;;;;;-1:-1:-1;93:1809:0;;;;;-1:-1:-1;93:1809:0",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561002c575b361561001f575b61001d610064565b005b610027610064565b610015565b6000803560e01c6354fd4d5014610043575061000e565b3461006157806003193601126100615760ff90541660805260206080f35b80fd5b60405160208101906f636f6e74726163742e6164647265737360801b8252715374616b696e67506f6f6c466163746f727960701b6030820152602281526100aa81610153565b5190206000546040516321f8a72160e01b815260048101929092526020908290602490829060081c6001600160a01b03165afa8015610125576100f5916000916100f7575b50610131565b565b610118915060203d811161011e575b6101108183610185565b8101906101a7565b386100ef565b503d610106565b6040513d6000823e3d90fd5b9050600080809236828037818036925af13d82803e1561014f573d90f35b3d90fd5b6060810190811067ffffffffffffffff82111761016f57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761016f57604052565b908160209103126101c657516001600160a01b03811681036101c65790565b600080fdfea2646970667358221220ab3a2c20ed8be06973d2de0d224dcddbe89687ad6a213a3dfcd04847d9dad47f64736f6c63430008110033",
    "sourceMap": "93:1809:0:-:0;;;;;;;;;-1:-1:-1;93:1809:0;;;;-1:-1:-1;93:1809:0;;:::i;:::-;-1:-1:-1;93:1809:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1579:81;93:1809;;1315:58;;;93:1809;-1:-1:-1;;;93:1809:0;;-1:-1:-1;;;93:1809:0;;;;1315:58;;;;;;:::i;:::-;93:1809;1305:69;;-1:-1:-1;93:1809:0;;;-1:-1:-1;;;5115:29:2;;;;;93:1809:0;;;;1315:58;;93:1809;;;;;;;;-1:-1:-1;;;;;93:1809:0;5115:29:2;;;;;;1635:17:0;5115:29:2;-1:-1:-1;5115:29:2;;;1579:81:0;1635:17;;:::i;:::-;1579:81::o;5115:29:2:-;;;;1315:58:0;5115:29:2;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;93:1809:0;;;-1:-1:-1;93:1809:0;;;;;234:978;;;296:910;;;;;;;;;;;;;;;;;;;;;;;;;;;;93:1809;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;93:1809:0;;;;;;;:::o;:::-;-1:-1:-1;93:1809:0;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"_frensStorage\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FactoryProxy.sol\":\"FactoryProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0xd307bdd6d9d946d8170804d0fad3c8d2ea2223bdf3b8b61c484553f380abdd23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d0425ed657acd21de9721a07bdf0594651512e2ca7cb1478ec107b747801826\",\"dweb:/ipfs/QmPtUCYWuNSApV96gDbYy5TuNS4eCmeaF2FGMJSDtPBHdq\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "_frensStorage",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/FactoryProxy.sol": "FactoryProxy"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0xd307bdd6d9d946d8170804d0fad3c8d2ea2223bdf3b8b61c484553f380abdd23",
        "urls": [
          "bzz-raw://5d0425ed657acd21de9721a07bdf0594651512e2ca7cb1478ec107b747801826",
          "dweb:/ipfs/QmPtUCYWuNSApV96gDbYy5TuNS4eCmeaF2FGMJSDtPBHdq"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/FactoryProxy.sol",
    "id": 63,
    "exportedSymbols": {
      "FactoryProxy": [
        62
      ],
      "FrensBase": [
        832
      ],
      "IFrensStorage": [
        5452
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1870:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:31:0",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "66:25:0",
        "nodes": [],
        "absolutePath": "contracts/FrensBase.sol",
        "file": "./FrensBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 63,
        "sourceUnit": 833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 62,
        "nodeType": "ContractDefinition",
        "src": "93:1809:0",
        "nodes": [
          {
            "id": 18,
            "nodeType": "FunctionDefinition",
            "src": "135:93:0",
            "nodes": [],
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "200:28:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 250,
                      "src": "210:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "220:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "210:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "210:11:0"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10,
                    "name": "_frensStorage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "186:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$5452",
                      "typeString": "contract IFrensStorage"
                    }
                  }
                ],
                "id": 11,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9,
                  "name": "FrensBase",
                  "nameLocations": [
                    "176:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 832,
                  "src": "176:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "176:24:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "_frensStorage",
                  "nameLocation": "161:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "147:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$5452",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 6,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "147:13:0"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5452,
                      "src": "147:13:0"
                    },
                    "referencedDeclaration": 5452,
                    "src": "147:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$5452",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:29:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "200:0:0"
            },
            "scope": 62,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25,
            "nodeType": "FunctionDefinition",
            "src": "234:978:0",
            "nodes": [],
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "286:926:0",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "305:901:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "558:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "561:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "564:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "564:14:0"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "545:12:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "545:34:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "545:34:0"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "802:69:0",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "821:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "821:5:0"
                            },
                            {
                              "name": "implementation",
                              "nodeType": "YulIdentifier",
                              "src": "828:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "844:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "847:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "850:12:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "850:14:0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "866:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "869:1:0",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "call",
                            "nodeType": "YulIdentifier",
                            "src": "816:4:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "816:55:0"
                        },
                        "variables": [
                          {
                            "name": "result",
                            "nodeType": "YulTypedName",
                            "src": "806:6:0",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "939:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "942:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "945:14:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "945:16:0"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "924:14:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:38:0"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "924:38:0"
                      },
                      {
                        "cases": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1057:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1082:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "1085:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1085:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "revert",
                                      "nodeType": "YulIdentifier",
                                      "src": "1075:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1075:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1075:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1050:66:0",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1055:1:0",
                              "type": "",
                              "value": "0"
                            }
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1137:59:0",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1162:1:0",
                                        "type": "",
                                        "value": "0"
                                      },
                                      {
                                        "arguments": [],
                                        "functionName": {
                                          "name": "returndatasize",
                                          "nodeType": "YulIdentifier",
                                          "src": "1165:14:0"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1165:16:0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "return",
                                      "nodeType": "YulIdentifier",
                                      "src": "1155:6:0"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1155:27:0"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1155:27:0"
                                }
                              ]
                            },
                            "nodeType": "YulCase",
                            "src": "1129:67:0",
                            "value": "default"
                          }
                        ],
                        "expression": {
                          "name": "result",
                          "nodeType": "YulIdentifier",
                          "src": "983:6:0"
                        },
                        "nodeType": "YulSwitch",
                        "src": "976:220:0"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 20,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "828:14:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 23,
                  "nodeType": "InlineAssembly",
                  "src": "296:910:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_delegate",
            "nameLocation": "243:9:0",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "implementation",
                  "nameLocation": "261:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "253:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "252:24:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "286:0:0"
            },
            "scope": 62,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41,
            "nodeType": "FunctionDefinition",
            "src": "1218:164:0",
            "nodes": [],
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "1277:105:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e61646472657373",
                                "id": 34,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1332:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                "value": "contract.address"
                              },
                              {
                                "hexValue": "5374616b696e67506f6f6c466163746f7279",
                                "id": 35,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1352:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                },
                                "value": "StakingPoolFactory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_b86ec11852586a041fafc4775b679e5f136167d6f6d0dec7dace53c72fdac064",
                                  "typeString": "literal_string \"contract.address\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                                  "typeString": "literal_string \"StakingPoolFactory\""
                                }
                              ],
                              "expression": {
                                "id": 32,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "1315:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 33,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1319:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "1315:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 36,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1315:58:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 31,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1305:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1305:69:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 30,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "1294:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32) view returns (address)"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1294:81:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 29,
                  "id": 39,
                  "nodeType": "Return",
                  "src": "1287:88:0"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_implementation",
            "nameLocation": "1227:15:0",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1242:2:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41,
                  "src": "1268:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1267:9:0"
            },
            "scope": 62,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51,
            "nodeType": "FunctionDefinition",
            "src": "1579:81:0",
            "nodes": [],
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "1615:45:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 46,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1635:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1635:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 45,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1625:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:28:0"
                }
              ]
            },
            "documentation": {
              "id": 42,
              "nodeType": "StructuredDocumentation",
              "src": "1388:186:0",
              "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1587:2:0"
            },
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:0"
            },
            "scope": 62,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 61,
            "nodeType": "FunctionDefinition",
            "src": "1820:80:0",
            "nodes": [],
            "body": {
              "id": 60,
              "nodeType": "Block",
              "src": "1855:45:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 56,
                          "name": "_implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41,
                          "src": "1875:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1875:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 55,
                      "name": "_delegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1865:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1865:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:28:0"
                }
              ]
            },
            "documentation": {
              "id": 52,
              "nodeType": "StructuredDocumentation",
              "src": "1666:149:0",
              "text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1827:2:0"
            },
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1855:0:0"
            },
            "scope": 62,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3,
              "name": "FrensBase",
              "nameLocations": [
                "118:9:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 832,
              "src": "118:9:0"
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "118:9:0"
          }
        ],
        "canonicalName": "FactoryProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          62,
          832
        ],
        "name": "FactoryProxy",
        "nameLocation": "102:12:0",
        "scope": 63,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}