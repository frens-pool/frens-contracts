{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryProxy",
      "outputs": [
        {
          "internalType": "contract FactoryProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensClaim",
      "outputs": [
        {
          "internalType": "contract FrensClaim",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensInitialiser",
      "outputs": [
        {
          "internalType": "contract FrensInitialiser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "contract IStakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testApprove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testGetPoolById",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testIsApprovedForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintingDirectly",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwnerOf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSafeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTokenByIndex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testexists",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "825:9844:45:-:0;;;;;;1594:4:24;825:9844:45;;;;;;;;;1986:42;1404;825:9844;;;;;;;;;1396:51;825:9844;;;1396:51;825:9844;1594:42;825:9844;1594:42;825:9844;;;1594:42;825:9844;1670:42;825:9844;1670:42;825:9844;;;1670:42;825:9844;;1754:25;825:9844;;;1754:25;825:9844;1813:42;825:9844;1813:42;825:9844;;;1813:42;825:9844;1900:42;825:9844;1892:51;825:9844;;;1892:51;825:9844;1978:51;825:9844;;;1978:51;825:9844;;2051:101;825:9844;;:::i;:::-;;;;;;;;;-1:-1:-1;;825:9844:45;2051:101;825:9844;;;;;;-1:-1:-1;;;;;;;;;;;825:9844:45;-1:-1:-1;;;825:9844:45;;2189:69;825:9844;;;;;;;:::i;:::-;;;;;;-1:-1:-1;825:9844:45;;2189:69;825:9844;2189:69;825:9844;;;;;;;;2282:197;825:9844;;:::i;:::-;;;;;;;-1:-1:-1;825:9844:45;2282:197;825:9844;;;;;;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;2513:66;;825:9844;;;;;;;;;;;2282:197;825:9844;;;;;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;;2189:69;825:9844;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2051:101;825:9844;;;;;;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "825:9844:45:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1861:82;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1276:32;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1314:28;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1363:84;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1949:80;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;933:38;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;977:52;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1111:44;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;8186:14;825:9844;;;-1:-1:-1;;;8186:22:45;;;;;825:9844;;-1:-1:-1;;;;;825:9844:45;8186:22;;825:9844;;;;;;;;8186:22;;;;;;;;825:9844;8186:22;;;825:9844;8179:4;;8186:22;:::i;:::-;8217:11;825:9844;8222:5;825:9844;;8217:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;8236:51:45;;;;;825:9844;;;;;;;;;;;;;8236:51;;;825:9844;8236:51;;825:9844;;;;;;;;;;;8236:51;;;;;;;;825:9844;;;8186:14;825:9844;;;8328:3;825:9844;;8295:37;;;;;;825:9844;;;;;;;;;;;;;8295:37;;;;825:9844;8295:37;;825:9844;8295:37;;;;;;;;825:9844;8179:4;8345:13;8179:4;8345:13;:::i;:::-;825:9844;8186:14;825:9844;;;;8328:3;825:9844;;8367:37;;;;;825:9844;;;;;;8367:37;;;;;;;825:9844;8367:37;;825:9844;8367:37;;;;;;;;825:9844;;;;8328:3;825:9844;;;8186:14;825:9844;;;;;;8426:22;;;;;;;;;;;;;8412:37;8426:22;825:9844;8426:22;;;825:9844;8412:37;;;:::i;:::-;825:9844;8426:22;;;;;;;-1:-1:-1;8426:22:45;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;825:9844;;;;;;;;;8367:37;;;;:::i;:::-;;;;8295;;;;:::i;:::-;;;;8236:51;;;;:::i;:::-;;;;8186:22;;;;;;;;;;;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;857:24;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;9140:5;825:9844;-1:-1:-1;;;;;825:9844:45;9135:11;;825:9844;;9135:11;:::i;:::-;825:9844;9154:11;825:9844;;9154:37;;;;;825:9844;;;;;;;;;;;;;9154:37;;;;;;;;;;825:9844;;;9209:14;825:9844;;;9140:5;825:9844;;;;;;;;9209:44;;;825:9844;9209:44;;825:9844;;;;;1671:64:24;9209:44:45;;;;825:9844;9209:44;;;;;;;;;825:9844;9209:44;;;825:9844;;;;;;;;;;;;9277:26;;;;;825:9844;9277:26;;1671:64:24;9277:26:45;;;;;;;9261:43;9277:26;825:9844;9277:26;;;825:9844;9261:43;;:::i;:::-;9317:3;9312:9;825:9844;;;;9312:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;9329:68:45;;;;;;825:9844;;-1:-1:-1;;;9329:68:45;;;825:9844;;;;;9329:68;825:9844;9329:68;;;:::i;:::-;;;;;;;;;;;;;825:9844;;;9209:14;825:9844;;;;9140:5;825:9844;;;;;;9405:47;;;;;;825:9844;;-1:-1:-1;;;9405:47:45;;;-1:-1:-1;;;;;825:9844:45;;;;9405:47;;825:9844;;;;;;;;;;;;1671:64:24;;;825:9844:45;;;9405:47;825:9844;9405:47;;;;;;;;;;825:9844;;9460:11;825:9844;9140:5;825:9844;;9460:11;:::i;:::-;825:9844;9209:14;825:9844;;;9140:5;825:9844;;;;;;9479:47;;;;;825:9844;;9479:47;;;-1:-1:-1;;;;;825:9844:45;;;;9479:47;;825:9844;;;;;;;;;;1671:64:24;;;825:9844:45;-1:-1:-1;;825:9844:45;;;;;;-1:-1:-1;;9479:47:45;;;;;;;;825:9844;;;;;;;;;9209:14;825:9844;;;;9548:26;;;;;;;;825:9844;9548:26;;1671:64:24;9548:26:45;;;;;;;9534:41;9548:26;825:9844;9548:26;;;9534:41;;:::i;:::-;9583:9;825:9844;;;;9583:9;:::i;:::-;9600:69;;;;;825:9844;;;;;;;9600:69;;;;;;;;825:9844;9600:69;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;9600:69;;;;;;;;825:9844;;;9209:14;825:9844;;;;;;;9722:12;825:9844;;9677:63;;;;;825:9844;;9677:63;;;-1:-1:-1;;;;;825:9844:45;;;;9677:63;;825:9844;;;;;;;;;;1671:64:24;;;825:9844:45;-1:-1:-1;;825:9844:45;;;;;;-1:-1:-1;;9677:63:45;;;;;;;;825:9844;;;;9775:17;;;;;;;-1:-1:-1;;;;;9775:17:45;;;;;;;;;;;;825:9844;9775:17;;;;;9800:9;825:9844;;;;9800:9;:::i;:::-;825:9844;;;9209:14;825:9844;;;;;;;9817:62;;;;;;825:9844;;9817:62;;;-1:-1:-1;;;;;825:9844:45;;;;9817:62;;825:9844;;;;;;;;;;;1671:64:24;;;825:9844:45;1671:64:24;-1:-1:-1;;825:9844:45;;;;;;-1:-1:-1;;9817:62:45;;;;;;;;;825:9844;9817:62;;;825:9844;;9209:14;825:9844;;;;;9918:26;;;;;;;825:9844;9918:26;;1671:64:24;9918:26:45;;;;;;;;;825:9844;9918:26;;;;;;:::i;9817:62::-;;;;:::i;:::-;;;;9775:17;1671:64:24;;;825:9844:45;1671:64:24;;825:9844:45;1671:64:24;825:9844:45;;1671:64:24;9677:63:45;;;;:::i;:::-;;;;9600:69;;;;:::i;:::-;;;;9548:26;;;;;;;;;;;;;;;:::i;:::-;;;;;9479:47;;;;:::i;:::-;;;;9405;;;;:::i;:::-;;;;9329:68;;;;:::i;:::-;;;;9277:26;;;;;;;;;;;;;;;:::i;:::-;;;;;9209:44;;;;;;;;;;;;;;;;;:::i;:::-;;;825:9844;;;;;9209:44;;;;;;;;;9154:37;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;7112:5;825:9844;-1:-1:-1;;;;;825:9844:45;7102:16;;825:9844;;7102:16;:::i;:::-;825:9844;7126:10;;7151:7;7155:3;7151:7;;;;825:9844;7144:607;7170:11;825:9844;;;;;7170:37;;;;;825:9844;;;;;;;;;;7170:37;;;;;;;;;;;;7144:607;7241:14;;825:9844;;;;;;;;;;;;;;;7241:29;;;;;825:9844;7241:29;;1671:64:24;7241:29:45;825:9844;;;;7241:29;;;;;;;;;;7335:3;7241:29;7311:13;7241:29;825:9844;7241:29;;;7144:607;825:9844;;;;;7311:13;:::i;:::-;7335:3;:::i;:::-;7348:12;825:9844;;;;;7348:38;;;;;;825:9844;;;;;;7348:38;;;;;;;;;;;;;;;;;;7144:607;825:9844;;;;;;;;7421:29;;;;;;;;825:9844;7421:29;;1671:64:24;7421:29:45;;;;;;;7492:14;7421:29;7517:3;7421:29;825:9844;7421:29;;;7144:607;825:9844;;;7492:14;:::i;7517:3::-;825:9844;;;;;7530:37;;;;;;825:9844;;;;;;;7530:37;;;;;;;;;;;;;;;;;;;;7144:607;825:9844;;;;;;7644:29;;;;;;;825:9844;7644:29;;1671:64:24;7644:29:45;;;;;;;7738:3;7644:29;7714:13;7644:29;;;825:9844;7644:29;;;7144:607;825:9844;;;;7714:13;:::i;7738:3::-;7144:607;;7644:29;;;;;;;-1:-1:-1;7644:29:45;;;;;;:::i;:::-;;;;;;7530:37;;;;:::i;:::-;;;;7421:29;;;;;;;;;;;;;;;:::i;:::-;;;;;7348:38;;;;:::i;:::-;;;;7241:29;;;;;;;;;;;;;;:::i;:::-;;;;7170:37;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;5705:5;825:9844;-1:-1:-1;;;;;825:9844:45;5700:11;;825:9844;;5700:11;:::i;:::-;-1:-1:-1;;;;;;;;;;;5719:31:45;;;;;825:9844;;;;;;;;;;;;;5719:31;;825:9844;;5719:31;;825:9844;;;;;;-1:-1:-1;;;825:9844:45;;;;5719:31;;;;;;;;825:9844;;;5758:14;825:9844;;;5705:5;825:9844;;5758:35;;;;;825:9844;;;;;;;;;;;;;;;5758:35;;825:9844;5758:35;;825:9844;5758:35;;;;;;;;825:9844;5758:35;;;;:::i;5719:31::-;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;1073:32;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;8509:1;8500:10;8525:7;8529:3;8525:7;;;;825:9844;8518:558;8549:5;825:9844;;-1:-1:-1;;;;;825:9844:45;8549:5;8544:11;;825:9844;;8544:11;:::i;:::-;8565;825:9844;;;;;8565:37;;;;;;825:9844;;;;;;;;;;8565:37;;;;;;;;;;;;8518:558;8630:14;;825:9844;;;;;;;;;;;;;;8630:25;;;;;825:9844;8630:25;;1671:64:24;8630:25:45;825:9844;;;;8630:25;;;;;;;;;;8665:24;8630:25;8699:3;8630:25;825:9844;8630:25;;;825:9844;;;8665:24;:::i;8699:3::-;8717;;825:9844;8712:9;825:9844;;;;8712:9;:::i;:::-;825:9844;8731:12;825:9844;;8731:38;;;;;;825:9844;;;;;;8731:38;;;;;;;;;;;;;;;;;;8518:558;825:9844;;;;;;;;8795:25;;;;;;;;825:9844;8795:25;;1671:64:24;8795:25:45;;;;;;;8830:20;8860:3;8795:25;;;825:9844;8795:25;;;8518:558;825:9844;;;;;8830:20;:::i;8860:3::-;825:9844;8873:9;825:9844;;;;8873:9;:::i;:::-;825:9844;;8892:37;;;;;;825:9844;;;;;;;8892:37;;;;;;;;;;;;;;;;;;;;8518:558;825:9844;;;;;;8998:25;;;;;;;825:9844;8998:25;;1671:64:24;8998:25:45;;;;;;;9063:3;8998:25;9033:20;8998:25;825:9844;8998:25;;;825:9844;;;;9033:20;:::i;9063:3::-;8518:558;;8998:25;;;;;;;-1:-1:-1;8998:25:45;;;;;;:::i;:::-;;;;;;8892:37;;;;:::i;:::-;;;;8795:25;;;;;;;;;;;;;;:::i;:::-;;;;8731:38;;;;:::i;:::-;;;;8630:25;;;;;;;;;;;;;;;:::i;8565:37::-;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;10271:5;825:9844;-1:-1:-1;;;;;825:9844:45;10266:11;;825:9844;;10266:11;:::i;:::-;825:9844;10285:11;825:9844;;10285:37;;;;;825:9844;;;;;;;;;;;;;10285:37;;;;;;;;;;825:9844;;;10340:14;825:9844;;;;10271:5;825:9844;;;;;;;;;10340:44;;;825:9844;10340:44;;825:9844;;;;;1671:64:24;10340:44:45;;;;825:9844;10340:44;;;;;;;;;825:9844;10340:44;;;825:9844;;;;;;;;;;;;;;;10408:26;;;825:9844;10408:26;;1671:64:24;10408:26:45;;;;;;;10392:43;10408:26;825:9844;10408:26;;;10392:43;;;:::i;:::-;10443:9;825:9844;10448:3;825:9844;;10443:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;10460:68:45;;;;;825:9844;;;;;;;;10460:68;;;;;;825:9844;10460:68;;;:::i;:::-;;;;;;;;;;;825:9844;;;10340:14;825:9844;;;;10271:5;825:9844;;;;10448:3;825:9844;;10536:43;;;;;;825:9844;;-1:-1:-1;;;10536:43:45;;;-1:-1:-1;;;;;825:9844:45;;;;10536:43;;825:9844;;;;;;;;;;;;1671:64:24;;;825:9844:45;;;;;;;;;;10536:43;;;;;;;;;;825:9844;;10587:11;825:9844;10271:5;825:9844;;10587:11;:::i;:::-;825:9844;10340:14;825:9844;;;10271:5;825:9844;;;10448:3;825:9844;;10606:43;;;;;;825:9844;;10606:43;;;-1:-1:-1;;;;;825:9844:45;;;;10606:43;;825:9844;;;;;;;;;;;;1671:64:24;;;;825:9844:45;-1:-1:-1;;825:9844:45;;;;;;-1:-1:-1;;10606:43:45;;;;;;;;825:9844;10536:43;;;;:::i;:::-;;;;10460:68;;;;:::i;:::-;;;;10408:26;;;;;;;-1:-1:-1;10408:26:45;;;;;;:::i;:::-;;;;;;10340:44;;;;;;;;;;;;;;;;;;:::i;:::-;;;825:9844;;;;;;;;10340:44;;;;;;;10285:37;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;10012:5;825:9844;-1:-1:-1;;;;;825:9844:45;10002:16;;825:9844;;10002:16;:::i;:::-;825:9844;10026:10;10051:7;10055:3;10051:7;;;;825:9844;10044:167;825:9844;10070:11;825:9844;;10070:37;;;;;825:9844;;;;;;;;;;;;;10070:37;;;;;;;;;;10044:167;-1:-1:-1;10127:14:45;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;;;;;;;;;;;;;;10127:32;;825:9844;10127:32;;1671:64:24;10127:32:45;825:9844;10127:32;;;;;;;;;;;825:9844;10127:32;;;10044:167;10180:7;;;;10199:3;10180:7;;;:::i;10199:3::-;10044:167;;10127:32;;;;;;;;;;;;;;;;:::i;:::-;;;825:9844;;;;;;;10180:7;825:9844;10127:32;;;;;;;825:9844;1671:64:24;;;825:9844:45;;;;;;;10070:37;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;1786:69;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1197:31;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1234:36;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;6823:5;825:9844;-1:-1:-1;;;;;825:9844:45;6813:16;;825:9844;;6813:16;:::i;:::-;825:9844;6844:10;6870:7;6874:3;6870:7;;;;825:9844;6863:178;6901:14;825:9844;;;;;;;;;;;;;;6901:24;;;;;825:9844;6901:24;;1671:64:24;6901:24:45;825:9844;;;;6901:24;;;;;;;;;7918:5:27;6901:24:45;825:9844;6901:24;;;6863:178;7918:5:27;;;:::i;:::-;825:9844:45;6936:11;825:9844;;6936:37;;;;;;825:9844;;;;;;;;;;;;;6936:37;;;;;;;;;;;;;;;6863:178;825:9844;;;;;;6994:24;;;;;;;825:9844;6994:24;;1671:64:24;6994:24:45;;;;;;7029:3;6994:24;;;825:9844;6994:24;;;6863:178;6994:24;;;:::i;7029:3::-;6863:178;;6994:24;;;;;;-1:-1:-1;6994:24:45;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;6936:37;;;;:::i;:::-;;;;6901:24;;;;;;;;;;;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;6451:5;825:9844;;-1:-1:-1;;;;;825:9844:45;6441:16;;825:9844;;6441:16;:::i;:::-;825:9844;6465:10;;6490:7;6494:3;6490:7;;;;825:9844;6483:281;825:9844;6509:11;825:9844;;6509:37;;;;;825:9844;;;;;;;;;;;;;6509:37;;;;;;;;;;6483:281;6566:14;;825:9844;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6566:46:45;;-1:-1:-1;;;;;825:9844:45;;;;;6566:46;;825:9844;;;;1671:64:24;;;;6566:46:45;;825:9844;6566:46;;825:9844;;;;;;6566:46;;;;;;;;;;;825:9844;6566:46;;;6483:281;-1:-1:-1;6633:7:45;;;;:::i;:::-;825:9844;;;;;;;;;;;;;;;;;;6674:31;;825:9844;6674:31;;825:9844;6674:31;;;;;;;825:9844;6674:31;;;6483:281;6752:3;5259:6:24;;;;;5255:203;;6483:281:45;6752:3;;;:::i;:::-;6483:281;;5255:203:24;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;5286:41:24;825:9844:45;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;;;;;;;1671:64:24;5346:31;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;;;;;;1671:64:24;5396:31;;;;;:::i;:::-;5255:203;;;;6674:31:45;;;;;;;;;;;;;;;;:::i;:::-;;;825:9844;;;;6752:3;825:9844;;6674:31;;;;;;;;6566:46;;;;;;;;;;;;;;;;;;:::i;:::-;;;825:9844;;;;6633:7;825:9844;;;;6566:46;;;;;;;;;825:9844;1671:64:24;;;;825:9844:45;;;;;;;6509:37;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;;;;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;-1:-1:-1;;825:9844:45;;;;887:40;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1035:32;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1558:78;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;1642:70;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;5854:5;825:9844;;-1:-1:-1;;;;;825:9844:45;5854:5;5844:16;;825:9844;;5844:16;:::i;:::-;825:9844;5868:10;;5893:7;5897:3;5893:7;;;;825:9844;5886:503;825:9844;5987:11;825:9844;;5987:37;;;;;825:9844;;;;;;;;;;;;;5987:37;;;;;;;;;;5886:503;6046:14;;825:9844;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6046:46:45;;-1:-1:-1;;;;;825:9844:45;;;;;6046:46;;825:9844;;;;1671:64:24;;;;6046:46:45;;825:9844;6046:46;;825:9844;;;;;;6046:46;;;;;;;;825:9844;6046:46;;;5886:503;6113:7;;;;;:::i;:::-;825:9844;;;;;;;;;;;;;;6156:29;;;;;825:9844;6156:29;;1671:64:24;825:9844:45;6156:29;;;;;;;;;;;825:9844;6156:29;;;5886:503;825:9844;;3678:6:24;3674:212;;5886:503:45;825:9844;;;;;6263:3;;825:9844;;;;;6240:30;;;;;;825:9844;;-1:-1:-1;;;6240:30:45;;-1:-1:-1;;;;;825:9844:45;;;;;6240:30;;825:9844;;;;1671:64:24;;;-1:-1:-1;;825:9844:45;;;;;;-1:-1:-1;;6240:30:45;;;;;;;;;;;;;5886:503;825:9844;;;;;;6302:29;;;;;;;825:9844;6302:29;;1671:64:24;6302:29:45;;;;;;;6377:3;6302:29;6341:26;6302:29;;;825:9844;6302:29;;;825:9844;;;;6341:26;:::i;6377:3::-;5886:503;;6302:29;;;;;;;-1:-1:-1;6302:29:45;;;;;;:::i;:::-;;;;;;6240:30;;;;:::i;:::-;;;;3674:212:24;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3705:44:24;825:9844:45;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;;;;;;;;3768:34:24;;;;;;;;825:9844:45;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;;;;;;;;3821:34:24;;;;;:::i;:::-;3674:212;;;6156:29:45;;;;;;;;;;;;;;:::i;:::-;;;;6046:46;;;;;;;;;;;;;;;;:::i;:::-;;;825:9844;;;;;6113:7;825:9844;;6046:46;;;;;;;825:9844;1671:64:24;;;;825:9844:45;;;;;;;5987:37;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;1161:30;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;;;2656:18;;;;;;;-1:-1:-1;;;;;2656:18:45;;;;;;;;;;;;825:9844;2656:18;;;;;2641:33;825:9844;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;;;;2718:30;;;;-1:-1:-1;;;;;2718:30:45;;;;;;;;825:9844;2718:30;;;;;;825:9844;;2718:30;;;825:9844;2718:30;;;;;2703:45;825:9844;;-1:-1:-1;;;;;825:9844:45;;;-1:-1:-1;;;;;;825:9844:45;;;;;;;;2801:50;825:9844;;;;;;;;;;2641:33;825:9844;;;;;2905:34;;;;;;;-1:-1:-1;;;;;2905:34:45;;;;;825:9844;2905:34;;;;;;825:9844;;2905:34;;;825:9844;2905:34;;;;;825:9844;;;;;;;;;2886:53;825:9844;;;2886:53;825:9844;-1:-1:-1;;;;;;;;;;;3018:38:45;;;;825:9844;;-1:-1:-1;;;3018:38:45;;3035:4;825:9844;3018:38;;825:9844;;;;;;;-1:-1:-1;825:9844:45;;;-1:-1:-1;;;;;;;;;;;;3018:38:45;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;-1:-1:-1;;;;;825:9844:45;3064:75;;;;;825:9844;;;;;;;;;;;;;3064:75;;;825:9844;3064:75;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3064:75;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;3215:18;825:9844;-1:-1:-1;;;;;825:9844:45;;;;;3178:71;;;;;825:9844;;;;;;;;;;;;;;;3178:71;;825:9844;3178:71;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3178:71;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;3330:7;825:9844;-1:-1:-1;;;;;825:9844:45;;;;;3293:64;;;;;825:9844;;;;;;;;;;;;;;;3293:64;;825:9844;3293:64;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3293:64;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;3426:10;825:9844;-1:-1:-1;;;;;825:9844:45;;;;;3389:55;;;;;825:9844;;;;;;;;;;;;;;;3389:55;;825:9844;3389:55;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3389:55;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;;;;-1:-1:-1;;;;;825:9844:45;-1:-1:-1;;;;;3497:32:45;;;;;;;;-1:-1:-1;3497:32:45;;;;;;;;;;825:9844;;3497:32;;;;;;;825:9844;3497:32;;;;;3480:49;825:9844;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;2886:53;825:9844;;;;;3569:71;;;;;825:9844;;;;;;;;;;;;;;;3569:71;;825:9844;3569:71;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3569:71;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;3480:49;825:9844;-1:-1:-1;;;;;825:9844:45;;;;;3648:66;;;;;825:9844;;;;;;;;;;;;;;;3648:66;;825:9844;3648:66;;825:9844;;;;;;3648:66;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;;;;-1:-1:-1;;;;;825:9844:45;-1:-1:-1;;;;;3766:36:45;;;;;;;;-1:-1:-1;3766:36:45;;;;;;;;;;825:9844;;3766:36;;;;;;;825:9844;3766:36;;;;;825:9844;;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;2886:53;825:9844;;;;;3837:79;;;;;825:9844;;;;;;;;;;;;;;;3837:79;;825:9844;3837:79;;825:9844;;;;;;2801:50;825:9844;;;;-1:-1:-1;;;825:9844:45;;;;3837:79;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;;;;-1:-1:-1;;;;;825:9844:45;-1:-1:-1;;;;;3959:28:45;;;;;;;;-1:-1:-1;3959:28:45;;;;;;;;;;825:9844;;3959:28;;;;;;;825:9844;3959:28;;;;;3946:41;825:9844;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;2886:53;825:9844;;;;;4021:63;;;;;825:9844;;;;;;;;;;;;;;;4021:63;;825:9844;4021:63;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;4021:63;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;;;;-1:-1:-1;;;;;825:9844:45;-1:-1:-1;;;;;4136:33:45;;;;;;;;-1:-1:-1;4136:33:45;;;;;;;;;;825:9844;;4136:33;;;;;;;825:9844;4136:33;;;;;825:9844;;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;2886:53;825:9844;;;;;4207:73;;;;;825:9844;;;;;;;;;;;;;;;4207:73;;825:9844;4207:73;;825:9844;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;4207:73;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;4288:67;;;;;825:9844;;;;;;;;;;;;;;;4288:67;;825:9844;4288:67;;825:9844;;;;;;4288:67;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;;;;-1:-1:-1;;;;;825:9844:45;-1:-1:-1;;;;;4412:40:45;;;;;;;;-1:-1:-1;4412:40:45;;;;;;;;;;825:9844;;4412:40;;;;;;;825:9844;4412:40;;;;;825:9844;;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;2886:53;825:9844;;;;;4488:87;;;;;825:9844;;;;;;;;;;;;;;;4488:87;;825:9844;4488:87;;825:9844;;;;;;3426:10;825:9844;;;;-1:-1:-1;;;825:9844:45;;;;4488:87;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;;4583:74;;;;;825:9844;;;;;;;;;;;;;;;4583:74;;825:9844;4583:74;;825:9844;;;;;;4583:74;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;;;;-1:-1:-1;;;;;825:9844:45;-1:-1:-1;;;;;4694:26:45;;;;;;;;-1:-1:-1;4694:26:45;;;;;;;;;;825:9844;;4694:26;;;;;;;825:9844;4694:26;;;;;4683:37;825:9844;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;;;2886:53;825:9844;;;;;4751:59;;;;;825:9844;;;;;;;;;;;;;;;4751:59;;825:9844;4751:59;;825:9844;;;;;;4683:37;825:9844;;;;-1:-1:-1;;;825:9844:45;;;;4751:59;;;;;;;;825:9844;-1:-1:-1;2886:53:45;825:9844;4683:37;825:9844;-1:-1:-1;;;;;825:9844:45;;;;;4818:60;;;;;825:9844;;;;;;;;;;;;;;;4818:60;;825:9844;4818:60;;825:9844;;;;;;4818:60;;;;;;;;825:9844;4960:38;-1:-1:-1;;;;;;;;;;;4960:38:45;;;;825:9844;;-1:-1:-1;;;4960:38:45;;3035:4;825:9844;4960:38;;825:9844;;;;;;;-1:-1:-1;825:9844:45;;;-1:-1:-1;;;;;;;;;;;;4960:38:45;;;;;;;;825:9844;-1:-1:-1;2641:33:45;825:9844;-1:-1:-1;;;;;825:9844:45;5006:32;;;;;825:9844;;;;;;;;;;;;;5006:32;;;;;;;;;;825:9844;-1:-1:-1;2801:50:45;825:9844;5128:9;825:9844;;;-1:-1:-1;;;5115:30:45;;;-1:-1:-1;;;;;825:9844:45;;;;5115:30;;825:9844;;;;;;;;;;;;;;;;;;;;;5115:30;;;;;;5307:25;5115:30;825:9844;5115:30;;;825:9844;-1:-1:-1;825:9844:45;;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;1671:64:24;825:9844:45;1671:64:24;:::i;:::-;825:9844:45;1671:64:24;;-1:-1:-1;;;825:9844:45;;;;5307:25;:::i;:::-;2801:50;825:9844;5128:9;825:9844;;;5419:30;;;-1:-1:-1;;;;;825:9844:45;;;;5419:30;;825:9844;;;;;;;;;;;;;;;;;;;5419:30;;;;;;5613:27;5419:30;825:9844;5419:30;;;825:9844;-1:-1:-1;825:9844:45;;;-1:-1:-1;;;;;;825:9844:45;-1:-1:-1;;;;;825:9844:45;;;;;;;1671:64:24;825:9844:45;1671:64:24;:::i;:::-;825:9844:45;1671:64:24;;-1:-1:-1;;;825:9844:45;;;;5613:27;:::i;5419:30::-;;;;825:9844;5419:30;825:9844;5419:30;;;;;;;:::i;:::-;;;;5115;;;;825:9844;5115:30;825:9844;5115:30;;;;;;;:::i;:::-;;;;5006:32;;;;:::i;:::-;;;;4960:38;;;;:::i;:::-;;;;4818:60;;;;:::i;:::-;;;;4751:59;;;;:::i;:::-;;;;4583:74;;;;:::i;:::-;;;;4488:87;;;;:::i;:::-;;;;4288:67;;;;:::i;:::-;;;;4207:73;;;;:::i;:::-;;;;4021:63;;;;:::i;:::-;;;;3837:79;;;;:::i;:::-;;;;3648:66;;;;:::i;:::-;;;;3569:71;;;;:::i;:::-;;;;3389:55;;;;:::i;:::-;;;;3293:64;;;;:::i;:::-;;;;3178:71;;;;:::i;:::-;;;;3064:75;;;;:::i;:::-;;;;3018:38;;;;:::i;:::-;;;;825:9844;;;;;;-1:-1:-1;;825:9844:45;;;;7820:5;825:9844;-1:-1:-1;;;;;825:9844:45;7810:16;;825:9844;;7810:16;:::i;:::-;825:9844;7834:10;7859:6;825:9844;7859:6;;;;-1:-1:-1;7955:14:45;825:9844;7820:5;825:9844;7994:3;825:9844;;;-1:-1:-1;;;7955:43:45;;;825:9844;;;-1:-1:-1;;;;;825:9844:45;;;;7955:43;;825:9844;;;;;;;;;;;7955:43;;825:9844;7955:43;;825:9844;;;;;;;;7955:43;;;;;;7918:5:27;7955:43:45;825:9844;7955:43;;;7918:5:27;;;:::i;:::-;825:9844:45;7955:14;825:9844;;;;7994:3;825:9844;;8007:43;;;;;;825:9844;;;;;;;;;;;;;;8007:43;;825:9844;8007:43;;825:9844;;;;;8007:43;;;;;;;8069;8007;;;;;7852:84;-1:-1:-1;7955:14:45;825:9844;7820:5;825:9844;7994:3;825:9844;;;8069:43;;;-1:-1:-1;;;;;825:9844:45;;;;;;8069:43;;825:9844;;;;;;;;;;;;;;;;;;;;;;;;;8069:43;;;;;;;;;;;;825:9844;8069:43;;;;;;:::i;:::-;;;;;;-1:-1:-1;8069:43:45;;;;;;:::i;:::-;;;;;8007;;;;:::i;:::-;;;;7955;;;;;;;;;;;;;;:::i;:::-;;;;7852:84;825:9844;7877:11;825:9844;;7877:37;;;;;;825:9844;;;;;;;;;;;;;7877:37;;;;;;;;;7924:3;7877:37;;;7852:84;7924:3;;:::i;:::-;7852:84;;7877:37;;;;:::i;:::-;;;;1671:64:24;-1:-1:-1;;;;;1671:64:24;;;;;;:::o;:::-;825:9844:45;1671:64:24;;;;;-1:-1:-1;;;;;1671:64:24;;;;;825:9844:45;1671:64:24;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:24;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:24;;;;825:9844:45;;;1671:64:24;;;;-1:-1:-1;;1671:64:24;;;825:9844:45;1671:64:24;:::i;:::-;;;;-1:-1:-1;1671:64:24;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;825:9844:45;;;1671:64:24;;;;;:::o;1819:584::-;1873:7;825:9844:45;;;;;;;;;;;;;;;1896:14:24:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:24;;1980:374;;2367:19;;;:::o;1980:374::-;825:9844:45;;;;;2196:43:24;;;825:9844:45;;;;1671:64:24;;;825:9844:45;1671:64:24;;;825:9844:45;2196:43:24;;825:9844:45;1671:64:24;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;;2086:175;;1671:64;;;;;;;825:9844:45;1671:64:24;2086:175;;;1671:64;;;;;;;;;;;;;;;;:::i;:::-;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;1671:64::-;-1:-1:-1;;;1671:64:24;;;;;;;;825:9844:45;;;;;;;;;;-1:-1:-1;;;;;825:9844:45;;;;;;;:::o;6994:145:29:-;-1:-1:-1;6994:145:29;;;7077:54;825:9844:45;;;7077:54:29;;;;;;;;;;;825:9844:45;7077:54:29;;;825:9844:45;;1671:64:24;;825:9844:45;;;;;;;7077:54:29;825:9844:45;;;;;;:::i;:::-;;;;;;;;;;;1671:64:24;;;;;;825:9844:45;;7077:54:29;825:9844:45;7077:54:29;;;;;;;:::i;:::-;1671:64:24;392:159:29;131:42;392:159;;;6994:145::o;1449:98:27:-;-1:-1:-1;;;;;;;;;;;1495:22:27;;;;;825:9844:45;;-1:-1:-1;;;1495:22:27;;-1:-1:-1;;;;;825:9844:45;;;1495:22:27;;;825:9844:45;;;-1:-1:-1;;;825:9844:45;;;1671:64:24;1495:22:27;;;825:9844:45;;;1495:22:27;;;;;;;;;;1449:98;1527:13;;;;;;825:9844:45;;;;;;;;;;;;;;;1527:13:27;;1495:22;1527:13;;825:9844:45;1527:13:27;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;825:9844:45;;1449:98:27;:::o;825:9844:45:-;;;1527:13:27;825:9844:45;;;;;;;;;1527:13:27;825:9844:45;;;1495:22:27;;;;;;;:::i;:::-;;;;;;825:9844:45;;;;;;;;;;-1:-1:-1;;825:9844:45;;;;;;;:::o;:::-;1671:64:24;;;825:9844:45;;;;;;;;3255:157:24;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;3345:30:24;;;:::i;:::-;3255:157::o;2410:424::-;-1:-1:-1;;;;;;;;;;;2939:104:24;;2445:359;;2410:424;825:9844:45;;;;2928:1:24;825:9844:45;;;2928:1:24;825:9844:45;2410:424:24:o;2445:359::-;825:9844:45;;2645:67:24;;;;825:9844:45;;;;1671:64:24;;;825:9844:45;;;1671:64:24;2705:4;825:9844:45;;;1671:64:24;825:9844:45;2645:67:24;;825:9844:45;1671:64:24;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;-1:-1:-1;1671:64:24;2534:196;;1671:64;;;;825:9844:45;1671:64:24;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;3615:277;-1:-1:-1;;;;;825:9844:45;;;;;3678:6:24;;;3674:212;;3615:277;;:::o;3674:212::-;825:9844:45;;;;-1:-1:-1;;;;;;;;;;;825:9844:45;;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;3705:44:24;825:9844:45;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;;;;;;;;3768:34:24;;;;;;;;825:9844:45;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;;;;;;;;3821:34:24;;;;;:::i;1998:108:27:-;-1:-1:-1;;;;;;;;;;;2049:22:27;;;;;825:9844:45;;-1:-1:-1;;;2049:22:27;;-1:-1:-1;;;;;825:9844:45;;;2049:22:27;;;825:9844:45;;;-1:-1:-1;;;825:9844:45;;;1671:64:24;2049:22:27;;;825:9844:45;;;2049:22:27;;;;;;;;;;1998:108;2081:18;;;;;;825:9844:45;;;;;;;;;;;;;;;2081:18:27;;2049:22;2081:18;;825:9844:45;2081:18:27;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;825:9844:45;;;;;;;;;;;;;;;;-1:-1:-1;;;825:9844:45;;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "factoryProxy()": "7509c39b",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensClaim()": "d20c8819",
    "frensInitialiser()": "32551a60",
    "frensMetaHelper()": "bc48e947",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "proxy()": "ec556889",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testApprove()": "1aeb10a6",
    "testBalanceOf()": "3df77c0e",
    "testGetPoolById()": "87496250",
    "testIsApprovedForAll()": "09d26b6c",
    "testMintingDirectly()": "796a773d",
    "testOwner()": "9e535c69",
    "testOwnerOf()": "71a29bb7",
    "testSafeTransferFrom()": "90ec5d96",
    "testTokenByIndex()": "6a7179c3",
    "testTransferFrom()": "70557298",
    "testexists()": "524ad495",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryProxy\",\"outputs\":[{\"internalType\":\"contract FactoryProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensClaim\",\"outputs\":[{\"internalType\":\"contract FrensClaim\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensInitialiser\",\"outputs\":[{\"internalType\":\"contract FrensInitialiser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract IStakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testGetPoolById\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testIsApprovedForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testMintingDirectly\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwnerOf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testSafeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTokenByIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testexists\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/FrensPoolShareTest.t.sol\":\"MiscTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101\",\"dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh\"]},\"contracts/FrensArt.sol\":{\"keccak256\":\"0x10bfe1e720b429c6fea0a121fb1e15448048452b7d48be0bec7e01937d11b459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://711f4df83c0b1f2862f496ecd7a89be2c83fdcef94107512ce96be4e7e086a65\",\"dweb:/ipfs/QmQVHLxZ8WgxrusTYvfNUPmGfL62D2YC3Fj9i5u8VY7sU4\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/FrensClaim.sol\":{\"keccak256\":\"0x7b194d069a95c9746b171c5177e1e62bd37a81911bbddf23313849c62dc7f4b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4b23af6443efc08abb528d6e8958deaead33cfdb7479bb953ea2311364e4a2b\",\"dweb:/ipfs/Qmbm3YrPLJ9jgKxeeBgwHq6HpHyBBVNZD17BWdzL1xL3Ar\"]},\"contracts/FrensInitialiser.sol\":{\"keccak256\":\"0x98857d91ad48e11ef56e719cb1dd7d585f509dcdb8c5c30ac2cd16810ed794dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5ea731a961ddebe47c0b9944901651f6e441afe955b9568d9452651993f7ee\",\"dweb:/ipfs/QmPL2Lc68EScXaFiMUBZ7T8udeWMdRecxBeCGrdEVU4HQh\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x54ba5918116ad07ce968b6d239eaac02b9e38458af631e8ae0f0fcbc14e39af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d7ccdb3253aa2b058ed2996057999393c684405cab86af29948c3a418b994f3\",\"dweb:/ipfs/QmP3m9nxiqpqhEhrZb9RSqrZKyGhYsAcELTMYPWJ4Yzmbh\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x0d648c40b7666f04c277501c81d770458f4beeaee493b781d7185272deb849dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0c4426e3a8ca0191da6fd4beb5e9532a1fda6c0e1bbc7237f331c49aa07b863\",\"dweb:/ipfs/Qmbqd4THWT5CoED9gMkJ3Ss3hiu12aVS3c1wp4dj2ihH3J\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xce33aeb0f23813dac45144d017246b481340113d0cf97649c1cd350406dbed87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcadf57aa1b50e16bf6fa7ee3a8dc5a05aad90fd412b8421c6c89793200e9e92\",\"dweb:/ipfs/QmSvkvwBE1gNxEs4MJPXaaLe177AEEkamKiuK4PaEnfTGx\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709\",\"dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0xc8e916c9f8b7efa72e4aefa66846362c43594de29c921d16e9bb4bee0d02b6d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a909faee1bdc923d22ab5a716b6f2136061e8752d710f267c53346f38360886\",\"dweb:/ipfs/QmPzfQ6QvBSN4r6tXqkvQgzD4bRfbCW2NbjP9duDd4afcZ\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f\",\"dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3\"]},\"contracts/ToColor.sol\":{\"keccak256\":\"0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359\",\"dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655\",\"dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0x643308572ba7413d67a1147b87179e4b2ab606336da93d6fb5394e5d60579cc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2a3896dc94dc604907a5ce8b2e6b79881a2003d3979a1a0716165b26d5750cf\",\"dweb:/ipfs/QmWry7rMSiySd6dX6XCNGstRSiigUwhqiNYJxVRN6apR7i\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2\",\"dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009\",\"dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/ISSVRegistry.sol\":{\"keccak256\":\"0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4\",\"dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278\",\"dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/FrensPoolShareTest.t.sol\":{\"keccak256\":\"0x5a34ba8f796369f6ec953242dbde5392aa1316ead9aaa412a1d1f4a097a38085\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://85144b5c8f647b5213a3ddf9bbcc8584a6cee9495d6d4b7e6f28739ec1d0ea47\",\"dweb:/ipfs/QmR4LLSUney2Csemsk83Hgn6L2LVG3MzRZrtUSFMAUyUNL\"]},\"test/foundry/TestHelper.sol\":{\"keccak256\":\"0x661367673c9dad11fcebbacbef6c5d0ae670307103e624c4ec201c125a22dd1a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://980d227dcdc42abaefd67d0991c59d6c84f1167753e634a27cefe81eaced2f26\",\"dweb:/ipfs/QmS4Guqxc1SnjA9n4ob2f5AMU4EZaBcNDEBEw28Pt4heeb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryProxy",
          "outputs": [
            {
              "internalType": "contract FactoryProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensClaim",
          "outputs": [
            {
              "internalType": "contract FrensClaim",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensInitialiser",
          "outputs": [
            {
              "internalType": "contract FrensInitialiser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxy",
          "outputs": [
            {
              "internalType": "contract IStakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testApprove"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testGetPoolById"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testIsApprovedForAll"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testMintingDirectly"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwnerOf"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testSafeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTokenByIndex"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testexists"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/FrensPoolShareTest.t.sol": "MiscTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2",
        "urls": [
          "bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101",
          "dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh"
        ],
        "license": "MIT"
      },
      "contracts/FrensArt.sol": {
        "keccak256": "0x10bfe1e720b429c6fea0a121fb1e15448048452b7d48be0bec7e01937d11b459",
        "urls": [
          "bzz-raw://711f4df83c0b1f2862f496ecd7a89be2c83fdcef94107512ce96be4e7e086a65",
          "dweb:/ipfs/QmQVHLxZ8WgxrusTYvfNUPmGfL62D2YC3Fj9i5u8VY7sU4"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/FrensClaim.sol": {
        "keccak256": "0x7b194d069a95c9746b171c5177e1e62bd37a81911bbddf23313849c62dc7f4b6",
        "urls": [
          "bzz-raw://b4b23af6443efc08abb528d6e8958deaead33cfdb7479bb953ea2311364e4a2b",
          "dweb:/ipfs/Qmbm3YrPLJ9jgKxeeBgwHq6HpHyBBVNZD17BWdzL1xL3Ar"
        ],
        "license": "MIT"
      },
      "contracts/FrensInitialiser.sol": {
        "keccak256": "0x98857d91ad48e11ef56e719cb1dd7d585f509dcdb8c5c30ac2cd16810ed794dc",
        "urls": [
          "bzz-raw://9c5ea731a961ddebe47c0b9944901651f6e441afe955b9568d9452651993f7ee",
          "dweb:/ipfs/QmPL2Lc68EScXaFiMUBZ7T8udeWMdRecxBeCGrdEVU4HQh"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x54ba5918116ad07ce968b6d239eaac02b9e38458af631e8ae0f0fcbc14e39af0",
        "urls": [
          "bzz-raw://2d7ccdb3253aa2b058ed2996057999393c684405cab86af29948c3a418b994f3",
          "dweb:/ipfs/QmP3m9nxiqpqhEhrZb9RSqrZKyGhYsAcELTMYPWJ4Yzmbh"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x0d648c40b7666f04c277501c81d770458f4beeaee493b781d7185272deb849dc",
        "urls": [
          "bzz-raw://c0c4426e3a8ca0191da6fd4beb5e9532a1fda6c0e1bbc7237f331c49aa07b863",
          "dweb:/ipfs/Qmbqd4THWT5CoED9gMkJ3Ss3hiu12aVS3c1wp4dj2ihH3J"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0xce33aeb0f23813dac45144d017246b481340113d0cf97649c1cd350406dbed87",
        "urls": [
          "bzz-raw://dcadf57aa1b50e16bf6fa7ee3a8dc5a05aad90fd412b8421c6c89793200e9e92",
          "dweb:/ipfs/QmSvkvwBE1gNxEs4MJPXaaLe177AEEkamKiuK4PaEnfTGx"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf",
        "urls": [
          "bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709",
          "dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0xc8e916c9f8b7efa72e4aefa66846362c43594de29c921d16e9bb4bee0d02b6d7",
        "urls": [
          "bzz-raw://9a909faee1bdc923d22ab5a716b6f2136061e8752d710f267c53346f38360886",
          "dweb:/ipfs/QmPzfQ6QvBSN4r6tXqkvQgzD4bRfbCW2NbjP9duDd4afcZ"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9",
        "urls": [
          "bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f",
          "dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3"
        ],
        "license": "MIT"
      },
      "contracts/ToColor.sol": {
        "keccak256": "0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd",
        "urls": [
          "bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359",
          "dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f",
        "urls": [
          "bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655",
          "dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0x643308572ba7413d67a1147b87179e4b2ab606336da93d6fb5394e5d60579cc2",
        "urls": [
          "bzz-raw://f2a3896dc94dc604907a5ce8b2e6b79881a2003d3979a1a0716165b26d5750cf",
          "dweb:/ipfs/QmWry7rMSiySd6dX6XCNGstRSiigUwhqiNYJxVRN6apR7i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6",
        "urls": [
          "bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2",
          "dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c",
        "urls": [
          "bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009",
          "dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISSVRegistry.sol": {
        "keccak256": "0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f",
        "urls": [
          "bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4",
          "dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a",
        "urls": [
          "bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278",
          "dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/FrensPoolShareTest.t.sol": {
        "keccak256": "0x5a34ba8f796369f6ec953242dbde5392aa1316ead9aaa412a1d1f4a097a38085",
        "urls": [
          "bzz-raw://85144b5c8f647b5213a3ddf9bbcc8584a6cee9495d6d4b7e6f28739ec1d0ea47",
          "dweb:/ipfs/QmR4LLSUney2Csemsk83Hgn6L2LVG3MzRZrtUSFMAUyUNL"
        ],
        "license": "UNLICENSED"
      },
      "test/foundry/TestHelper.sol": {
        "keccak256": "0x661367673c9dad11fcebbacbef6c5d0ae670307103e624c4ec201c125a22dd1a",
        "urls": [
          "bzz-raw://980d227dcdc42abaefd67d0991c59d6c84f1167753e634a27cefe81eaced2f26",
          "dweb:/ipfs/QmS4Guqxc1SnjA9n4ob2f5AMU4EZaBcNDEBEw28Pt4heeb"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/FrensPoolShareTest.t.sol",
    "id": 31438,
    "exportedSymbols": {
      "Address": [
        29961
      ],
      "Base64": [
        30337
      ],
      "BoolGetter": [
        34841
      ],
      "Context": [
        29983
      ],
      "DSTest": [
        6755
      ],
      "ERC165": [
        30210
      ],
      "ERC721": [
        29134
      ],
      "ERC721Enumerable": [
        29606
      ],
      "FactoryProxy": [
        58
      ],
      "FrensArt": [
        245
      ],
      "FrensBase": [
        836
      ],
      "FrensClaim": [
        921
      ],
      "FrensInitialiser": [
        1074
      ],
      "FrensMetaHelper": [
        1483
      ],
      "FrensPoolShare": [
        1629
      ],
      "FrensPoolShareTokenURI": [
        1971
      ],
      "FrensStorage": [
        2601
      ],
      "IDepositContract": [
        4214
      ],
      "IENS": [
        4351
      ],
      "IERC165": [
        30222
      ],
      "IERC721": [
        29250
      ],
      "IERC721Enumerable": [
        29637
      ],
      "IERC721Metadata": [
        29664
      ],
      "IERC721Receiver": [
        29268
      ],
      "IFrensArt": [
        4361
      ],
      "IFrensClaim": [
        4372
      ],
      "IFrensMetaHelper": [
        4408
      ],
      "IFrensPoolShare": [
        4447
      ],
      "IFrensPoolShareTokenURI": [
        4457
      ],
      "IFrensStorage": [
        4653
      ],
      "IMaliciousProxyInterface": [
        34816
      ],
      "IReverseResolver": [
        4663
      ],
      "ISSVRegistry": [
        4865
      ],
      "IStakingPool": [
        4956
      ],
      "IStakingPoolFactory": [
        4968
      ],
      "MiscTest": [
        31437
      ],
      "NftReceiver": [
        34890
      ],
      "Ownable": [
        28300
      ],
      "Script": [
        7018
      ],
      "StakingPool": [
        3976
      ],
      "StakingPoolFactory": [
        4119
      ],
      "StdStorage": [
        10046
      ],
      "Strings": [
        30186
      ],
      "Test": [
        9948
      ],
      "ToColor": [
        4195
      ],
      "Vm": [
        12067
      ],
      "console": [
        20131
      ],
      "console2": [
        28195
      ],
      "stdError": [
        10018
      ],
      "stdJson": [
        7378
      ],
      "stdMath": [
        11287
      ],
      "stdStorage": [
        11148
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:10631:45",
    "nodes": [
      {
        "id": 30339,
        "nodeType": "PragmaDirective",
        "src": "39:24:45",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30340,
        "nodeType": "ImportDirective",
        "src": "181:28:45",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 11288,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30341,
        "nodeType": "ImportDirective",
        "src": "229:38:45",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 246,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30342,
        "nodeType": "ImportDirective",
        "src": "268:46:45",
        "nodes": [],
        "absolutePath": "contracts/FrensInitialiser.sol",
        "file": "../../contracts/FrensInitialiser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 1075,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30343,
        "nodeType": "ImportDirective",
        "src": "315:45:45",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 1484,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30344,
        "nodeType": "ImportDirective",
        "src": "361:52:45",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 1972,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30345,
        "nodeType": "ImportDirective",
        "src": "414:42:45",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 2602,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30346,
        "nodeType": "ImportDirective",
        "src": "457:42:45",
        "nodes": [],
        "absolutePath": "contracts/FactoryProxy.sol",
        "file": "../../contracts/FactoryProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 59,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30347,
        "nodeType": "ImportDirective",
        "src": "500:41:45",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 3977,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30348,
        "nodeType": "ImportDirective",
        "src": "542:48:45",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 4120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30349,
        "nodeType": "ImportDirective",
        "src": "591:40:45",
        "nodes": [],
        "absolutePath": "contracts/FrensClaim.sol",
        "file": "../../contracts/FrensClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 922,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30350,
        "nodeType": "ImportDirective",
        "src": "632:44:45",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 1630,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30351,
        "nodeType": "ImportDirective",
        "src": "677:60:45",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 4969,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30352,
        "nodeType": "ImportDirective",
        "src": "738:57:45",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 4215,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30353,
        "nodeType": "ImportDirective",
        "src": "796:26:45",
        "nodes": [],
        "absolutePath": "test/foundry/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31438,
        "sourceUnit": 34891,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31437,
        "nodeType": "ContractDefinition",
        "src": "825:9844:45",
        "nodes": [
          {
            "id": 30358,
            "nodeType": "VariableDeclaration",
            "src": "857:24:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "873:8:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$245",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 30357,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30356,
                "name": "FrensArt",
                "nameLocations": [
                  "857:8:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 245,
                "src": "857:8:45"
              },
              "referencedDeclaration": 245,
              "src": "857:8:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$245",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30361,
            "nodeType": "VariableDeclaration",
            "src": "887:40:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "32551a60",
            "mutability": "mutable",
            "name": "frensInitialiser",
            "nameLocation": "911:16:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
              "typeString": "contract FrensInitialiser"
            },
            "typeName": {
              "id": 30360,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30359,
                "name": "FrensInitialiser",
                "nameLocations": [
                  "887:16:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1074,
                "src": "887:16:45"
              },
              "referencedDeclaration": 1074,
              "src": "887:16:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                "typeString": "contract FrensInitialiser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30364,
            "nodeType": "VariableDeclaration",
            "src": "933:38:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "956:15:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 30363,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30362,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "933:15:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1483,
                "src": "933:15:45"
              },
              "referencedDeclaration": 1483,
              "src": "933:15:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30367,
            "nodeType": "VariableDeclaration",
            "src": "977:52:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "1007:22:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 30366,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30365,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "977:22:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1971,
                "src": "977:22:45"
              },
              "referencedDeclaration": 1971,
              "src": "977:22:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30370,
            "nodeType": "VariableDeclaration",
            "src": "1035:32:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "1055:12:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$2601",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 30369,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30368,
                "name": "FrensStorage",
                "nameLocations": [
                  "1035:12:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2601,
                "src": "1035:12:45"
              },
              "referencedDeclaration": 2601,
              "src": "1035:12:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$2601",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30373,
            "nodeType": "VariableDeclaration",
            "src": "1073:32:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "7509c39b",
            "mutability": "mutable",
            "name": "factoryProxy",
            "nameLocation": "1093:12:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryProxy_$58",
              "typeString": "contract FactoryProxy"
            },
            "typeName": {
              "id": 30372,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30371,
                "name": "FactoryProxy",
                "nameLocations": [
                  "1073:12:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58,
                "src": "1073:12:45"
              },
              "referencedDeclaration": 58,
              "src": "1073:12:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                "typeString": "contract FactoryProxy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30376,
            "nodeType": "VariableDeclaration",
            "src": "1111:44:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1137:18:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 30375,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30374,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1111:18:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4119,
                "src": "1111:18:45"
              },
              "referencedDeclaration": 4119,
              "src": "1111:18:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30379,
            "nodeType": "VariableDeclaration",
            "src": "1161:30:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1180:11:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$3976",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30378,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30377,
                "name": "StakingPool",
                "nameLocations": [
                  "1161:11:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3976,
                "src": "1161:11:45"
              },
              "referencedDeclaration": 3976,
              "src": "1161:11:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$3976",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30382,
            "nodeType": "VariableDeclaration",
            "src": "1197:31:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1216:12:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$3976",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30381,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30380,
                "name": "StakingPool",
                "nameLocations": [
                  "1197:11:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3976,
                "src": "1197:11:45"
              },
              "referencedDeclaration": 3976,
              "src": "1197:11:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$3976",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30385,
            "nodeType": "VariableDeclaration",
            "src": "1234:36:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1256:14:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 30384,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30383,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1234:14:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1629,
                "src": "1234:14:45"
              },
              "referencedDeclaration": 1629,
              "src": "1234:14:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30388,
            "nodeType": "VariableDeclaration",
            "src": "1276:32:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec556889",
            "mutability": "mutable",
            "name": "proxy",
            "nameLocation": "1303:5:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
              "typeString": "contract IStakingPoolFactory"
            },
            "typeName": {
              "id": 30387,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30386,
                "name": "IStakingPoolFactory",
                "nameLocations": [
                  "1276:19:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4968,
                "src": "1276:19:45"
              },
              "referencedDeclaration": 4968,
              "src": "1276:19:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
                "typeString": "contract IStakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30391,
            "nodeType": "VariableDeclaration",
            "src": "1314:28:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "d20c8819",
            "mutability": "mutable",
            "name": "frensClaim",
            "nameLocation": "1332:10:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensClaim_$921",
              "typeString": "contract FrensClaim"
            },
            "typeName": {
              "id": 30390,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30389,
                "name": "FrensClaim",
                "nameLocations": [
                  "1314:10:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 921,
                "src": "1314:10:45"
              },
              "referencedDeclaration": 921,
              "src": "1314:10:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensClaim_$921",
                "typeString": "contract FrensClaim"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30397,
            "nodeType": "VariableDeclaration",
            "src": "1363:84:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1386:7:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30392,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1363:15:45",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 30395,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1404:42:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30394,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1396:8:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30393,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1396:8:45",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30396,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1396:51:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30400,
            "nodeType": "VariableDeclaration",
            "src": "1558:78:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1573:18:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30398,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1558:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 30399,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1594:42:45",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 30403,
            "nodeType": "VariableDeclaration",
            "src": "1642:70:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1657:10:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30401,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1642:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 30402,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1670:42:45",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 30409,
            "nodeType": "VariableDeclaration",
            "src": "1719:60:45",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1736:15:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$4214",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 30405,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30404,
                "name": "IDepositContract",
                "nameLocations": [
                  "1719:16:45"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4214,
                "src": "1719:16:45"
              },
              "referencedDeclaration": 4214,
              "src": "1719:16:45",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$4214",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 30407,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30397,
                  "src": "1771:7:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 30406,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4214,
                "src": "1754:16:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$4214_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 30408,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1754:25:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$4214",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30412,
            "nodeType": "VariableDeclaration",
            "src": "1786:69:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1801:9:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30410,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1786:7:45",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 30411,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1813:42:45",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 30418,
            "nodeType": "VariableDeclaration",
            "src": "1861:82:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1884:5:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30413,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1861:15:45",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 30416,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1900:42:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30415,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1892:8:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30414,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1892:8:45",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30417,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1892:51:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30424,
            "nodeType": "VariableDeclaration",
            "src": "1949:80:45",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1972:3:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30419,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1949:15:45",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 30422,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1986:42:45",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30421,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1978:8:45",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30420,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1978:8:45",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30423,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1978:51:45",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30427,
            "nodeType": "VariableDeclaration",
            "src": "2036:116:45",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "2042:6:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30425,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2036:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7",
              "id": 30426,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2051:101:45",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bdfcfb749742c3093aa9581e8ef2ad1af416ff72460d5243d448d690ad5323e3",
                "typeString": "literal_string hex\"b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30430,
            "nodeType": "VariableDeclaration",
            "src": "2158:100:45",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2164:22:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30428,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2158:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c",
              "id": 30429,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2189:69:45",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5d67e6bdff9aea033a87277a58dc16c10570179f0e67537385b6a1ef5aafe5d7",
                "typeString": "literal_string hex\"010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30433,
            "nodeType": "VariableDeclaration",
            "src": "2264:215:45",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2270:9:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30431,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2264:5:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3",
              "id": 30432,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2282:197:45",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92410a21b5a1c3f6142a52b50473f8a72585ecd3f6161746c16dd03094aaf9d4",
                "typeString": "literal_string hex\"b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30436,
            "nodeType": "VariableDeclaration",
            "src": "2485:94:45",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2493:17:45",
            "scope": 31437,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 30434,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2485:7:45",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834333632613038353937613136373037623466396364653838616132653964353164313737373562363734393037323630373263653838393731323864346332",
              "id": 30435,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2513:66:45",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30479219748484076069933062356768087265247727824042884735859412202213029237954_by_1",
                "typeString": "int_const 3047...(69 digits omitted)...7954"
              },
              "value": "0x4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c2"
            },
            "visibility": "internal"
          },
          {
            "id": 30730,
            "nodeType": "FunctionDefinition",
            "src": "2586:3062:45",
            "nodes": [],
            "body": {
              "id": 30729,
              "nodeType": "Block",
              "src": "2610:3038:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30439,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30370,
                      "src": "2641:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$2601",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2656:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$2601_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 30441,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30440,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2660:12:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2601,
                            "src": "2660:12:45"
                          },
                          "referencedDeclaration": 2601,
                          "src": "2660:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 30443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2656:18:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$2601",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2641:33:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$2601",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 30445,
                  "nodeType": "ExpressionStatement",
                  "src": "2641:33:45"
                },
                {
                  "expression": {
                    "id": 30452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30446,
                      "name": "factoryProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30373,
                      "src": "2703:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30450,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "2735:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2718:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FactoryProxy_$58_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FactoryProxy)"
                        },
                        "typeName": {
                          "id": 30448,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30447,
                            "name": "FactoryProxy",
                            "nameLocations": [
                              "2722:12:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 58,
                            "src": "2722:12:45"
                          },
                          "referencedDeclaration": 58,
                          "src": "2722:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FactoryProxy_$58",
                            "typeString": "contract FactoryProxy"
                          }
                        }
                      },
                      "id": 30451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2718:30:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "src": "2703:45:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryProxy_$58",
                      "typeString": "contract FactoryProxy"
                    }
                  },
                  "id": 30453,
                  "nodeType": "ExpressionStatement",
                  "src": "2703:45:45"
                },
                {
                  "expression": {
                    "id": 30461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30454,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30388,
                      "src": "2801:5:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30458,
                              "name": "factoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30373,
                              "src": "2837:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            ],
                            "id": 30457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2829:7:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30456,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2829:7:45",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2829:21:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30455,
                        "name": "IStakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4968,
                        "src": "2809:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakingPoolFactory_$4968_$",
                          "typeString": "type(contract IStakingPoolFactory)"
                        }
                      },
                      "id": 30460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2809:42:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "src": "2801:50:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
                      "typeString": "contract IStakingPoolFactory"
                    }
                  },
                  "id": 30462,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:50:45"
                },
                {
                  "expression": {
                    "id": 30469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30463,
                      "name": "frensInitialiser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30361,
                      "src": "2886:16:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30467,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "2926:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2905:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FrensInitialiser_$1074_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensInitialiser)"
                        },
                        "typeName": {
                          "id": 30465,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30464,
                            "name": "FrensInitialiser",
                            "nameLocations": [
                              "2909:16:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1074,
                            "src": "2909:16:45"
                          },
                          "referencedDeclaration": 1074,
                          "src": "2909:16:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                            "typeString": "contract FrensInitialiser"
                          }
                        }
                      },
                      "id": 30468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2905:34:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "src": "2886:53:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                      "typeString": "contract FrensInitialiser"
                    }
                  },
                  "id": 30470,
                  "nodeType": "ExpressionStatement",
                  "src": "2886:53:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30476,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3035:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30475,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3027:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30474,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3027:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3027:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30480,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3050:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3042:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3042:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3042:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30471,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "3018:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3021:5:45",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11524,
                      "src": "3018:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 30482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:38:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30483,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:38:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30489,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30361,
                            "src": "3101:16:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 30488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3093:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30487,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3093:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3093:25:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73496e697469616c69736572",
                        "id": 30491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3120:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        },
                        "value": "FrensInitialiser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        }
                      ],
                      "expression": {
                        "id": 30484,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3064:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3081:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "3064:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3064:75:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30493,
                  "nodeType": "ExpressionStatement",
                  "src": "3064:75:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30497,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30400,
                        "src": "3215:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5353565265676973747279",
                        "id": 30498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3235:13:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        },
                        "value": "SSVRegistry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        }
                      ],
                      "expression": {
                        "id": 30494,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3178:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3195:19:45",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "3178:36:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3178:71:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30500,
                  "nodeType": "ExpressionStatement",
                  "src": "3178:71:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30504,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30397,
                        "src": "3330:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "4465706f736974436f6e7472616374",
                        "id": 30505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3339:17:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        },
                        "value": "DepositContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        }
                      ],
                      "expression": {
                        "id": 30501,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3293:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3310:19:45",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "3293:36:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:64:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30507,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:64:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30511,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30403,
                        "src": "3426:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "454e53",
                        "id": 30512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3438:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        },
                        "value": "ENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        }
                      ],
                      "expression": {
                        "id": 30508,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3389:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3406:19:45",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1073,
                      "src": "3389:36:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3389:55:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30514,
                  "nodeType": "ExpressionStatement",
                  "src": "3389:55:45"
                },
                {
                  "expression": {
                    "id": 30521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30515,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30385,
                      "src": "3480:14:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30519,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "3516:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3497:18:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FrensPoolShare_$1629_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 30517,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30516,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3501:14:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1629,
                            "src": "3501:14:45"
                          },
                          "referencedDeclaration": 1629,
                          "src": "3501:14:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 30520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3497:32:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3480:49:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 30522,
                  "nodeType": "ExpressionStatement",
                  "src": "3480:49:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30528,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "3606:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 30527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3598:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30526,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3598:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3598:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265",
                        "id": 30530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3623:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        },
                        "value": "FrensPoolShare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        }
                      ],
                      "expression": {
                        "id": 30523,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3569:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3586:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "3569:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3569:71:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30532,
                  "nodeType": "ExpressionStatement",
                  "src": "3569:71:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30538,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "3691:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 30537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3683:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30536,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3683:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3683:23:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3708:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30533,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3648:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3665:17:45",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 957,
                      "src": "3648:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:66:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30542,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:66:45"
                },
                {
                  "expression": {
                    "id": 30549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30543,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30376,
                      "src": "3745:18:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30547,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "3789:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3766:22:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_StakingPoolFactory_$4119_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 30545,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30544,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3770:18:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4119,
                            "src": "3770:18:45"
                          },
                          "referencedDeclaration": 4119,
                          "src": "3770:18:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 30548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3766:36:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3745:57:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 30550,
                  "nodeType": "ExpressionStatement",
                  "src": "3745:57:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30556,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30376,
                            "src": "3874:18:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4119",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3866:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30554,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3866:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3866:27:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67506f6f6c466163746f7279",
                        "id": 30558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:20:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        },
                        "value": "StakingPoolFactory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        }
                      ],
                      "expression": {
                        "id": 30551,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "3837:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3854:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "3837:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3837:79:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30560,
                  "nodeType": "ExpressionStatement",
                  "src": "3837:79:45"
                },
                {
                  "expression": {
                    "id": 30567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30561,
                      "name": "frensClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30391,
                      "src": "3946:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$921",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30565,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "3974:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3959:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FrensClaim_$921_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensClaim)"
                        },
                        "typeName": {
                          "id": 30563,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30562,
                            "name": "FrensClaim",
                            "nameLocations": [
                              "3963:10:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 921,
                            "src": "3963:10:45"
                          },
                          "referencedDeclaration": 921,
                          "src": "3963:10:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensClaim_$921",
                            "typeString": "contract FrensClaim"
                          }
                        }
                      },
                      "id": 30566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3959:28:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$921",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "src": "3946:41:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensClaim_$921",
                      "typeString": "contract FrensClaim"
                    }
                  },
                  "id": 30568,
                  "nodeType": "ExpressionStatement",
                  "src": "3946:41:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30574,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30391,
                            "src": "4058:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$921",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$921",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 30573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4050:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30572,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4050:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4050:19:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73436c61696d",
                        "id": 30576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4071:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        },
                        "value": "FrensClaim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        }
                      ],
                      "expression": {
                        "id": 30569,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4021:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4038:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "4021:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4021:63:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30578,
                  "nodeType": "ExpressionStatement",
                  "src": "4021:63:45"
                },
                {
                  "expression": {
                    "id": 30585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30579,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30364,
                      "src": "4118:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30583,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "4156:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4136:19:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FrensMetaHelper_$1483_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 30581,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30580,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "4140:15:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1483,
                            "src": "4140:15:45"
                          },
                          "referencedDeclaration": 1483,
                          "src": "4140:15:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 30584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4136:33:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "4118:51:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 30586,
                  "nodeType": "ExpressionStatement",
                  "src": "4118:51:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30592,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30364,
                            "src": "4244:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4236:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4236:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4236:24:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d65746148656c706572",
                        "id": 30594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4262:17:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        },
                        "value": "FrensMetaHelper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        }
                      ],
                      "expression": {
                        "id": 30587,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4207:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4224:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "4207:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4207:73:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30596,
                  "nodeType": "ExpressionStatement",
                  "src": "4207:73:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30602,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30364,
                            "src": "4331:15:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1483",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4323:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4323:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4323:24:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4349:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30597,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4288:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4305:17:45",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 957,
                      "src": "4288:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4288:67:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30606,
                  "nodeType": "ExpressionStatement",
                  "src": "4288:67:45"
                },
                {
                  "expression": {
                    "id": 30613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30607,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30367,
                      "src": "4387:22:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30611,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "4439:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4412:26:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FrensPoolShareTokenURI_$1971_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 30609,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30608,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4416:22:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1971,
                            "src": "4416:22:45"
                          },
                          "referencedDeclaration": 1971,
                          "src": "4416:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 30612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4412:40:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "4387:65:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 30614,
                  "nodeType": "ExpressionStatement",
                  "src": "4387:65:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30620,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30367,
                            "src": "4525:22:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4517:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30618,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4517:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4517:31:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                        "id": 30622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4550:24:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        },
                        "value": "FrensPoolShareTokenURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        }
                      ],
                      "expression": {
                        "id": 30615,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4488:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4505:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "4488:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4488:87:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30624,
                  "nodeType": "ExpressionStatement",
                  "src": "4488:87:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30630,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30367,
                            "src": "4626:22:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1971",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4618:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30628,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4618:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4618:31:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4651:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30625,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4583:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4600:17:45",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 957,
                      "src": "4583:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4583:74:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30634,
                  "nodeType": "ExpressionStatement",
                  "src": "4583:74:45"
                },
                {
                  "expression": {
                    "id": 30641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30635,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30358,
                      "src": "4683:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$245",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30639,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30370,
                          "src": "4707:12:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2601",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4694:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4653_$returns$_t_contract$_FrensArt_$245_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 30637,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30636,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4698:8:45"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 245,
                            "src": "4698:8:45"
                          },
                          "referencedDeclaration": 245,
                          "src": "4698:8:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$245",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 30640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4694:26:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$245",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4683:37:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$245",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 30642,
                  "nodeType": "ExpressionStatement",
                  "src": "4683:37:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30648,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30358,
                            "src": "4788:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$245",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$245",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 30647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4780:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30646,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4780:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4780:17:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73417274",
                        "id": 30650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4799:10:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        },
                        "value": "FrensArt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        }
                      ],
                      "expression": {
                        "id": 30643,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4751:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4768:11:45",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1000,
                      "src": "4751:28:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4751:59:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30652,
                  "nodeType": "ExpressionStatement",
                  "src": "4751:59:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30658,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30358,
                            "src": "4861:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$245",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$245",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 30657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4853:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30656,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4853:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4853:17:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4872:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30653,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30361,
                        "src": "4818:16:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1074",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4835:17:45",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 957,
                      "src": "4818:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 30661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4818:60:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30662,
                  "nodeType": "ExpressionStatement",
                  "src": "4818:60:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30668,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4977:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4969:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30666,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4969:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4969:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30672,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4992:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 30671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4984:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30670,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4984:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4984:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30663,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "4960:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4963:5:45",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11524,
                      "src": "4960:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 30674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4960:38:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30675,
                  "nodeType": "ExpressionStatement",
                  "src": "4960:38:45"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30676,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30370,
                        "src": "5006:12:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$2601",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 30678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5019:17:45",
                      "memberName": "setDeployedStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2167,
                      "src": "5006:30:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 30679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5006:32:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30680,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:32:45"
                },
                {
                  "assignments": [
                    30682
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30682,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5107:4:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 30729,
                      "src": "5099:12:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30681,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5099:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30688,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30685,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30412,
                        "src": "5128:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5139:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30683,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30388,
                        "src": "5115:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 30684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5121:6:45",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4967,
                      "src": "5115:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5115:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5098:47:45"
                },
                {
                  "expression": {
                    "id": 30696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30689,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30379,
                      "src": "5185:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3976",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30693,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30682,
                              "src": "5219:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5211:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30691,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5211:8:45",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5211:13:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30690,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3976,
                        "src": "5199:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$3976_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5199:26:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3976",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "5185:40:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$3976",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30697,
                  "nodeType": "ExpressionStatement",
                  "src": "5185:40:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f6f6c",
                        "id": 30701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5319:6:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e35b2940ca10a9581573918a0d9ed2422f97cc9196f63510c77f5a0ed5393cfd",
                          "typeString": "literal_string \"pool\""
                        },
                        "value": "pool"
                      },
                      {
                        "id": 30702,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30682,
                        "src": "5327:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e35b2940ca10a9581573918a0d9ed2422f97cc9196f63510c77f5a0ed5393cfd",
                          "typeString": "literal_string \"pool\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30698,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20131,
                        "src": "5307:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$20131_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5315:3:45",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12826,
                      "src": "5307:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 30703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5307:25:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30704,
                  "nodeType": "ExpressionStatement",
                  "src": "5307:25:45"
                },
                {
                  "assignments": [
                    30706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30706,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "5410:5:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 30729,
                      "src": "5402:13:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30705,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5402:7:45",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30712,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30709,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30412,
                        "src": "5432:9:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5443:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30707,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30388,
                        "src": "5419:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$4968",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 30708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5425:6:45",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4967,
                      "src": "5419:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5419:30:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5401:48:45"
                },
                {
                  "expression": {
                    "id": 30720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30713,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30382,
                      "src": "5489:12:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3976",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30717,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30706,
                              "src": "5524:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5516:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5516:8:45",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5516:14:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30714,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3976,
                        "src": "5504:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$3976_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5504:27:45",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3976",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "5489:42:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$3976",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30721,
                  "nodeType": "ExpressionStatement",
                  "src": "5489:42:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f6f6c32",
                        "id": 30725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5625:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3ae3c9bf3204aad474c94a0e6906c09b3dc39a96df696c59a58a4e922d96918",
                          "typeString": "literal_string \"pool2\""
                        },
                        "value": "pool2"
                      },
                      {
                        "id": 30726,
                        "name": "pool2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30706,
                        "src": "5634:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a3ae3c9bf3204aad474c94a0e6906c09b3dc39a96df696c59a58a4e922d96918",
                          "typeString": "literal_string \"pool2\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30722,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20131,
                        "src": "5613:7:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$20131_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30724,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5621:3:45",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12826,
                      "src": "5613:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 30727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5613:27:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30728,
                  "nodeType": "ExpressionStatement",
                  "src": "5613:27:45"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2595:5:45",
            "parameters": {
              "id": 30437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2600:2:45"
            },
            "returnParameters": {
              "id": 30438,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2610:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30753,
            "nodeType": "FunctionDefinition",
            "src": "5654:146:45",
            "nodes": [],
            "body": {
              "id": 30752,
              "nodeType": "Block",
              "src": "5692:108:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30734,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "5705:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30733,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "5700:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5700:11:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30736,
                  "nodeType": "ExpressionStatement",
                  "src": "5700:11:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "496e76616c696420506f6f6c",
                        "id": 30740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5735:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37ca368ac1df11530b6ea17ba67c80aaedb32310c29cd8124ebb0d882cd3866a",
                          "typeString": "literal_string \"Invalid Pool\""
                        },
                        "value": "Invalid Pool"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_37ca368ac1df11530b6ea17ba67c80aaedb32310c29cd8124ebb0d882cd3866a",
                          "typeString": "literal_string \"Invalid Pool\""
                        }
                      ],
                      "expression": {
                        "id": 30737,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "5719:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5722:12:45",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11553,
                      "src": "5719:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 30741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5719:31:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30742,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:31:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30748,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30418,
                            "src": "5786:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 30747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5778:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30746,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5778:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5778:14:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30743,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "5758:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 30745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5773:4:45",
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1539,
                      "src": "5758:19:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 30750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5758:35:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30751,
                  "nodeType": "ExpressionStatement",
                  "src": "5758:35:45"
                }
              ]
            },
            "functionSelector": "796a773d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintingDirectly",
            "nameLocation": "5663:19:45",
            "parameters": {
              "id": 30731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5682:2:45"
            },
            "returnParameters": {
              "id": 30732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5692:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30830,
            "nodeType": "FunctionDefinition",
            "src": "5806:589:45",
            "nodes": [],
            "body": {
              "id": 30829,
              "nodeType": "Block",
              "src": "5836:559:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30757,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "5854:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30756,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7574,
                        7595,
                        7619,
                        7643
                      ],
                      "referencedDeclaration": 7574,
                      "src": "5844:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5844:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30759,
                  "nodeType": "ExpressionStatement",
                  "src": "5844:16:45"
                },
                {
                  "assignments": [
                    30761
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30761,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "5873:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 30829,
                      "src": "5868:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30760,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5868:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30763,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30762,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5877:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5868:10:45"
                },
                {
                  "body": {
                    "id": 30827,
                    "nodeType": "Block",
                    "src": "5902:487:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30767,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "5987:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5999:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "5987:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6020:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "5987:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5987:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30773,
                        "nodeType": "ExpressionStatement",
                        "src": "5987:37:45"
                      },
                      {
                        "assignments": [
                          30775
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30775,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6041:2:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 30827,
                            "src": "6036:7:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30774,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6036:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30783,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30778,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30418,
                              "src": "6081:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30779,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30761,
                                "src": "6088:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6090:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6088:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30776,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "6046:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6061:19:45",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29346,
                            "src": "6046:34:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6046:46:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6036:56:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30785,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30775,
                                "src": "6113:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30786,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30761,
                                "src": "6119:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6113:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30784,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5238,
                              5259
                            ],
                            "referencedDeclaration": 5238,
                            "src": "6102:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6102:20:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30789,
                        "nodeType": "ExpressionStatement",
                        "src": "6102:20:45"
                      },
                      {
                        "assignments": [
                          30791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30791,
                            "mutability": "mutable",
                            "name": "shouldBeZero",
                            "nameLocation": "6141:12:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 30827,
                            "src": "6133:20:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6133:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30796,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30794,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30761,
                              "src": "6183:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30792,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "6156:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6171:11:45",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28584,
                            "src": "6156:26:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6156:29:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6133:52:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 30800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6212:1:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 30799,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6204:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30798,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6204:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6204:10:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30802,
                              "name": "shouldBeZero",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30791,
                              "src": "6216:12:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30797,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "6195:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6195:34:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30804,
                        "nodeType": "ExpressionStatement",
                        "src": "6195:34:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30808,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30424,
                              "src": "6263:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30809,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30761,
                              "src": "6268:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30805,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "6240:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6255:7:45",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28563,
                            "src": "6240:22:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 30810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6240:30:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30811,
                        "nodeType": "ExpressionStatement",
                        "src": "6240:30:45"
                      },
                      {
                        "assignments": [
                          30813
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30813,
                            "mutability": "mutable",
                            "name": "shouldBeBob",
                            "nameLocation": "6288:11:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 30827,
                            "src": "6280:19:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30812,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6280:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30818,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30816,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30761,
                              "src": "6329:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30814,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "6302:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6317:11:45",
                            "memberName": "getApproved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28584,
                            "src": "6302:26:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6302:29:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6280:51:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30820,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30424,
                              "src": "6350:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 30821,
                              "name": "shouldBeBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30813,
                              "src": "6355:11:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30819,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "6341:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6341:26:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30823,
                        "nodeType": "ExpressionStatement",
                        "src": "6341:26:45"
                      },
                      {
                        "expression": {
                          "id": 30825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6377:3:45",
                          "subExpression": {
                            "id": 30824,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30761,
                            "src": "6377:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30826,
                        "nodeType": "ExpressionStatement",
                        "src": "6377:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30764,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30761,
                      "src": "5893:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5897:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "5893:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30828,
                  "nodeType": "WhileStatement",
                  "src": "5886:503:45"
                }
              ]
            },
            "functionSelector": "1aeb10a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testApprove",
            "nameLocation": "5815:11:45",
            "parameters": {
              "id": 30754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5826:2:45"
            },
            "returnParameters": {
              "id": 30755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5836:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30885,
            "nodeType": "FunctionDefinition",
            "src": "6401:369:45",
            "nodes": [],
            "body": {
              "id": 30884,
              "nodeType": "Block",
              "src": "6433:337:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30834,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "6451:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30833,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7574,
                        7595,
                        7619,
                        7643
                      ],
                      "referencedDeclaration": 7574,
                      "src": "6441:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6441:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30836,
                  "nodeType": "ExpressionStatement",
                  "src": "6441:16:45"
                },
                {
                  "assignments": [
                    30838
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30838,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6470:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 30884,
                      "src": "6465:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30837,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6465:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30840,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6474:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6465:10:45"
                },
                {
                  "body": {
                    "id": 30882,
                    "nodeType": "Block",
                    "src": "6499:265:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30844,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "6509:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6521:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "6509:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6542:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6509:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6509:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30850,
                        "nodeType": "ExpressionStatement",
                        "src": "6509:37:45"
                      },
                      {
                        "assignments": [
                          30852
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30852,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6561:2:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 30882,
                            "src": "6556:7:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30851,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6556:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30860,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30855,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30418,
                              "src": "6601:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30856,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30838,
                                "src": "6608:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 30857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6610:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "6608:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30853,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "6566:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6581:19:45",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29346,
                            "src": "6566:34:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6566:46:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6556:56:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30862,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30852,
                                "src": "6633:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 30863,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30838,
                                "src": "6639:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6633:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30861,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5238,
                              5259
                            ],
                            "referencedDeclaration": 5238,
                            "src": "6622:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6622:20:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30866,
                        "nodeType": "ExpressionStatement",
                        "src": "6622:20:45"
                      },
                      {
                        "assignments": [
                          30868
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30868,
                            "mutability": "mutable",
                            "name": "balanceOfAlice",
                            "nameLocation": "6657:14:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 30882,
                            "src": "6652:19:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30867,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6652:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30873,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30871,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30418,
                              "src": "6699:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 30869,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "6674:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30870,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6689:9:45",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28421,
                            "src": "6674:24:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 30872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6674:31:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6652:53:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30875,
                              "name": "balanceOfAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30868,
                              "src": "6724:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30876,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30838,
                              "src": "6740:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30874,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5483,
                            "src": "6715:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6715:27:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30878,
                        "nodeType": "ExpressionStatement",
                        "src": "6715:27:45"
                      },
                      {
                        "expression": {
                          "id": 30880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6752:3:45",
                          "subExpression": {
                            "id": 30879,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30838,
                            "src": "6752:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30881,
                        "nodeType": "ExpressionStatement",
                        "src": "6752:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30841,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30838,
                      "src": "6490:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6494:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6490:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30883,
                  "nodeType": "WhileStatement",
                  "src": "6483:281:45"
                }
              ]
            },
            "functionSelector": "3df77c0e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOf",
            "nameLocation": "6410:13:45",
            "parameters": {
              "id": 30831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6423:2:45"
            },
            "returnParameters": {
              "id": 30832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6433:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30926,
            "nodeType": "FunctionDefinition",
            "src": "6776:278:45",
            "nodes": [],
            "body": {
              "id": 30925,
              "nodeType": "Block",
              "src": "6805:249:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30889,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "6823:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30888,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7574,
                        7595,
                        7619,
                        7643
                      ],
                      "referencedDeclaration": 7574,
                      "src": "6813:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6813:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30891,
                  "nodeType": "ExpressionStatement",
                  "src": "6813:16:45"
                },
                {
                  "assignments": [
                    30893
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30893,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "6849:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 30925,
                      "src": "6844:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30892,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "6844:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30895,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6853:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6844:10:45"
                },
                {
                  "body": {
                    "id": 30923,
                    "nodeType": "Block",
                    "src": "6879:162:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30902,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30893,
                                  "src": "6923:1:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30900,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30385,
                                  "src": "6901:14:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6916:6:45",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1551,
                                "src": "6901:21:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6901:24:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30899,
                            "name": "assertFalse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8086,
                              8100
                            ],
                            "referencedDeclaration": 8086,
                            "src": "6889:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6889:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30905,
                        "nodeType": "ExpressionStatement",
                        "src": "6889:37:45"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30906,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "6936:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30908,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6948:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "6936:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6969:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "6936:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6936:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30912,
                        "nodeType": "ExpressionStatement",
                        "src": "6936:37:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30916,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30893,
                                  "src": "7016:1:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30914,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30385,
                                  "src": "6994:14:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7009:6:45",
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1551,
                                "src": "6994:21:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) view external returns (bool)"
                                }
                              },
                              "id": 30917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6994:24:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30913,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5238,
                              5259
                            ],
                            "referencedDeclaration": 5238,
                            "src": "6983:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6983:36:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30919,
                        "nodeType": "ExpressionStatement",
                        "src": "6983:36:45"
                      },
                      {
                        "expression": {
                          "id": 30921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7029:3:45",
                          "subExpression": {
                            "id": 30920,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30893,
                            "src": "7029:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30922,
                        "nodeType": "ExpressionStatement",
                        "src": "7029:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30896,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30893,
                      "src": "6870:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6874:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "6870:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30924,
                  "nodeType": "WhileStatement",
                  "src": "6863:178:45"
                }
              ]
            },
            "functionSelector": "524ad495",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testexists",
            "nameLocation": "6785:10:45",
            "parameters": {
              "id": 30886,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6795:2:45"
            },
            "returnParameters": {
              "id": 30887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6805:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31018,
            "nodeType": "FunctionDefinition",
            "src": "7060:697:45",
            "nodes": [],
            "body": {
              "id": 31017,
              "nodeType": "Block",
              "src": "7094:663:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30930,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "7112:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 30929,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7574,
                        7595,
                        7619,
                        7643
                      ],
                      "referencedDeclaration": 7574,
                      "src": "7102:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 30931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30932,
                  "nodeType": "ExpressionStatement",
                  "src": "7102:16:45"
                },
                {
                  "assignments": [
                    30934
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30934,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7131:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31017,
                      "src": "7126:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 30933,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7126:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30936,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 30935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7135:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7126:10:45"
                },
                {
                  "body": {
                    "id": 31015,
                    "nodeType": "Block",
                    "src": "7160:591:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30940,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "7170:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7182:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "7170:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30944,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7203:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7170:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7170:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30946,
                        "nodeType": "ExpressionStatement",
                        "src": "7170:37:45"
                      },
                      {
                        "assignments": [
                          30948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30948,
                            "mutability": "mutable",
                            "name": "sbStakingPool",
                            "nameLocation": "7225:13:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 31015,
                            "src": "7217:21:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30947,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7217:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30953,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30951,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30934,
                              "src": "7268:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30949,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "7241:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7256:11:45",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1569,
                            "src": "7241:26:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30952,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7241:29:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7217:53:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30957,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30379,
                                  "src": "7297:11:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3976",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$3976",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30956,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7289:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30955,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7289:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7289:20:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30959,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30948,
                              "src": "7311:13:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30954,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "7280:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7280:45:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30961,
                        "nodeType": "ExpressionStatement",
                        "src": "7280:45:45"
                      },
                      {
                        "expression": {
                          "id": 30963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7335:3:45",
                          "subExpression": {
                            "id": 30962,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30934,
                            "src": "7335:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30964,
                        "nodeType": "ExpressionStatement",
                        "src": "7335:3:45"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30965,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30382,
                                "src": "7348:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7361:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "7348:26:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7382:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7348:36:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7348:38:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30971,
                        "nodeType": "ExpressionStatement",
                        "src": "7348:38:45"
                      },
                      {
                        "assignments": [
                          30973
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30973,
                            "mutability": "mutable",
                            "name": "sbStakingPool2",
                            "nameLocation": "7404:14:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 31015,
                            "src": "7396:22:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 30972,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7396:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30978,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30976,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30934,
                              "src": "7448:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30974,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "7421:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30975,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7436:11:45",
                            "memberName": "getPoolById",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1569,
                            "src": "7421:26:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 30977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7421:29:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7396:54:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 30982,
                                  "name": "stakingPool2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30382,
                                  "src": "7477:12:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3976",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$3976",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 30981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7469:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 30980,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7469:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 30983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7469:21:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 30984,
                              "name": "sbStakingPool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30973,
                              "src": "7492:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30979,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "7460:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 30985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7460:47:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30986,
                        "nodeType": "ExpressionStatement",
                        "src": "7460:47:45"
                      },
                      {
                        "expression": {
                          "id": 30988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7517:3:45",
                          "subExpression": {
                            "id": 30987,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30934,
                            "src": "7517:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 30989,
                        "nodeType": "ExpressionStatement",
                        "src": "7517:3:45"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30990,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "7530:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7542:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "7530:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 30993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7563:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7530:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7530:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30996,
                        "nodeType": "ExpressionStatement",
                        "src": "7530:37:45"
                      },
                      {
                        "expression": {
                          "id": 31002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 30997,
                            "name": "sbStakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30948,
                            "src": "7628:13:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31000,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30934,
                                "src": "7671:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30998,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30385,
                                "src": "7644:14:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7659:11:45",
                              "memberName": "getPoolById",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1569,
                              "src": "7644:26:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 31001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7644:29:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7628:45:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31003,
                        "nodeType": "ExpressionStatement",
                        "src": "7628:45:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 31007,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30379,
                                  "src": "7700:11:45",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3976",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$3976",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 31006,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7692:7:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 31005,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7692:7:45",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7692:20:45",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 31009,
                              "name": "sbStakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30948,
                              "src": "7714:13:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31004,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "7683:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 31010,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7683:45:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31011,
                        "nodeType": "ExpressionStatement",
                        "src": "7683:45:45"
                      },
                      {
                        "expression": {
                          "id": 31013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7738:3:45",
                          "subExpression": {
                            "id": 31012,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30934,
                            "src": "7738:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31014,
                        "nodeType": "ExpressionStatement",
                        "src": "7738:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 30939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 30937,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30934,
                      "src": "7151:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 30938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7155:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "7151:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31016,
                  "nodeType": "WhileStatement",
                  "src": "7144:607:45"
                }
              ]
            },
            "functionSelector": "87496250",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testGetPoolById",
            "nameLocation": "7069:15:45",
            "parameters": {
              "id": 30927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7084:2:45"
            },
            "returnParameters": {
              "id": 30928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7094:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31068,
            "nodeType": "FunctionDefinition",
            "src": "7763:357:45",
            "nodes": [],
            "body": {
              "id": 31067,
              "nodeType": "Block",
              "src": "7802:318:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31022,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "7820:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31021,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7574,
                        7595,
                        7619,
                        7643
                      ],
                      "referencedDeclaration": 7574,
                      "src": "7810:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7810:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31024,
                  "nodeType": "ExpressionStatement",
                  "src": "7810:16:45"
                },
                {
                  "assignments": [
                    31026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31026,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "7839:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31067,
                      "src": "7834:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31025,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "7834:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31028,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 31027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7843:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7834:10:45"
                },
                {
                  "body": {
                    "id": 31042,
                    "nodeType": "Block",
                    "src": "7867:69:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31032,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "7877:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7889:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "7877:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 31035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7910:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "7877:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7877:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31038,
                        "nodeType": "ExpressionStatement",
                        "src": "7877:37:45"
                      },
                      {
                        "expression": {
                          "id": 31040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7924:3:45",
                          "subExpression": {
                            "id": 31039,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31026,
                            "src": "7924:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31041,
                        "nodeType": "ExpressionStatement",
                        "src": "7924:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31029,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31026,
                      "src": "7859:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "3634",
                      "id": 31030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7863:2:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_64_by_1",
                        "typeString": "int_const 64"
                      },
                      "value": "64"
                    },
                    "src": "7859:6:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31043,
                  "nodeType": "WhileStatement",
                  "src": "7852:84:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31047,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30418,
                            "src": "7987:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 31048,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30424,
                            "src": "7994:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 31045,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "7955:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7970:16:45",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28619,
                          "src": "7955:31:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 31049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7955:43:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31044,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8086,
                        8100
                      ],
                      "referencedDeclaration": 8086,
                      "src": "7943:11:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 31050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7943:56:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31051,
                  "nodeType": "ExpressionStatement",
                  "src": "7943:56:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31055,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "8040:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 31056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8045:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 31052,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "8007:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8022:17:45",
                      "memberName": "setApprovalForAll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28601,
                      "src": "8007:32:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 31057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8007:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31058,
                  "nodeType": "ExpressionStatement",
                  "src": "8007:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31062,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30418,
                            "src": "8101:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "id": 31063,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30424,
                            "src": "8108:3:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 31060,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "8069:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8084:16:45",
                          "memberName": "isApprovedForAll",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28619,
                          "src": "8069:31:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view external returns (bool)"
                          }
                        },
                        "id": 31064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8069:43:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31059,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5238,
                        5259
                      ],
                      "referencedDeclaration": 5238,
                      "src": "8058:10:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 31065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8058:55:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31066,
                  "nodeType": "ExpressionStatement",
                  "src": "8058:55:45"
                }
              ]
            },
            "functionSelector": "09d26b6c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testIsApprovedForAll",
            "nameLocation": "7772:20:45",
            "parameters": {
              "id": 31019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7792:2:45"
            },
            "returnParameters": {
              "id": 31020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7802:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31118,
            "nodeType": "FunctionDefinition",
            "src": "8126:330:45",
            "nodes": [],
            "body": {
              "id": 31117,
              "nodeType": "Block",
              "src": "8154:302:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31074,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8179:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 31073,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8171:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31072,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8171:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8171:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 31076,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "8186:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8201:5:45",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28228,
                          "src": "8186:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 31078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8186:22:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31071,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8136,
                        8161,
                        8174,
                        8190,
                        8232,
                        8274,
                        8316,
                        8353,
                        8390,
                        8427,
                        5289,
                        5314,
                        5344,
                        5369,
                        5428,
                        5453,
                        5483,
                        5508,
                        6608,
                        6643
                      ],
                      "referencedDeclaration": 5289,
                      "src": "8162:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8162:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31080,
                  "nodeType": "ExpressionStatement",
                  "src": "8162:47:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31082,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "8222:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31081,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "8217:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8217:11:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31084,
                  "nodeType": "ExpressionStatement",
                  "src": "8217:11:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 31088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8252:34:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        },
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                          "typeString": "literal_string \"Ownable: caller is not the owner\""
                        }
                      ],
                      "expression": {
                        "id": 31085,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "8236:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8239:12:45",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11553,
                      "src": "8236:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8236:51:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31090,
                  "nodeType": "ExpressionStatement",
                  "src": "8236:51:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31094,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "8328:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31091,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "8295:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8310:17:45",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28279,
                      "src": "8295:32:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8295:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31096,
                  "nodeType": "ExpressionStatement",
                  "src": "8295:37:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31100,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8353:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MiscTest_$31437",
                              "typeString": "contract MiscTest"
                            }
                          ],
                          "id": 31099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8345:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8345:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8345:13:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31097,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "8340:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8340:19:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31103,
                  "nodeType": "ExpressionStatement",
                  "src": "8340:19:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31107,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "8400:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 31104,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "8367:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8382:17:45",
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28279,
                      "src": "8367:32:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 31108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8367:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31109,
                  "nodeType": "ExpressionStatement",
                  "src": "8367:37:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31111,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "8421:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 31112,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "8426:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8441:5:45",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28228,
                          "src": "8426:20:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 31114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8426:22:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31110,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8136,
                        8161,
                        8174,
                        8190,
                        8232,
                        8274,
                        8316,
                        8353,
                        8390,
                        8427,
                        5289,
                        5314,
                        5344,
                        5369,
                        5428,
                        5453,
                        5483,
                        5508,
                        6608,
                        6643
                      ],
                      "referencedDeclaration": 5289,
                      "src": "8412:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31116,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:37:45"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "8135:9:45",
            "parameters": {
              "id": 31069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8144:2:45"
            },
            "returnParameters": {
              "id": 31070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8154:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31209,
            "nodeType": "FunctionDefinition",
            "src": "8462:620:45",
            "nodes": [],
            "body": {
              "id": 31208,
              "nodeType": "Block",
              "src": "8492:590:45",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31122
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31122,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "8505:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31208,
                      "src": "8500:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31121,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "8500:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31124,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 31123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8509:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8500:10:45"
                },
                {
                  "body": {
                    "id": 31206,
                    "nodeType": "Block",
                    "src": "8534:542:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31129,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30418,
                              "src": "8549:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31128,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7484,
                              7505,
                              7529,
                              7553
                            ],
                            "referencedDeclaration": 7484,
                            "src": "8544:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8544:11:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31131,
                        "nodeType": "ExpressionStatement",
                        "src": "8544:11:45"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31132,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "8565:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8577:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "8565:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 31135,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8598:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8565:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8565:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31138,
                        "nodeType": "ExpressionStatement",
                        "src": "8565:37:45"
                      },
                      {
                        "assignments": [
                          31140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31140,
                            "mutability": "mutable",
                            "name": "sbAlice",
                            "nameLocation": "8620:7:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 31206,
                            "src": "8612:15:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 31139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8612:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31145,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31143,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31122,
                              "src": "8653:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31141,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "8630:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 31142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8645:7:45",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28449,
                            "src": "8630:22:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 31144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8630:25:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8612:43:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31147,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30418,
                              "src": "8674:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31148,
                              "name": "sbAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31140,
                              "src": "8681:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31146,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "8665:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 31149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8665:24:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31150,
                        "nodeType": "ExpressionStatement",
                        "src": "8665:24:45"
                      },
                      {
                        "expression": {
                          "id": 31152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8699:3:45",
                          "subExpression": {
                            "id": 31151,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31122,
                            "src": "8699:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31153,
                        "nodeType": "ExpressionStatement",
                        "src": "8699:3:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31155,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30424,
                              "src": "8717:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31154,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7484,
                              7505,
                              7529,
                              7553
                            ],
                            "referencedDeclaration": 7484,
                            "src": "8712:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8712:9:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31157,
                        "nodeType": "ExpressionStatement",
                        "src": "8712:9:45"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31158,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30382,
                                "src": "8731:12:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8744:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "8731:26:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31162,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 31161,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8765:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8731:36:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8731:38:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31164,
                        "nodeType": "ExpressionStatement",
                        "src": "8731:38:45"
                      },
                      {
                        "assignments": [
                          31166
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31166,
                            "mutability": "mutable",
                            "name": "sbBob",
                            "nameLocation": "8787:5:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 31206,
                            "src": "8779:13:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 31165,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8779:7:45",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31171,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 31169,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31122,
                              "src": "8818:1:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31167,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "8795:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 31168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8810:7:45",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28449,
                            "src": "8795:22:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 31170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8795:25:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8779:41:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31173,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30424,
                              "src": "8839:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31174,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31166,
                              "src": "8844:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31172,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "8830:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 31175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8830:20:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31176,
                        "nodeType": "ExpressionStatement",
                        "src": "8830:20:45"
                      },
                      {
                        "expression": {
                          "id": 31178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8860:3:45",
                          "subExpression": {
                            "id": 31177,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31122,
                            "src": "8860:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31179,
                        "nodeType": "ExpressionStatement",
                        "src": "8860:3:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31181,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30424,
                              "src": "8878:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31180,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7484,
                              7505,
                              7529,
                              7553
                            ],
                            "referencedDeclaration": 7484,
                            "src": "8873:4:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8873:9:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31183,
                        "nodeType": "ExpressionStatement",
                        "src": "8873:9:45"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31184,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "8892:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8904:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "8892:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 31187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8925:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "8892:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8892:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31190,
                        "nodeType": "ExpressionStatement",
                        "src": "8892:37:45"
                      },
                      {
                        "expression": {
                          "id": 31196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31191,
                            "name": "sbBob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31166,
                            "src": "8990:5:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 31194,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31122,
                                "src": "9021:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 31192,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30385,
                                "src": "8998:14:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 31193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9013:7:45",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 28449,
                              "src": "8998:22:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 31195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8998:25:45",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8990:33:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31197,
                        "nodeType": "ExpressionStatement",
                        "src": "8990:33:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31199,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30424,
                              "src": "9042:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 31200,
                              "name": "sbBob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31166,
                              "src": "9047:5:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31198,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8136,
                              8161,
                              8174,
                              8190,
                              8232,
                              8274,
                              8316,
                              8353,
                              8390,
                              8427,
                              5289,
                              5314,
                              5344,
                              5369,
                              5428,
                              5453,
                              5483,
                              5508,
                              6608,
                              6643
                            ],
                            "referencedDeclaration": 5289,
                            "src": "9033:8:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 31201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9033:20:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31202,
                        "nodeType": "ExpressionStatement",
                        "src": "9033:20:45"
                      },
                      {
                        "expression": {
                          "id": 31204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9063:3:45",
                          "subExpression": {
                            "id": 31203,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31122,
                            "src": "9063:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31205,
                        "nodeType": "ExpressionStatement",
                        "src": "9063:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31125,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31122,
                      "src": "8525:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 31126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8529:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "8525:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31207,
                  "nodeType": "WhileStatement",
                  "src": "8518:558:45"
                }
              ]
            },
            "functionSelector": "71a29bb7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwnerOf",
            "nameLocation": "8471:11:45",
            "parameters": {
              "id": 31119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8482:2:45"
            },
            "returnParameters": {
              "id": 31120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8492:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31333,
            "nodeType": "FunctionDefinition",
            "src": "9088:865:45",
            "nodes": [],
            "body": {
              "id": 31332,
              "nodeType": "Block",
              "src": "9127:826:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31213,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "9140:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31212,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "9135:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9135:11:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31215,
                  "nodeType": "ExpressionStatement",
                  "src": "9135:11:45"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31216,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30379,
                          "src": "9154:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3976",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9166:13:45",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2802,
                        "src": "9154:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9187:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "9154:35:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9154:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31222,
                  "nodeType": "ExpressionStatement",
                  "src": "9154:37:45"
                },
                {
                  "assignments": [
                    31224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31224,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "9204:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31332,
                      "src": "9199:7:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31223,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9199:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31230,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31227,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "9244:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9251:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 31225,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "9209:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9224:19:45",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29346,
                      "src": "9209:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 31229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9209:44:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9199:54:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31232,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "9270:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31235,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31224,
                            "src": "9300:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31233,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "9277:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9292:7:45",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28449,
                          "src": "9277:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9277:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31231,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8136,
                        8161,
                        8174,
                        8190,
                        8232,
                        8274,
                        8316,
                        8353,
                        8390,
                        8427,
                        5289,
                        5314,
                        5344,
                        5369,
                        5428,
                        5453,
                        5483,
                        5508,
                        6608,
                        6643
                      ],
                      "referencedDeclaration": 5289,
                      "src": "9261:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9261:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31238,
                  "nodeType": "ExpressionStatement",
                  "src": "9261:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31240,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9317:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31239,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "9312:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9312:9:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31242,
                  "nodeType": "ExpressionStatement",
                  "src": "9312:9:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 31246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9345:51:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "expression": {
                        "id": 31243,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "9329:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9332:12:45",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11553,
                      "src": "9329:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9329:68:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31248,
                  "nodeType": "ExpressionStatement",
                  "src": "9329:68:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31252,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "9437:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31253,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9444:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31254,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31224,
                        "src": "9449:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31249,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "9405:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9420:16:45",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28665,
                      "src": "9405:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9405:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31256,
                  "nodeType": "ExpressionStatement",
                  "src": "9405:47:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31258,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "9465:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31257,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "9460:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9460:11:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31260,
                  "nodeType": "ExpressionStatement",
                  "src": "9460:11:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31264,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "9511:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31265,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9518:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31266,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31224,
                        "src": "9523:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31261,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "9479:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9494:16:45",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28665,
                      "src": "9479:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9479:47:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31268,
                  "nodeType": "ExpressionStatement",
                  "src": "9479:47:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31270,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9543:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31273,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31224,
                            "src": "9571:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31271,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "9548:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9563:7:45",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28449,
                          "src": "9548:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9548:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31269,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8136,
                        8161,
                        8174,
                        8190,
                        8232,
                        8274,
                        8316,
                        8353,
                        8390,
                        8427,
                        5289,
                        5314,
                        5344,
                        5369,
                        5428,
                        5453,
                        5483,
                        5508,
                        6608,
                        6643
                      ],
                      "referencedDeclaration": 5289,
                      "src": "9534:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9534:41:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31276,
                  "nodeType": "ExpressionStatement",
                  "src": "9534:41:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31278,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9588:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31277,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "9583:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9583:9:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31280,
                  "nodeType": "ExpressionStatement",
                  "src": "9583:9:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 31284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9616:52:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "expression": {
                        "id": 31281,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "9600:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9603:12:45",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11553,
                      "src": "9600:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9600:69:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31286,
                  "nodeType": "ExpressionStatement",
                  "src": "9600:69:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31290,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9709:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31293,
                            "name": "frensStorage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30370,
                            "src": "9722:12:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensStorage_$2601",
                              "typeString": "contract FrensStorage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensStorage_$2601",
                              "typeString": "contract FrensStorage"
                            }
                          ],
                          "id": 31292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9714:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31291,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9714:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9714:21:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31295,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31224,
                        "src": "9737:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31287,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "9677:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9692:16:45",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28665,
                      "src": "9677:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9677:63:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31297,
                  "nodeType": "ExpressionStatement",
                  "src": "9677:63:45"
                },
                {
                  "assignments": [
                    31300
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31300,
                      "mutability": "mutable",
                      "name": "nftReceiver",
                      "nameLocation": "9761:11:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31332,
                      "src": "9749:23:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NftReceiver_$34890",
                        "typeString": "contract NftReceiver"
                      },
                      "typeName": {
                        "id": 31299,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31298,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9749:11:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34890,
                          "src": "9749:11:45"
                        },
                        "referencedDeclaration": 34890,
                        "src": "9749:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$34890",
                          "typeString": "contract NftReceiver"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31305,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9775:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_NftReceiver_$34890_$",
                        "typeString": "function () returns (contract NftReceiver)"
                      },
                      "typeName": {
                        "id": 31302,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 31301,
                          "name": "NftReceiver",
                          "nameLocations": [
                            "9779:11:45"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 34890,
                          "src": "9779:11:45"
                        },
                        "referencedDeclaration": 34890,
                        "src": "9779:11:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NftReceiver_$34890",
                          "typeString": "contract NftReceiver"
                        }
                      }
                    },
                    "id": 31304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9775:17:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NftReceiver_$34890",
                      "typeString": "contract NftReceiver"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9749:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31307,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9805:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31306,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "9800:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:9:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31309,
                  "nodeType": "ExpressionStatement",
                  "src": "9800:9:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31313,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "9849:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31316,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31300,
                            "src": "9862:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$34890",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$34890",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 31315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9854:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31314,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9854:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9854:20:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 31318,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31224,
                        "src": "9876:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31310,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "9817:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9832:16:45",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28665,
                      "src": "9817:31:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9817:62:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31320,
                  "nodeType": "ExpressionStatement",
                  "src": "9817:62:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31324,
                            "name": "nftReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31300,
                            "src": "9904:11:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NftReceiver_$34890",
                              "typeString": "contract NftReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NftReceiver_$34890",
                              "typeString": "contract NftReceiver"
                            }
                          ],
                          "id": 31323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9896:7:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 31322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9896:7:45",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9896:20:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31328,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31224,
                            "src": "9941:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31326,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "9918:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9933:7:45",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28449,
                          "src": "9918:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9918:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31321,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8136,
                        8161,
                        8174,
                        8190,
                        8232,
                        8274,
                        8316,
                        8353,
                        8390,
                        8427,
                        5289,
                        5314,
                        5344,
                        5369,
                        5428,
                        5453,
                        5483,
                        5508,
                        6608,
                        6643
                      ],
                      "referencedDeclaration": 5289,
                      "src": "9887:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9887:58:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31331,
                  "nodeType": "ExpressionStatement",
                  "src": "9887:58:45"
                }
              ]
            },
            "functionSelector": "90ec5d96",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSafeTransferFrom",
            "nameLocation": "9097:20:45",
            "parameters": {
              "id": 31210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9117:2:45"
            },
            "returnParameters": {
              "id": 31211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9127:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31375,
            "nodeType": "FunctionDefinition",
            "src": "9959:258:45",
            "nodes": [],
            "body": {
              "id": 31374,
              "nodeType": "Block",
              "src": "9994:223:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31337,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10012:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31336,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7574,
                        7595,
                        7619,
                        7643
                      ],
                      "referencedDeclaration": 7574,
                      "src": "10002:9:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10002:16:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31339,
                  "nodeType": "ExpressionStatement",
                  "src": "10002:16:45"
                },
                {
                  "assignments": [
                    31341
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31341,
                      "mutability": "mutable",
                      "name": "i",
                      "nameLocation": "10031:1:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31374,
                      "src": "10026:6:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31340,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10026:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31343,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 31342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10035:1:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10026:10:45"
                },
                {
                  "body": {
                    "id": 31372,
                    "nodeType": "Block",
                    "src": "10060:151:45",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31347,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30379,
                                "src": "10070:11:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3976",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31349,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10082:13:45",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2802,
                              "src": "10070:25:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31351,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "31",
                                "id": 31350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10103:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "src": "10070:35:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10070:37:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31353,
                        "nodeType": "ExpressionStatement",
                        "src": "10070:37:45"
                      },
                      {
                        "assignments": [
                          31355
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31355,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "10122:2:45",
                            "nodeType": "VariableDeclaration",
                            "scope": 31372,
                            "src": "10117:7:45",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31354,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10117:4:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31362,
                        "initialValue": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 31358,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31341,
                                "src": "10155:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 31359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10157:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "10155:3:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 31356,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30385,
                              "src": "10127:14:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 31357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10142:12:45",
                            "memberName": "tokenByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29380,
                            "src": "10127:27:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 31361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10127:32:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10117:42:45"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 31366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 31364,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31355,
                                "src": "10180:2:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 31365,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31341,
                                "src": "10186:1:45",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10180:7:45",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 31363,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5238,
                              5259
                            ],
                            "referencedDeclaration": 5238,
                            "src": "10169:10:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 31367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10169:20:45",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31368,
                        "nodeType": "ExpressionStatement",
                        "src": "10169:20:45"
                      },
                      {
                        "expression": {
                          "id": 31370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "10199:3:45",
                          "subExpression": {
                            "id": 31369,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31341,
                            "src": "10199:1:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31371,
                        "nodeType": "ExpressionStatement",
                        "src": "10199:3:45"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 31344,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31341,
                      "src": "10051:1:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "323535",
                      "id": 31345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10055:3:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_255_by_1",
                        "typeString": "int_const 255"
                      },
                      "value": "255"
                    },
                    "src": "10051:7:45",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 31373,
                  "nodeType": "WhileStatement",
                  "src": "10044:167:45"
                }
              ]
            },
            "functionSelector": "6a7179c3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTokenByIndex",
            "nameLocation": "9968:16:45",
            "parameters": {
              "id": 31334,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9984:2:45"
            },
            "returnParameters": {
              "id": 31335,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9994:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31436,
            "nodeType": "FunctionDefinition",
            "src": "10223:440:45",
            "nodes": [],
            "body": {
              "id": 31435,
              "nodeType": "Block",
              "src": "10258:405:45",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31379,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10271:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31378,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "10266:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10266:11:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31381,
                  "nodeType": "ExpressionStatement",
                  "src": "10266:11:45"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31382,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30379,
                          "src": "10285:11:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3976",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10297:13:45",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2802,
                        "src": "10285:25:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10318:1:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10285:35:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10285:37:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31388,
                  "nodeType": "ExpressionStatement",
                  "src": "10285:37:45"
                },
                {
                  "assignments": [
                    31390
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31390,
                      "mutability": "mutable",
                      "name": "id",
                      "nameLocation": "10335:2:45",
                      "nodeType": "VariableDeclaration",
                      "scope": 31435,
                      "src": "10330:7:45",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31389,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10330:4:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31396,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 31393,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10375:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 31394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10382:1:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 31391,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "10340:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10355:19:45",
                      "memberName": "tokenOfOwnerByIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29346,
                      "src": "10340:34:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (address,uint256) view external returns (uint256)"
                      }
                    },
                    "id": 31395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10340:44:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10330:54:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31398,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10401:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31401,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31390,
                            "src": "10431:2:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 31399,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30385,
                            "src": "10408:14:45",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                              "typeString": "contract FrensPoolShare"
                            }
                          },
                          "id": 31400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10423:7:45",
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 28449,
                          "src": "10408:22:45",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 31402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10408:26:45",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31397,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8136,
                        8161,
                        8174,
                        8190,
                        8232,
                        8274,
                        8316,
                        8353,
                        8390,
                        8427,
                        5289,
                        5314,
                        5344,
                        5369,
                        5428,
                        5453,
                        5483,
                        5508,
                        6608,
                        6643
                      ],
                      "referencedDeclaration": 5289,
                      "src": "10392:8:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 31403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10392:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31404,
                  "nodeType": "ExpressionStatement",
                  "src": "10392:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31406,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "10448:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31405,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "10443:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10443:9:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31408,
                  "nodeType": "ExpressionStatement",
                  "src": "10443:9:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 31412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10476:51:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "expression": {
                        "id": 31409,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6786,
                        "src": "10460:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12067",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10463:12:45",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11553,
                      "src": "10460:15:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10460:68:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31414,
                  "nodeType": "ExpressionStatement",
                  "src": "10460:68:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31418,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10564:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31419,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "10571:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31420,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31390,
                        "src": "10576:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31415,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "10536:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10551:12:45",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28646,
                      "src": "10536:27:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10536:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31422,
                  "nodeType": "ExpressionStatement",
                  "src": "10536:43:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31424,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10592:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31423,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7484,
                        7505,
                        7529,
                        7553
                      ],
                      "referencedDeclaration": 7484,
                      "src": "10587:4:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10587:11:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31426,
                  "nodeType": "ExpressionStatement",
                  "src": "10587:11:45"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31430,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30418,
                        "src": "10634:5:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31431,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30424,
                        "src": "10641:3:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 31432,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31390,
                        "src": "10646:2:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 31427,
                        "name": "frensPoolShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30385,
                        "src": "10606:14:45",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensPoolShare_$1629",
                          "typeString": "contract FrensPoolShare"
                        }
                      },
                      "id": 31429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10621:12:45",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28646,
                      "src": "10606:27:45",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 31433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10606:43:45",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31434,
                  "nodeType": "ExpressionStatement",
                  "src": "10606:43:45"
                }
              ]
            },
            "functionSelector": "70557298",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferFrom",
            "nameLocation": "10232:16:45",
            "parameters": {
              "id": 31376,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10248:2:45"
            },
            "returnParameters": {
              "id": 31377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10258:0:45"
            },
            "scope": 31437,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30354,
              "name": "Test",
              "nameLocations": [
                "846:4:45"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9948,
              "src": "846:4:45"
            },
            "id": 30355,
            "nodeType": "InheritanceSpecifier",
            "src": "846:4:45"
          }
        ],
        "canonicalName": "MiscTest",
        "contractDependencies": [
          58,
          245,
          921,
          1074,
          1483,
          1629,
          1971,
          2601,
          4119,
          34890
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31437,
          9948,
          7018,
          6755
        ],
        "name": "MiscTest",
        "nameLocation": "834:8:45",
        "scope": 31438,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 45
}