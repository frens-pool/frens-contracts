{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryProxy",
      "outputs": [
        {
          "internalType": "contract FactoryProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensInitialiser",
      "outputs": [
        {
          "internalType": "contract FrensInitialiser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "contract IStakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool2",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDepositWrongPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBadWithdrawalCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testDistribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testPubKeyMismatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStakeTwoStep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        },
        {
          "internalType": "uint72",
          "name": "y",
          "type": "uint72"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "756:13758:43:-:0;;;;;;1594:4:22;756:13758:43;;;;;;;;;1890:42;1308;756:13758;;;;;;;;;1300:51;756:13758;;;1300:51;756:13758;1498:42;756:13758;1498:42;756:13758;;;1498:42;756:13758;1574:42;756:13758;1574:42;756:13758;;;1574:42;756:13758;;1658:25;756:13758;;;1658:25;756:13758;1717:42;756:13758;1717:42;756:13758;;;1717:42;756:13758;1804:42;756:13758;1796:51;756:13758;;;1796:51;756:13758;1882:51;756:13758;;;1882:51;756:13758;;1955:101;756:13758;;:::i;:::-;;;;;;;;;-1:-1:-1;;756:13758:43;1955:101;756:13758;;;;;;-1:-1:-1;;;;;;;;;;;756:13758:43;-1:-1:-1;;;756:13758:43;;2093:69;756:13758;;;;;;;:::i;:::-;;;;;;-1:-1:-1;756:13758:43;;2093:69;756:13758;2093:69;756:13758;;;;;;;;2186:197;756:13758;;:::i;:::-;;;;;;;-1:-1:-1;756:13758:43;2186:197;756:13758;;;;;;;;;;;;;;;;;;2417:66;;756:13758;;;;;;;;;;;2186:197;756:13758;;;;;;;;;;;;;;;;;;;;;;;2093:69;756:13758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1955:101;756:13758;;;;;;-1:-1:-1;;;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "756:13758:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1765:82;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:32;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1267:84;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1853:80;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;-1:-1:-1;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;11822:20;756:13758;;;;;;;;;;;;;;;;;11880:20;;756:13758;;;;;;;;;;11926:6;;;;;:17;;;756:13758;11923:1881;;;-1:-1:-1;;11959:5:43;756:13758;-1:-1:-1;;;;;756:13758:43;;11954:11;;756:13758;;11954:11;:::i;:::-;756:13758;11975:11;756:13758;;11975:48;;;;;756:13758;;;;;;;;;;11975:48;;;;;;;;;;;;;;;11923:1881;756:13758;;12033:9;756:13758;12038:3;756:13758;;12033:9;:::i;:::-;756:13758;11975:11;756:13758;;12052:46;;;;;756:13758;;;;;12052:46;;;;;;;;;;;;;;;11923:1881;756:13758;;12118:9;756:13758;12118:9;756:13758;;12118:9;:::i;:::-;756:13758;;11975:11;756:13758;;12199:17;756:13758;12138:79;;;;;;756:13758;;-1:-1:-1;;;12138:79:43;;756:13758;;;;;;;;;;;12138:79;;756:13758;12138:79;;;:::i;:::-;;;;;;;;;;;11923:1881;756:13758;;;11959:5;756:13758;;12247:22;756:13758;12038:3;756:13758;;12297:20;756:13758;;11975:11;756:13758;;12356:28;12346:38;12356:28;;12346:38;;:::i;:::-;756:13758;;;;;;;;;;;;;;;;;;;;;12460:28;12449:53;12460:28;12450:38;12460:28;;12450:38;;:::i;:::-;12449:53;:::i;:::-;12512:32;;;;;;11923:1881;12512:32;;;;756:13758;;11975:11;756:13758;;12554:24;;;;;756:13758;;;;;;;;;;;;;12554:24;;;;;;;;;;11923:1881;12591:15;;;;12985:21;12591:15;;756:13758;13171:52;12591:15;;12588:34;;11923:1881;756:13758;12635:13;;12632:29;;11923:1881;12893:56;12699:25;;;;:::i;:::-;756:13758;11959:5;756:13758;;12749:22;12893:56;:::i;:::-;12985:21;:::i;:::-;756:13758;12038:3;756:13758;;13029:20;13171:52;:::i;:::-;756:13758;;12632:29;12650:11;;-1:-1:-1;12632:29:43;;12588:34;12608:14;;-1:-1:-1;12588:34:43;;12554:24;;;;;;;;:::i;:::-;756:13758;;12554:24;;;;;;756:13758;;;;12554:24;756:13758;;;;;;;;;12554:24;756:13758;;;12512:32;756:13758;;;;;;;;;12512:32;;;;;756:13758;1671:64:22;;;756:13758:43;;;;;;;;12138:79;;;;:::i;:::-;756:13758;;12138:79;;;;756:13758;;;;12138:79;756:13758;;;12052:46;;;;:::i;:::-;756:13758;;12052:46;;;;;756:13758;;;11975:48;;;;:::i;:::-;756:13758;;11975:48;;;;;756:13758;;;;;;;;;11923:1881;13239:565;;;;;;;;;;756:13758;;;-1:-1:-1;;;;;;;;;;;13260:37:43;;;;;756:13758;;;;;;;;13260:37;;;;;;756:13758;13260:37;;;:::i;:::-;;;;;;;;;;;;;;13239:565;-1:-1:-1;;13317:5:43;756:13758;-1:-1:-1;;;;;756:13758:43;13307:16;;756:13758;;13307:16;:::i;:::-;13333:11;756:13758;;13333:37;;;;;756:13758;;;;;;;;;;;;13333:37;;;;;;;;;;13239:565;;756:13758;;13333:37;;;;:::i;:::-;756:13758;;;;13333:37;756:13758;;;13260:37;;;;:::i;:::-;756:13758;;13260:37;;;;756:13758;;;13260:37;756:13758;;;;;;;;;13239:565;13400:5;756:13758;-1:-1:-1;;;;;756:13758:43;-1:-1:-1;756:13758:43;;;;13395:11;;756:13758;;13395:11;:::i;:::-;756:13758;13416:11;756:13758;;13416:48;;;;;;756:13758;;;;;;;;;;;;13416:48;;;;;;;;;;;;;;;13239:565;756:13758;;13474:9;756:13758;13479:3;756:13758;;13474:9;:::i;:::-;756:13758;13416:11;756:13758;;13493:46;;;;;756:13758;;;;;13493:46;;;;;;;;;;;;;;;;;;13239:565;756:13758;;13559:9;756:13758;13559:9;756:13758;;13559:9;:::i;:::-;756:13758;13416:11;756:13758;;13640:17;756:13758;13579:79;;;;;;756:13758;;-1:-1:-1;;;13579:79:43;;756:13758;;;;;;;;;;;13579:79;;756:13758;13579:79;;;:::i;:::-;;;;;;;;;;;;;;13239:565;756:13758;;;;;;13416:11;756:13758;;13668:32;;;;;13239:565;13668:32;;;;-1:-1:-1;;;;;;;;;;;13710:51:43;;;;;756:13758;;;;;;;;;;;;;13710:51;;756:13758;;13710:51;;756:13758;;;;;;;;;;;13710:51;;;;;;;;;;;13239:565;756:13758;;13416:11;756:13758;;13771:24;;;;;756:13758;;;;;;;;;;;;;13771:24;;;;;;;;;;13239:565;;756:13758;;13710:51;;;;:::i;:::-;756:13758;;13710:51;;;;13668:32;756:13758;;;;;;;;;;;13668:32;;;;;13579:79;;;;:::i;:::-;756:13758;;13579:79;;;;13493:46;;;;:::i;:::-;756:13758;;13493:46;;;;13416:48;;;;:::i;:::-;756:13758;;13416:48;;;;;756:13758;;;;;;;;;11926:17;11936:7;11940:3;11936:7;;11926:17;;756:13758;-1:-1:-1;;;756:13758:43;;;;;;1671:64:22;756:13758:43;;-1:-1:-1;;;756:13758:43;;;;;;1671:64:22;756:13758:43;;;;;;;;;;;;;;;;;;871:38;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;915:52;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;756:13758:43;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;756:13758:43;;7106:5;;;:38;;;756:13758;7103:1177;;;-1:-1:-1;7165:5:43;756:13758;;;-1:-1:-1;756:13758:43;7155:16;;-1:-1:-1;;;;;756:13758:43;7155:16;:::i;:::-;7181:11;756:13758;;;-1:-1:-1;;;;;756:13758:43;7181:37;;;;;756:13758;;;;;;;;;;;;7181:37;;-1:-1:-1;;;;;756:13758:43;;7181:37;;;;;;;;;7103:1177;-1:-1:-1;;7238:14:43;756:13758;7165:5;756:13758;;;-1:-1:-1;;;7238:44:43;;-1:-1:-1;;;;;756:13758:43;;;;7238:44;;756:13758;;;;1671:64:22;;;756:13758:43;;;;;;;;;;;7238:44;;;;;;;;;;;7103:1177;7303:7;;;;;;:::i;:::-;7181:11;756:13758;;;-1:-1:-1;;;7336:32:43;;756:13758;7336:32;;1671:64:22;;;756:13758:43;;;;;;;;;-1:-1:-1;;;;;756:13758:43;7336:32;;;;;;;;;;7103:1177;7378:19;756:13758;;-1:-1:-1;;;;;756:13758:43;;7378:19;:::i;:::-;756:13758;-1:-1:-1;;;;;;;;;;;7445:37:43;;;;;756:13758;;;;;;;;;;;;;7445:37;;756:13758;;7445:37;;756:13758;;;;;;-1:-1:-1;;;756:13758:43;;;;7445:37;;;;;;;;7103:1177;-1:-1:-1;7492:12:43;756:13758;-1:-1:-1;;;;;756:13758:43;7492:39;;;;;756:13758;;;;;;;;;;;;7492:39;;;756:13758;7492:39;;1671:64:22;-1:-1:-1;;;;;756:13758:43;;7492:39;;;;;;;;;7103:1177;-1:-1:-1;7181:11:43;756:13758;-1:-1:-1;;;;;756:13758:43;7611:38;;;;;756:13758;;;;;;;;;;;;7611:38;;;756:13758;7611:38;;1671:64:22;-1:-1:-1;;;;;756:13758:43;;7611:38;;;;;;;;;7103:1177;-1:-1:-1;;7181:11:43;756:13758;;;-1:-1:-1;;;7674:32:43;;756:13758;7674:32;;1671:64:22;;;;756:13758:43;;;;;;;;-1:-1:-1;;;;;756:13758:43;7674:32;;;;;;;;;;;7103:1177;756:13758;7768:7;756:13758;-1:-1:-1;;;;;756:13758:43;7727:17;756:13758;;;;7727:17;:::i;:::-;7768:7;:::i;7674:32::-;;;;756:13758;7674:32;;756:13758;7674:32;;;;;;756:13758;7674:32;;;:::i;:::-;;;756:13758;;;;;;7768:7;7674:32;;;;;-1:-1:-1;7674:32:43;;7611:38;;;;:::i;:::-;756:13758;;7611:38;;;;7492:39;;;;:::i;:::-;756:13758;;7492:39;;;;7445:37;;;;:::i;:::-;756:13758;;7445:37;;;;7336:32;;756:13758;7336:32;;756:13758;7336:32;;;;;;756:13758;7336:32;;;:::i;:::-;;;756:13758;;;;7378:19;756:13758;;7336:32;;;;;-1:-1:-1;7336:32:43;;7238:44;;;;756:13758;7238:44;;756:13758;7238:44;;;;;;756:13758;7238:44;;;:::i;:::-;;;756:13758;;;;;7238:44;;;;;;;-1:-1:-1;7238:44:43;;7181:37;;;;:::i;:::-;756:13758;;7181:37;;;;7103:1177;7794:6;;;756:13758;-1:-1:-1;;;;;;;;;;;7812:37:43;;;;;756:13758;;;;;;;;7812:37;;;;;;756:13758;7812:37;;;:::i;:::-;;;;;;;;;;;;;;7791:489;-1:-1:-1;;7869:5:43;756:13758;-1:-1:-1;;;;;756:13758:43;7859:16;;756:13758;;7859:16;:::i;:::-;7885:11;756:13758;;7885:37;;;;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;7885:37;;756:13758;7885:37;;;;;;;;;7791:489;;756:13758;;7812:37;;;;:::i;:::-;756:13758;;7812:37;;;;7791:489;8036:5;756:13758;;;-1:-1:-1;;;;;756:13758:43;8026:16;;756:13758;;8026:16;:::i;:::-;756:13758;8052:11;756:13758;;8052:37;;;;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;8052:37;;756:13758;8052:37;;;;;;;;;;;;7791:489;756:13758;;;8109:14;756:13758;;;;;8036:5;756:13758;;;;;;;;;;;;8109:44;;756:13758;8109:44;;756:13758;;;;;1671:64:22;8109:44:43;;;;;;;;;;;7791:489;756:13758;-1:-1:-1;;;;;;;;;;;8163:60:43;;;;;756:13758;;;;;;;;8163:60;;;;;;756:13758;8163:60;;;:::i;:::-;;;;;;;;;;;;;;7791:489;756:13758;;8052:11;756:13758;;8233:38;;;;;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;8233:38;;756:13758;8233:38;;1671:64:22;756:13758:43;8233:38;;;;;;;;;7791:489;;756:13758;;8233:38;756:13758;;;;8163:60;;;;:::i;:::-;756:13758;;8163:60;;;;8109:44;;;;;756:13758;8109:44;;;;;;;;;756:13758;8109:44;;;:::i;:::-;;;756:13758;;;;;;;8109:44;;;;;;;-1:-1:-1;8109:44:43;;8052:37;;;;:::i;:::-;756:13758;;8052:37;;;;7106:38;756:13758;7136:8;7115:17;-1:-1:-1;;;;;756:13758:43;;-1:-1:-1;;;;;756:13758:43;;7115:17;:::i;:::-;:29;;7106:38;;756:13758;;;;;;;;;;;;;1049:44;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;4994:11;756:13758;;;-1:-1:-1;;;4994:19:43;;756:13758;4994:19;;-1:-1:-1;;;;;756:13758:43;4994:19;;756:13758;;;;;;;;4994:19;;;;;;;;;;;756:13758;;;5056:9;756:13758;;;;3678:6:22;;;3674:212;;756:13758:43;;;3674:212:22;-1:-1:-1;;;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;3705:44:22;756:13758:43;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;3768:34:22;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;3821:34:22;;;;;:::i;:::-;3674:212;;;756:13758:43;;;4994:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;756:13758;;;;;;;;;;;;;795:24;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;14271:9;756:13758;-1:-1:-1;;;;;756:13758:43;14271:9;;756:13758;;14271:9;:::i;:::-;756:13758;14289:11;756:13758;;14354:17;756:13758;14289:83;;;;;;756:13758;;;;;;;;;;;;;;;14289:83;;756:13758;14289:83;;;:::i;:::-;;;;;;;;;;;;;;756:13758;;;-1:-1:-1;;;;;;;;;;;14380:34:43;;;;;;756:13758;;;;;14380:34;;756:13758;;;;;;14380:34;;756:13758;14380:34;;756:13758;14289:11;756:13758;;;;-1:-1:-1;;;756:13758:43;;;;14380:34;;;;;;;;;;;756:13758;;;14289:11;756:13758;;;14354:17;756:13758;14422:82;;;;;756:13758;;-1:-1:-1;;;14422:82:43;;756:13758;;14422:82;;756:13758;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;14319:22;756:13758;;;-1:-1:-1;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14343:9;756:13758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:22;14422:82:43;;;;;;;;;;756:13758;;;;;;;;14343:9;756:13758;;;;;;;;;;;;-1:-1:-1;756:13758:43;;;;;;;;-1:-1:-1;756:13758:43;;-1:-1:-1;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;756:13758:43;;;;;-1:-1:-1;;756:13758:43;;;;;;;;-1:-1:-1;756:13758:43;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;1671:64:22;756:13758:43;;;;;;;;;;;;14319:22;756:13758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14380:34;;;;:::i;:::-;756:13758;;14380:34;;;;14289:83;;;;:::i;:::-;756:13758;;14289:83;;;;756:13758;;;;;;;-1:-1:-1;;756:13758:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;8352:6;;;;;;:15;;;756:13758;8352:38;;;756:13758;8349:1062;;;8411:5;756:13758;-1:-1:-1;;;;;756:13758:43;8401:16;;756:13758;;8401:16;:::i;:::-;756:13758;8427:11;756:13758;;8427:37;;;;;756:13758;;;;;;;;;;;;;8427:37;;;;;;;;;;;;;8349:1062;756:13758;;;8484:14;756:13758;;;;8411:5;756:13758;;;;;;;;;;;8484:44;;756:13758;8484:44;;756:13758;;;;;1671:64:22;756:13758:43;;;8484:44;;;;;;;;;;;;;;8349:1062;8549:7;;;;;;:::i;:::-;756:13758;8427:11;756:13758;;;;;;;;;;;;8582:32;;;;;756:13758;8582:32;;1671:64:22;8582:32:43;;;;;;;;;;;8349:1062;8624:19;;;;;:::i;:::-;756:13758;8427:11;756:13758;;8653:27;;;;;756:13758;;-1:-1:-1;;;8653:27:43;;756:13758;8653:27;;1671:64:22;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;8653:27;;;;;;;;;;;8349:1062;756:13758;;8427:11;756:13758;;;;;8705:32;;;;;;;756:13758;8705:32;;1671:64:22;8705:32:43;;;;;;;;;;;8349:1062;8758:17;;8799:7;8758:17;;;;:::i;8705:32::-;;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;;;;8758:17;8705:32;;;;;;;8653:27;;;;;;;:::i;:::-;756:13758;;8653:27;;;;;;756:13758;;;;8582:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;8624:19;756:13758;;;8582:32;;;;;;;;8484:44;;-1:-1:-1;8484:44:43;-1:-1:-1;8484:44:43;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;;;;8484:44;;;;;;;;;8427:37;;;;:::i;:::-;756:13758;;8427:37;;;;8349:1062;8825:6;-1:-1:-1;8825:6:43;;;;;756:13758;;-1:-1:-1;;;;;;;;;;;8843:37:43;;;;;756:13758;;;;;;;;8843:37;;;;;;756:13758;8843:37;;;:::i;8822:589::-;8981:8;8971:18;;8981:8;;;756:13758;;-1:-1:-1;;;;;;;;;;;9001:60:43;;;;;756:13758;;;;;;;;9001:60;;;;;;756:13758;9001:60;;;:::i;8968:443::-;756:13758;;;;;;;;9159:16;756:13758;9169:5;756:13758;;9159:16;:::i;:::-;756:13758;9185:11;756:13758;;9185:37;;;;;756:13758;;;;;;;;;;;;9185:37;;;;;;;;;;;;;8968:443;756:13758;;;9242:14;756:13758;;;;;9169:5;756:13758;;;;;;;;;;;;9242:44;;756:13758;9242:44;;756:13758;;;;;1671:64:22;9242:44:43;;;;;;;;;;;8968:443;9307:7;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;9326:39:43;;;;;;756:13758;;;;;;;;;;;;;;;9326:39;;756:13758;;9326:39;;756:13758;;;;-1:-1:-1;;;756:13758:43;;;;9326:39;;;;;;;;;;;8968:443;756:13758;;9185:11;756:13758;;9375:27;;;;;;756:13758;;-1:-1:-1;;;9375:27:43;;756:13758;9375:27;;1671:64:22;;;;756:13758:43;;;;;;;;;;;;;;;;;9375:27;;;;;;;;8968:443;;756:13758;;9326:39;;;;:::i;:::-;756:13758;;9326:39;;;;9242:44;;;;;756:13758;9242:44;;;;;;;;;756:13758;9242:44;;;:::i;:::-;;;756:13758;;;;;;;9242:44;;;;;;;-1:-1:-1;9242:44:43;;9185:37;;;;:::i;:::-;756:13758;;9185:37;;;;8352:38;8371:19;8382:8;8371:19;;;8352:38;;:15;8362:5;;;;8352:15;;756:13758;;;;;;;;;;;;;13875:9;756:13758;;;-1:-1:-1;;;;;756:13758:43;13875:9;;756:13758;;13875:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;13893:49:43;;;;;756:13758;;-1:-1:-1;;;13893:49:43;;;756:13758;;13893:49;;756:13758;;;;;;;;;;;;13893:49;756:13758;;;13893:49;;;;;;;;;;;;;756:13758;;;;13950:11;756:13758;;14028:17;756:13758;13950:96;;;;;;756:13758;;-1:-1:-1;;;13950:96:43;;756:13758;;;;;;;;;;;13950:96;;756:13758;13950:96;;;:::i;:::-;;;;;;;;;;;;;;756:13758;14054:49;;;;;;;756:13758;;14054:49;;;756:13758;;14054:49;;756:13758;;;;;;;;;;;;;;;;;;;;;;14054:49;;;;;;;;;;;756:13758;;;13950:11;756:13758;;14028:17;756:13758;14111:92;;;;;;756:13758;;-1:-1:-1;;;14111:92:43;;756:13758;;;;;;;;;;;14111:92;;756:13758;14111:92;;;:::i;:::-;;;;;;;;;;;756:13758;;14054:49;;;;:::i;:::-;756:13758;;14054:49;;;;13950:96;;;;:::i;:::-;756:13758;;13950:96;;;;13893:49;;;;:::i;:::-;756:13758;;13893:49;;;;756:13758;;;;;;;;;;;;;1011:32;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1690:69;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1135:31;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;10764:11;756:13758;;10847:5;756:13758;-1:-1:-1;;;;;756:13758:43;;;10756:28;;756:13758;10842:11;;756:13758;;10842:11;:::i;:::-;756:13758;;;;10861:56;;;;;756:13758;;;;;;10861:56;;10894:20;;756:13758;10894:20;;10861:56;;;;;;;;;;756:13758;;;;;;;;;;;10973:28;756:13758;;;;;;10973:28;;;:::i;:::-;756:13758;11049:15;756:13758;;;;;;;;;;;;11049:35;;;;;;;;;;;;;;;756:13758;1671:64:22;756:13758:43;1671:64:22;;756:13758:43;;11039:46;756:13758;11103:9;756:13758;11103:9;756:13758;;11103:9;:::i;:::-;756:13758;;;;11489:17;756:13758;11424:83;;;;;;756:13758;;-1:-1:-1;;;11424:83:43;;756:13758;;;;;;;;;;;11424:83;;756:13758;11424:83;;;:::i;:::-;;;;;;;;;;;;;;756:13758;;;;;;;11515:19;;;;;756:13758;;;;;;;;;;;;;11515:19;;;;;;;;;;;;;;756:13758;;;11567:28;756:13758;;;11567:28;;;:::i;:::-;11049:15;756:13758;;;;;;11626:35;;;;;;;;;;;;7918:5:25;11626:35:43;;;;;756:13758;1671:64:22;756:13758:43;1671:64:22;;756:13758:43;;11616:46;:68;7918:5:25;;:::i;11626:35:43:-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;11515:19;;;;;;:::i;:::-;756:13758;;11515:19;;;;;11424:83;;;;:::i;:::-;756:13758;;11424:83;;;;11049:35;;;;;;;;;;;;;:::i;:::-;;;;756:13758;-1:-1:-1;;;756:13758:43;;;;;;1671:64:22;756:13758:43;10861:56;;;;:::i;:::-;756:13758;;10861:56;;;;756:13758;;;;;;;;;;;;;1172:36;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5129:5;;;;;;:22;;;756:13758;5126:674;;;-1:-1:-1;;5172:5:43;756:13758;-1:-1:-1;;;;;756:13758:43;;5162:16;;756:13758;;5162:16;:::i;:::-;756:13758;;5188:11;756:13758;;5188:37;;;;;756:13758;;;;;;;;;;;;;5188:37;;;;;;;;;;5126:674;756:13758;;;5245:14;756:13758;;;;5172:5;756:13758;;;;;;;;;;;;5245:44;;756:13758;5245:44;;756:13758;;;;;1671:64:22;5245:44:43;;;;;;;;;;;5126:674;5310:7;;;;;;:::i;:::-;756:13758;;5188:11;756:13758;;;;;;;;;;;;;5343:32;;756:13758;5343:32;;1671:64:22;5343:32:43;;;;;;;;;;;5126:674;5385:19;756:13758;5385:19;;;;;;:::i;:::-;5188:11;756:13758;;;;;;;;;;;5428:30;;;;;;;;;;;;;5126:674;5468:19;;;;;:::i;5428:30::-;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;5468:19;756:13758;;5428:30;;;;;;;;;5343:32;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;;;5343:32;;;;;;;5245:44;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;;5245:44;;;;;;;;5188:37;;;;:::i;:::-;756:13758;;5188:37;;;;5126:674;5502:298;;;-1:-1:-1;5505:6:43;;;-1:-1:-1;;;;;;;;;;;5523:37:43;;;;;756:13758;;;;;;;;5523:37;;;;;;756:13758;5523:37;;;:::i;5502:298::-;-1:-1:-1;;;;;;;;;;;5658:60:43;;;;;756:13758;;;;;;;;5658:60;;;;;;756:13758;5658:60;;;:::i;5129:22::-;5138:13;5143:8;5138:13;;;5129:22;;756:13758;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;9525:11;756:13758;;9608:5;756:13758;-1:-1:-1;;;;;756:13758:43;;;9517:28;;9525:11;;9603;;756:13758;;9603:11;:::i;:::-;756:13758;;;;9622:56;;;;;756:13758;;;;;;9622:56;;;;9655:20;;756:13758;9655:20;;9622:56;;;;;;;;;;;;;756:13758;;;;;;;;;;;9734:28;756:13758;;;;;;9734:28;;;:::i;:::-;756:13758;9810:15;756:13758;;;;;;;;;;;;9810:35;;;;;;;;;;;;;;;756:13758;1671:64:22;756:13758:43;1671:64:22;;756:13758:43;;9800:46;756:13758;9859:9;756:13758;9859:9;756:13758;;9859:9;:::i;:::-;756:13758;;;;10241:17;756:13758;10180:79;;;;;;756:13758;;-1:-1:-1;;;10180:79:43;;756:13758;;;;;;;;;;;10180:79;;756:13758;10180:79;;;:::i;:::-;;;;;;;;;;;;;;756:13758;;;10292:28;756:13758;;;;;10292:28;;;:::i;:::-;756:13758;;9810:15;756:13758;;;;;;10351:35;;;;;;;;;;;;7918:5:25;10351:35:43;;;;;1671:64:22;756:13758:43;1671:64:22;;756:13758:43;;10341:46;:68;7918:5:25;;:::i;:::-;10473:16:43;756:13758;9608:5;756:13758;;10473:16;:::i;:::-;-1:-1:-1;;;;;;;;;;;10497:41:43;;;;;;756:13758;;-1:-1:-1;;;10497:41:43;;;756:13758;;10497:41;;756:13758;;;;;;-1:-1:-1;;;756:13758:43;;;;;;10497:41;756:13758;;;10497:41;;;;;;;;;;;;;756:13758;;;;;;;10546:37;;;;;;756:13758;;;;;;;10546:37;;;;;;;;;;;;;;;;;;756:13758;10591:41;;;;;;;756:13758;;10591:41;;;756:13758;;10591:41;;756:13758;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;;;10591:41;;;;;;;;;;;756:13758;;;;;10640:37;;;;;756:13758;;;;;;;;;;;;;10640:37;;;756:13758;10640:37;;1671:64:22;10640:37:43;;;;;;;;756:13758;;10591:41;;;;:::i;:::-;756:13758;;10591:41;;;;10546:37;;;;:::i;:::-;756:13758;;10546:37;;;;;756:13758;;;10497:41;;;;:::i;:::-;756:13758;;10497:41;;;;;756:13758;;;;;;;;;10351:35;;;;;;;;;;;;;:::i;10180:79::-;;;;:::i;:::-;756:13758;;10180:79;;;;;756:13758;;;;;;;;;10180:79;756:13758;;;9810:35;;;;;;;;;;;;;:::i;:::-;;;;9622:56;;;;:::i;:::-;756:13758;;9622:56;;;;756:13758;;;;;;;;;;;;;825:40;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;973:32;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1462:78;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1546:70;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;1099:30;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;2560:18;;;;;;;;-1:-1:-1;;;;;2560:18:43;;;;;;;;;;;;;;;;;;;756:13758;;;;;;2545:33;756:13758;;-1:-1:-1;;;;;756:13758:43;;;;;2545:33;756:13758;;;2622:30;;;;;;;;;;-1:-1:-1;;;;;2622:30:43;;;;;;;756:13758;2622:30;;;;;;;756:13758;;;;2622:30;;;;;;;;;756:13758;;;;;;;2607:45;756:13758;;-1:-1:-1;;;;;756:13758:43;;;;;2607:45;756:13758;;;-1:-1:-1;;;;;756:13758:43;;2705:50;756:13758;;;2705:50;756:13758;;;;;;2545:33;756:13758;;;;2809:34;;;;;;;;;;-1:-1:-1;;;;;2809:34:43;;;;;;;;756:13758;2809:34;;;;756:13758;;2809:34;;;;;;;;;756:13758;;;;;;-1:-1:-1;;;;;756:13758:43;;2790:53;756:13758;;;2790:53;756:13758;;-1:-1:-1;;;;;;;;;;;2922:38:43;;;;;756:13758;;;;;;;;;;;;;2922:38;;2939:4;756:13758;2922:38;;756:13758;2939:4;756:13758;;;;2922:38;;;;;;;;756:13758;-1:-1:-1;2790:53:43;756:13758;-1:-1:-1;;;;;756:13758:43;2968:75;;;;;756:13758;;;;;;;;;;;;;2968:75;;;756:13758;2968:75;;756:13758;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;2968:75;;;;;;;;756:13758;-1:-1:-1;2790:53:43;756:13758;3119:18;756:13758;-1:-1:-1;;;;;756:13758:43;;;;;3082:71;;;;;756:13758;;;;;;;;;;;;;;;3082:71;;756:13758;3082:71;;756:13758;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;3082:71;;;;;;;;756:13758;-1:-1:-1;2790:53:43;756:13758;3234:7;756:13758;-1:-1:-1;;;;;756:13758:43;;;;;3197:64;;;;;756:13758;;;;;;;;;;;;;;;3197:64;;756:13758;3197:64;;756:13758;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;3197:64;;;;;;;;756:13758;-1:-1:-1;2790:53:43;756:13758;3330:10;756:13758;-1:-1:-1;;;;;756:13758:43;;;;;3293:55;;;;;756:13758;;;;;;;;;;;;;;;3293:55;;756:13758;3293:55;;756:13758;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;3293:55;;;;;;;;756:13758;-1:-1:-1;;2545:33:43;756:13758;;;3401:32;;;;;756:13758;-1:-1:-1;;;;;756:13758:43;;-1:-1:-1;;;;;3401:32:43;;;;;;;;;;756:13758;3401:32;;;;;;756:13758;;3401:32;;;;;;;;;3384:49;756:13758;;-1:-1:-1;;;;;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;;;;;;2790:53;756:13758;;;;;;3473:71;;;;;756:13758;;;-1:-1:-1;;;3473:71:43;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;3473:71;;756:13758;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;;3473:71;;;;;;;;756:13758;-1:-1:-1;;2545:33:43;756:13758;;;3596:36;;;;;756:13758;-1:-1:-1;;;;;756:13758:43;;-1:-1:-1;;;;;3596:36:43;;;;;;;;;;756:13758;3596:36;;;;;;756:13758;;3596:36;;;;;;;;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;;;;;;2790:53;756:13758;;;;;;3667:79;;;;;756:13758;;;-1:-1:-1;;;3667:79:43;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;3667:79;;756:13758;;;;;2705:50;756:13758;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;;3667:79;;;;;;;;756:13758;-1:-1:-1;;2545:33:43;756:13758;;;3798:33;;;;;756:13758;-1:-1:-1;;;;;756:13758:43;;-1:-1:-1;;;;;3798:33:43;;;;;;;;;;756:13758;3798:33;;;;;;756:13758;;3798:33;;;;;;;;;3780:51;756:13758;;-1:-1:-1;;;;;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;;;;;;2790:53;756:13758;;;;;;3869:73;;;;;756:13758;;;-1:-1:-1;;;3869:73:43;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;3869:73;;756:13758;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;;3869:73;;;;;;;;756:13758;-1:-1:-1;;2545:33:43;756:13758;;;3999:40;;;;;756:13758;-1:-1:-1;;;;;756:13758:43;;-1:-1:-1;;;;;3999:40:43;;;;;;;;;;756:13758;3999:40;;;;;;756:13758;;3999:40;;;;;;;;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;;;;;;2790:53;756:13758;;;;;;4075:87;;;;;756:13758;;;-1:-1:-1;;;4075:87:43;;756:13758;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;4075:87;;756:13758;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;;4075:87;;;;;;;;756:13758;-1:-1:-1;;2545:33:43;756:13758;;;4199:26;;;;;756:13758;-1:-1:-1;;;;;756:13758:43;;-1:-1:-1;;;;;4199:26:43;;;;;;;;;;756:13758;4199:26;;;;;;756:13758;;4199:26;;;;;;;;;4188:37;756:13758;;-1:-1:-1;;;;;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;;;;;;;2790:53;756:13758;;;;;;;;4256:59;;;;;756:13758;;;;;;;;;;;;;;;;;4256:59;;756:13758;;;4256:59;;756:13758;;;;;;4188:37;756:13758;;;;-1:-1:-1;;;756:13758:43;;;;4256:59;;;;;;;;756:13758;-1:-1:-1;;2705:50:43;756:13758;4405:9;756:13758;;;-1:-1:-1;;;4392:30:43;;;-1:-1:-1;;;;;756:13758:43;;;;4392:30;;756:13758;;;;;;;;;;;;;;;;;;;;;4392:30;;;;;;4584:25;4392:30;;;;;756:13758;-1:-1:-1;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;-1:-1:-1;;;;;756:13758:43;;;;;;;1671:64:22;756:13758:43;1671:64:22;:::i;:::-;756:13758:43;1671:64:22;;-1:-1:-1;;;756:13758:43;;;;4584:25;:::i;:::-;2705:50;756:13758;4405:9;756:13758;;;4696:30;;;-1:-1:-1;;;;;756:13758:43;;;;4696:30;;756:13758;;;;;;;;;;;;;;;;;;4696:30;;;;;;4890:27;4696:30;;;;;756:13758;-1:-1:-1;756:13758:43;;;-1:-1:-1;;;;;;756:13758:43;-1:-1:-1;;;;;756:13758:43;;;;;;;1671:64:22;756:13758:43;1671:64:22;:::i;:::-;756:13758:43;1671:64:22;;-1:-1:-1;;;756:13758:43;;;;4890:27;:::i;4696:30::-;;;;756:13758;4696:30;756:13758;4696:30;;;;;;;:::i;:::-;;;;4392;;;;756:13758;4392:30;756:13758;4392:30;;;;;;;:::i;:::-;;;;4256:59;;;;:::i;:::-;756:13758;;4256:59;;;;4199:26;-1:-1:-1;;;1671:64:22;;;756:13758:43;1671:64:22;756:13758:43;1671:64:22;;4075:87:43;;;;:::i;:::-;756:13758;;4075:87;;;;3869:73;;;;:::i;:::-;756:13758;;3869:73;;;;3667:79;;;;:::i;:::-;756:13758;;3667:79;;;;3473:71;;;;:::i;:::-;756:13758;;3473:71;;;;3293:55;;;;:::i;:::-;756:13758;;3293:55;;;;3197:64;;;;:::i;:::-;756:13758;;3197:64;;;;3082:71;;;;:::i;:::-;756:13758;;3082:71;;;;2968:75;;;;:::i;:::-;756:13758;;2968:75;;;;2922:38;;;;:::i;:::-;756:13758;;2922:38;;;;2809:34;-1:-1:-1;;;1671:64:22;;;756:13758:43;1671:64:22;;;;2622:30:43;-1:-1:-1;;;1671:64:22;;;756:13758:43;1671:64:22;;;;756:13758:43;;;;;;;-1:-1:-1;;756:13758:43;;;;;;:::i;:::-;;;;:::i;:::-;;-1:-1:-1;;;;;756:13758:43;;;5876:5;;;;;:38;;;756:13758;5873:1148;;;756:13758;;;;;;;;;;5925:16;756:13758;5935:5;756:13758;;5925:16;:::i;:::-;756:13758;;5951:11;756:13758;;5951:37;;;;;756:13758;;;;;;;;;;;;;5951:37;;;;;;;;;;5873:1148;756:13758;;;6008:14;756:13758;;;;5935:5;756:13758;;;;;;;;;;6008:44;;756:13758;6008:44;;756:13758;;;;;1671:64:22;756:13758:43;;;6008:44;;;;;;;;;;;;;;5873:1148;6073:7;;;;;;:::i;:::-;756:13758;5951:11;756:13758;;;;;;;;;;;;6106:32;;;;;756:13758;6106:32;;1671:64:22;6106:32:43;;;;;;;;;;5873:1148;6148:19;;;;;:::i;:::-;756:13758;-1:-1:-1;;;;;;;;;;;6220:36:43;;;;;756:13758;;;;;;;;;;;;;6220:36;;;756:13758;6220:36;;756:13758;6008:14;756:13758;;;;-1:-1:-1;;;756:13758:43;;;;6220:36;;;;;;;;5873:1148;756:13758;;;5951:11;756:13758;;;;6266:37;;;;;;756:13758;;;;;;;;;;;6266:37;;;;;756:13758;6266:37;;1671:64:22;6266:37:43;;;;;;;;5873:1148;756:13758;;5951:11;756:13758;;6352:38;;;;;;756:13758;;;;;;;6352:38;;;;;;;;756:13758;6352:38;;1671:64:22;6352:38:43;;;;;;;;;;;5873:1148;756:13758;;;;5951:11;756:13758;;;;;6415:32;;;;;;;756:13758;6415:32;;1671:64:22;6415:32:43;;;;;;;;;;;5873:1148;6468:17;;6509:7;6468:17;;;;:::i;6415:32::-;;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;;;;6468:17;6415:32;;;;;;;6352:38;;;;;;;:::i;:::-;756:13758;;6352:38;;;;;;6266:37;;;;:::i;:::-;756:13758;;6266:37;;;;6220:36;;;;:::i;:::-;756:13758;;6220:36;;;;6106:32;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;6148:19;756:13758;;6106:32;;;;;;;;756:13758;;;;;;;;;6008:44;;;;;;;;;;;;;;;;:::i;:::-;;;756:13758;;;;;6008:44;;;;;;;;5951:37;;;;:::i;:::-;756:13758;;5951:37;;;;5873:1148;6535:6;;;756:13758;;;;-1:-1:-1;;;;;;;;;;;6553:37:43;;;;;756:13758;;;;;;;;6553:37;;;;;;756:13758;6553:37;;;:::i;6532:489::-;6777:5;756:13758;-1:-1:-1;;;;;756:13758:43;;6767:16;;756:13758;;6767:16;:::i;:::-;756:13758;6793:11;756:13758;;6793:37;;;;;756:13758;;;;;;;;;;;;6793:37;;;;;;;;;;6532:489;756:13758;;;;6850:14;756:13758;;;;;6777:5;756:13758;;;;;;;;;;;;6850:44;;756:13758;6850:44;;756:13758;;;;;1671:64:22;6850:44:43;;;;;;;;;;;6532:489;756:13758;-1:-1:-1;;;;;;;;;;;6904:60:43;;;;;756:13758;;;;;;;;6904:60;;;;;;756:13758;6904:60;;;:::i;:::-;;;;;;;;;;;;;;6532:489;756:13758;;6793:11;756:13758;;6974:38;;;;;756:13758;;;;;;;;;;;;;;6974:38;;756:13758;6974:38;;1671:64:22;756:13758:43;6974:38;;;;;;;;;6532:489;;756:13758;;6904:60;;;;:::i;:::-;756:13758;;6904:60;;;;6850:44;;;;;756:13758;6850:44;;;;;;;;;756:13758;6850:44;;;:::i;:::-;;;756:13758;;;;;;;6850:44;;;;;;;-1:-1:-1;6850:44:43;;6793:37;;;;;;;:::i;:::-;;;;;;5876:38;756:13758;5906:8;5885:17;756:13758;;;5885:17;;:::i;:::-;:29;;5876:38;;756:13758;;;;-1:-1:-1;;;;;756:13758:43;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;756:13758:43;;;;;;:::o;:::-;;;;;;;;;;;:::o;1671:64:22:-;-1:-1:-1;;;;;1671:64:22;;;;;;:::o;:::-;;;;;;;;;;;;;756:13758:43;1671:64:22;;;;;-1:-1:-1;;;;;1671:64:22;;;;;756:13758:43;1671:64:22;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:22;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;-1:-1:-1;;1671:64:22;;;;:::o;:::-;;;;;;;;;;:::i;:::-;756:13758:43;1671:64:22;756:13758:43;;1671:64:22;;;:::i;:::-;;;;-1:-1:-1;1671:64:22;;;;:::o;:::-;;;:::o;1819:584::-;1873:7;756:13758:43;;;;;;;;;;;;;;;1896:14:22:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:22;;1980:374;;2367:19;;;:::o;1980:374::-;756:13758:43;;;;;2196:43:22;;;756:13758:43;;;;1671:64:22;;;756:13758:43;1671:64:22;;;756:13758:43;2196:43:22;;756:13758:43;1671:64:22;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;;;;2086:175;;1671:64;;;;;;756:13758:43;1671:64:22;2086:175;;;1671:64;;;;;;;;;;;;;;;;:::i;:::-;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;2196:43;1671:64;;;2312:27;;1671:64;;;;2196:43;2312:27;1671:64;756:13758:43;;;;1671:64:22;;;;2297:42;2367:19;:::o;756:13758:43:-;;;;;;;;;;-1:-1:-1;;;;;756:13758:43;;;;;;;:::o;6994:145:27:-;-1:-1:-1;6994:145:27;;;7077:54;756:13758:43;;;7077:54:27;;;;;;;;;;;756:13758:43;7077:54:27;;;756:13758:43;;1671:64:22;;756:13758:43;;;;;;;7077:54:27;756:13758:43;;;;;;:::i;:::-;;;;;;;;;;;1671:64:22;;;;;;756:13758:43;;7077:54:27;756:13758:43;7077:54:27;;;;;;;:::i;:::-;1671:64:22;392:159:27;131:42;392:159;;;6994:145::o;2410:424:22:-;-1:-1:-1;;;;;;;;;;;2939:104:22;;2445:359;;2410:424;756:13758:43;;;;2928:1:22;756:13758:43;;;2928:1:22;756:13758:43;2410:424:22:o;2445:359::-;756:13758:43;;2645:67:22;;;;756:13758:43;;;;1671:64:22;;;756:13758:43;;;1671:64:22;2705:4;756:13758:43;;;1671:64:22;756:13758:43;2645:67:22;;756:13758:43;1671:64:22;;;;;;-1:-1:-1;;;;;1671:64:22;;;;;-1:-1:-1;1671:64:22;2534:196;;1671:64;;;;756:13758:43;1671:64:22;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;756:13758:43;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;:::o;3255:157:22:-;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;3345:30:22;;;:::i;:::-;3255:157::o;5202:262::-;5259:6;;;5255:203;;5202:262;;:::o;5255:203::-;756:13758:43;;;;-1:-1:-1;;;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;5286:41:22;756:13758:43;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;1671:64:22;5346:31;;;;;;;;756:13758:43;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;1671:64:22;5396:31;;;;;:::i;1998:108:25:-;-1:-1:-1;;;;;;;;;;;2049:22:25;;;;;756:13758:43;;-1:-1:-1;;;2049:22:25;;-1:-1:-1;;;;;756:13758:43;;;2049:22:25;;;756:13758:43;;;-1:-1:-1;;;756:13758:43;;;1671:64:22;2049:22:25;;;756:13758:43;;;2049:22:25;;;;;;;;;;1998:108;2081:18;;;;;;756:13758:43;;;;;;;;;;;;;;;2081:18:25;;2049:22;2081:18;;756:13758:43;2081:18:25;;;;;;;;1998:108;;:::o;2081:18::-;;;;;:::i;:::-;756:13758:43;;1998:108:25;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;756:13758:43;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;756:13758:43;;;;;;;;;;;;;;;;;;:::i;:::-;;1671:64:22;756:13758:43;;1671:64:22;;;:::i;:::-;756:13758:43;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;10198:6;756:13758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;10198:6;-1:-1:-1;756:13758:43;;;;-1:-1:-1;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;756:13758:43;;;;;-1:-1:-1;;756:13758:43;;;;;;;;-1:-1:-1;756:13758:43;;;;;;;1671:64:22;;;-1:-1:-1;756:13758:43;;;;;-1:-1:-1;756:13758:43;;;;;;;;;;;;10230:9;756:13758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;10230:9;-1:-1:-1;756:13758:43;;;;-1:-1:-1;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;756:13758:43;10206:22;756:13758;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1671:64:22;756:13758:43:o;:::-;;;;;10206:22;-1:-1:-1;756:13758:43;;;-1:-1:-1;756:13758:43;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;756:13758:43;;;;;-1:-1:-1;;756:13758:43;;;;;;;;-1:-1:-1;756:13758:43;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;1671:64:22;756:13758:43;;;;;;;;1449:98:25;-1:-1:-1;;;;;;;;;;;1495:22:25;;;;;756:13758:43;;-1:-1:-1;;;1495:22:25;;-1:-1:-1;;;;;756:13758:43;;;1495:22:25;;;756:13758:43;;;-1:-1:-1;;;756:13758:43;;;1671:64:22;1495:22:25;;;756:13758:43;;;1495:22:25;;;;;;;;;;1449:98;1527:13;;;;;;756:13758:43;;;;;;;;;;;;;;;1527:13:25;;1495:22;1527:13;;756:13758:43;1527:13:25;;;;;;;;1449:98;;:::o;1495:22::-;;;;;;;:::i;:::-;;;;;10679:516;;37288:5;;;;;;37308;;;;:::i;:::-;37288:45;;12947:1:43;10853:16:25;;10849:340;;10679:516;;;:::o;10849:340::-;756:13758:43;;;;;;;-1:-1:-1;;;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;10890:53:25;756:13758:43;;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;1671:64:22;10962:32:25;;;;;;;;;756:13758:43;;;;;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;;;;;;;1671:64:22;11013:32:25;;;756:13758:43;;;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;12947:1;756:13758;;;1671:64:22;11064:39:25;756:13758:43;;;;;;;;;;-1:-1:-1;;;756:13758:43;;;;;;1671:64:22;11122:36:25;;;:::i;37288:45::-;37328:5;;;;:::i;:::-;37288:45;;;756:13758:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "factoryProxy()": "7509c39b",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensInitialiser()": "32551a60",
    "frensMetaHelper()": "bc48e947",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "proxy()": "ec556889",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPool2()": "5f583c1d",
    "stakingPoolFactory()": "a1b8adcb",
    "testAddToDeposit(uint64,uint64)": "020f12da",
    "testAddToDepositWrongPool(uint64,uint64)": "b7ab10ee",
    "testBadWithdrawalCred()": "8adcff77",
    "testDeposit(uint72)": "4ccd89c4",
    "testDistribute(uint32,uint32)": "c07d2f57",
    "testOwner()": "9e535c69",
    "testPubKeyMismatch()": "94892dda",
    "testStake()": "3a1143da",
    "testStakeTwoStep()": "5dcf6be5",
    "testWithdraw(uint72,uint72)": "90f805d9",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryProxy\",\"outputs\":[{\"internalType\":\"contract FactoryProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensInitialiser\",\"outputs\":[{\"internalType\":\"contract FrensInitialiser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract IStakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool2\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDepositWrongPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBadWithdrawalCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testPubKeyMismatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStakeTwoStep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"y\",\"type\":\"uint72\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/StakingPool.t.sol\":\"StakingPoolTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101\",\"dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh\"]},\"contracts/FrensArt.sol\":{\"keccak256\":\"0x10bfe1e720b429c6fea0a121fb1e15448048452b7d48be0bec7e01937d11b459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://711f4df83c0b1f2862f496ecd7a89be2c83fdcef94107512ce96be4e7e086a65\",\"dweb:/ipfs/QmQVHLxZ8WgxrusTYvfNUPmGfL62D2YC3Fj9i5u8VY7sU4\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/FrensInitialiser.sol\":{\"keccak256\":\"0x98857d91ad48e11ef56e719cb1dd7d585f509dcdb8c5c30ac2cd16810ed794dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c5ea731a961ddebe47c0b9944901651f6e441afe955b9568d9452651993f7ee\",\"dweb:/ipfs/QmPL2Lc68EScXaFiMUBZ7T8udeWMdRecxBeCGrdEVU4HQh\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x54ba5918116ad07ce968b6d239eaac02b9e38458af631e8ae0f0fcbc14e39af0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d7ccdb3253aa2b058ed2996057999393c684405cab86af29948c3a418b994f3\",\"dweb:/ipfs/QmP3m9nxiqpqhEhrZb9RSqrZKyGhYsAcELTMYPWJ4Yzmbh\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0xf1f80343dedec073401d3657de681982c7f75136b828caee57d30cc9024b4bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fddff2687c256ebfc7578aff07fa2e5efaf70c1c7c49eb97d483480a4dfc0e25\",\"dweb:/ipfs/QmZNNmfrvftjf54Pbmekp9F4fTgd2wKixau5f5YsLLZDcK\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0xce33aeb0f23813dac45144d017246b481340113d0cf97649c1cd350406dbed87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcadf57aa1b50e16bf6fa7ee3a8dc5a05aad90fd412b8421c6c89793200e9e92\",\"dweb:/ipfs/QmSvkvwBE1gNxEs4MJPXaaLe177AEEkamKiuK4PaEnfTGx\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709\",\"dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x2871cf543dd75fe136bff22babe8e8737c9722178e2aed4351e592e803509f92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://18676ea4db97f3fac05632df0adea1d67879535d7ca3b7c2fc2cfcf1e05eea7a\",\"dweb:/ipfs/QmTdrhmwj4f2WrRS18sb4YJhH6z41q8QYSAaWEDk614Qun\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f\",\"dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3\"]},\"contracts/ToColor.sol\":{\"keccak256\":\"0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359\",\"dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0x643308572ba7413d67a1147b87179e4b2ab606336da93d6fb5394e5d60579cc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2a3896dc94dc604907a5ce8b2e6b79881a2003d3979a1a0716165b26d5750cf\",\"dweb:/ipfs/QmWry7rMSiySd6dX6XCNGstRSiigUwhqiNYJxVRN6apR7i\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x3d9190356b243fa28107e4576ef453a1ad4a6b22dd61e7ed61ab28540fd4f1e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e95bcf22e5b6da1b16a96bc759af70eaaaeaf2d1c01fd002aeb29728e96e64d\",\"dweb:/ipfs/QmZPrE1eAtMSbVma4Wg2EioDWgGDmQZr9GAFM5A7GZL85a\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009\",\"dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/ISSVRegistry.sol\":{\"keccak256\":\"0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4\",\"dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278\",\"dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/StakingPool.t.sol\":{\"keccak256\":\"0xa6fc008c1e26373dc90871ce93ae41767e94bf2ceab84f18027a16c24db12a62\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c1ab1f043b7c399524b67eb3e09040f8b944fcc1068715352eceafa5dd6f1ba8\",\"dweb:/ipfs/QmTZfB4qfFG8X3fzZPZMhxZgpgvNuJRDpgxNWomRMETycL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryProxy",
          "outputs": [
            {
              "internalType": "contract FactoryProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensInitialiser",
          "outputs": [
            {
              "internalType": "contract FrensInitialiser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxy",
          "outputs": [
            {
              "internalType": "contract IStakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool2",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDepositWrongPool"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBadWithdrawalCred"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDistribute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testPubKeyMismatch"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStakeTwoStep"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            },
            {
              "internalType": "uint72",
              "name": "y",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/StakingPool.t.sol": "StakingPoolTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2",
        "urls": [
          "bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101",
          "dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh"
        ],
        "license": "MIT"
      },
      "contracts/FrensArt.sol": {
        "keccak256": "0x10bfe1e720b429c6fea0a121fb1e15448048452b7d48be0bec7e01937d11b459",
        "urls": [
          "bzz-raw://711f4df83c0b1f2862f496ecd7a89be2c83fdcef94107512ce96be4e7e086a65",
          "dweb:/ipfs/QmQVHLxZ8WgxrusTYvfNUPmGfL62D2YC3Fj9i5u8VY7sU4"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/FrensInitialiser.sol": {
        "keccak256": "0x98857d91ad48e11ef56e719cb1dd7d585f509dcdb8c5c30ac2cd16810ed794dc",
        "urls": [
          "bzz-raw://9c5ea731a961ddebe47c0b9944901651f6e441afe955b9568d9452651993f7ee",
          "dweb:/ipfs/QmPL2Lc68EScXaFiMUBZ7T8udeWMdRecxBeCGrdEVU4HQh"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x54ba5918116ad07ce968b6d239eaac02b9e38458af631e8ae0f0fcbc14e39af0",
        "urls": [
          "bzz-raw://2d7ccdb3253aa2b058ed2996057999393c684405cab86af29948c3a418b994f3",
          "dweb:/ipfs/QmP3m9nxiqpqhEhrZb9RSqrZKyGhYsAcELTMYPWJ4Yzmbh"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0xf1f80343dedec073401d3657de681982c7f75136b828caee57d30cc9024b4bb3",
        "urls": [
          "bzz-raw://fddff2687c256ebfc7578aff07fa2e5efaf70c1c7c49eb97d483480a4dfc0e25",
          "dweb:/ipfs/QmZNNmfrvftjf54Pbmekp9F4fTgd2wKixau5f5YsLLZDcK"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0xce33aeb0f23813dac45144d017246b481340113d0cf97649c1cd350406dbed87",
        "urls": [
          "bzz-raw://dcadf57aa1b50e16bf6fa7ee3a8dc5a05aad90fd412b8421c6c89793200e9e92",
          "dweb:/ipfs/QmSvkvwBE1gNxEs4MJPXaaLe177AEEkamKiuK4PaEnfTGx"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf",
        "urls": [
          "bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709",
          "dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x2871cf543dd75fe136bff22babe8e8737c9722178e2aed4351e592e803509f92",
        "urls": [
          "bzz-raw://18676ea4db97f3fac05632df0adea1d67879535d7ca3b7c2fc2cfcf1e05eea7a",
          "dweb:/ipfs/QmTdrhmwj4f2WrRS18sb4YJhH6z41q8QYSAaWEDk614Qun"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9",
        "urls": [
          "bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f",
          "dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3"
        ],
        "license": "MIT"
      },
      "contracts/ToColor.sol": {
        "keccak256": "0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd",
        "urls": [
          "bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359",
          "dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0x643308572ba7413d67a1147b87179e4b2ab606336da93d6fb5394e5d60579cc2",
        "urls": [
          "bzz-raw://f2a3896dc94dc604907a5ce8b2e6b79881a2003d3979a1a0716165b26d5750cf",
          "dweb:/ipfs/QmWry7rMSiySd6dX6XCNGstRSiigUwhqiNYJxVRN6apR7i"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x3d9190356b243fa28107e4576ef453a1ad4a6b22dd61e7ed61ab28540fd4f1e4",
        "urls": [
          "bzz-raw://9e95bcf22e5b6da1b16a96bc759af70eaaaeaf2d1c01fd002aeb29728e96e64d",
          "dweb:/ipfs/QmZPrE1eAtMSbVma4Wg2EioDWgGDmQZr9GAFM5A7GZL85a"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c",
        "urls": [
          "bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009",
          "dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISSVRegistry.sol": {
        "keccak256": "0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f",
        "urls": [
          "bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4",
          "dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a",
        "urls": [
          "bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278",
          "dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/StakingPool.t.sol": {
        "keccak256": "0xa6fc008c1e26373dc90871ce93ae41767e94bf2ceab84f18027a16c24db12a62",
        "urls": [
          "bzz-raw://c1ab1f043b7c399524b67eb3e09040f8b944fcc1068715352eceafa5dd6f1ba8",
          "dweb:/ipfs/QmTZfB4qfFG8X3fzZPZMhxZgpgvNuJRDpgxNWomRMETycL"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/StakingPool.t.sol",
    "id": 31552,
    "exportedSymbols": {
      "Address": [
        29712
      ],
      "Base64": [
        30088
      ],
      "Context": [
        29734
      ],
      "DSTest": [
        6506
      ],
      "ERC165": [
        29961
      ],
      "ERC721": [
        28885
      ],
      "ERC721Enumerable": [
        29357
      ],
      "FactoryProxy": [
        58
      ],
      "FrensArt": [
        245
      ],
      "FrensBase": [
        836
      ],
      "FrensInitialiser": [
        989
      ],
      "FrensMetaHelper": [
        1398
      ],
      "FrensPoolShare": [
        1557
      ],
      "FrensPoolShareTokenURI": [
        1899
      ],
      "FrensStorage": [
        2529
      ],
      "IDepositContract": [
        3974
      ],
      "IENS": [
        4111
      ],
      "IERC165": [
        29973
      ],
      "IERC721": [
        29001
      ],
      "IERC721Enumerable": [
        29388
      ],
      "IERC721Metadata": [
        29415
      ],
      "IERC721Receiver": [
        29019
      ],
      "IFrensArt": [
        4121
      ],
      "IFrensMetaHelper": [
        4157
      ],
      "IFrensPoolShare": [
        4198
      ],
      "IFrensPoolShareTokenURI": [
        4208
      ],
      "IFrensStorage": [
        4404
      ],
      "IReverseResolver": [
        4414
      ],
      "ISSVRegistry": [
        4616
      ],
      "IStakingPool": [
        4707
      ],
      "IStakingPoolFactory": [
        4719
      ],
      "Ownable": [
        28051
      ],
      "Script": [
        6769
      ],
      "StakingPool": [
        3736
      ],
      "StakingPoolFactory": [
        3879
      ],
      "StakingPoolTest": [
        31551
      ],
      "StdStorage": [
        9797
      ],
      "Strings": [
        29937
      ],
      "Test": [
        9699
      ],
      "ToColor": [
        3955
      ],
      "Vm": [
        11818
      ],
      "console": [
        19882
      ],
      "console2": [
        27946
      ],
      "stdError": [
        9769
      ],
      "stdJson": [
        7129
      ],
      "stdMath": [
        11038
      ],
      "stdStorage": [
        10899
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:14476:43",
    "nodes": [
      {
        "id": 30090,
        "nodeType": "PragmaDirective",
        "src": "39:24:43",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 30091,
        "nodeType": "ImportDirective",
        "src": "181:28:43",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 11039,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30092,
        "nodeType": "ImportDirective",
        "src": "229:38:43",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 246,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30093,
        "nodeType": "ImportDirective",
        "src": "268:46:43",
        "nodes": [],
        "absolutePath": "contracts/FrensInitialiser.sol",
        "file": "../../contracts/FrensInitialiser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 990,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30094,
        "nodeType": "ImportDirective",
        "src": "315:45:43",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 1399,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30095,
        "nodeType": "ImportDirective",
        "src": "361:52:43",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 1900,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30096,
        "nodeType": "ImportDirective",
        "src": "414:42:43",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 2530,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30097,
        "nodeType": "ImportDirective",
        "src": "457:42:43",
        "nodes": [],
        "absolutePath": "contracts/FactoryProxy.sol",
        "file": "../../contracts/FactoryProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 59,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30098,
        "nodeType": "ImportDirective",
        "src": "500:41:43",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 3737,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30099,
        "nodeType": "ImportDirective",
        "src": "542:48:43",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 3880,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30100,
        "nodeType": "ImportDirective",
        "src": "591:44:43",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 1558,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30101,
        "nodeType": "ImportDirective",
        "src": "636:60:43",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 4720,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30102,
        "nodeType": "ImportDirective",
        "src": "697:57:43",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31552,
        "sourceUnit": 3975,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 31551,
        "nodeType": "ContractDefinition",
        "src": "756:13758:43",
        "nodes": [
          {
            "id": 30107,
            "nodeType": "VariableDeclaration",
            "src": "795:24:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "811:8:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$245",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 30106,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30105,
                "name": "FrensArt",
                "nameLocations": [
                  "795:8:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 245,
                "src": "795:8:43"
              },
              "referencedDeclaration": 245,
              "src": "795:8:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$245",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30110,
            "nodeType": "VariableDeclaration",
            "src": "825:40:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "32551a60",
            "mutability": "mutable",
            "name": "frensInitialiser",
            "nameLocation": "849:16:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensInitialiser_$989",
              "typeString": "contract FrensInitialiser"
            },
            "typeName": {
              "id": 30109,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30108,
                "name": "FrensInitialiser",
                "nameLocations": [
                  "825:16:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 989,
                "src": "825:16:43"
              },
              "referencedDeclaration": 989,
              "src": "825:16:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                "typeString": "contract FrensInitialiser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30113,
            "nodeType": "VariableDeclaration",
            "src": "871:38:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "894:15:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 30112,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30111,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "871:15:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1398,
                "src": "871:15:43"
              },
              "referencedDeclaration": 1398,
              "src": "871:15:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30116,
            "nodeType": "VariableDeclaration",
            "src": "915:52:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "945:22:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 30115,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30114,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "915:22:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1899,
                "src": "915:22:43"
              },
              "referencedDeclaration": 1899,
              "src": "915:22:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30119,
            "nodeType": "VariableDeclaration",
            "src": "973:32:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "993:12:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$2529",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 30118,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30117,
                "name": "FrensStorage",
                "nameLocations": [
                  "973:12:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2529,
                "src": "973:12:43"
              },
              "referencedDeclaration": 2529,
              "src": "973:12:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$2529",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30122,
            "nodeType": "VariableDeclaration",
            "src": "1011:32:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "7509c39b",
            "mutability": "mutable",
            "name": "factoryProxy",
            "nameLocation": "1031:12:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryProxy_$58",
              "typeString": "contract FactoryProxy"
            },
            "typeName": {
              "id": 30121,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30120,
                "name": "FactoryProxy",
                "nameLocations": [
                  "1011:12:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58,
                "src": "1011:12:43"
              },
              "referencedDeclaration": 58,
              "src": "1011:12:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                "typeString": "contract FactoryProxy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30125,
            "nodeType": "VariableDeclaration",
            "src": "1049:44:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1075:18:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 30124,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30123,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1049:18:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3879,
                "src": "1049:18:43"
              },
              "referencedDeclaration": 3879,
              "src": "1049:18:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30128,
            "nodeType": "VariableDeclaration",
            "src": "1099:30:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1118:11:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$3736",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30127,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30126,
                "name": "StakingPool",
                "nameLocations": [
                  "1099:11:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3736,
                "src": "1099:11:43"
              },
              "referencedDeclaration": 3736,
              "src": "1099:11:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$3736",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30131,
            "nodeType": "VariableDeclaration",
            "src": "1135:31:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "5f583c1d",
            "mutability": "mutable",
            "name": "stakingPool2",
            "nameLocation": "1154:12:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$3736",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 30130,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30129,
                "name": "StakingPool",
                "nameLocations": [
                  "1135:11:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3736,
                "src": "1135:11:43"
              },
              "referencedDeclaration": 3736,
              "src": "1135:11:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$3736",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30134,
            "nodeType": "VariableDeclaration",
            "src": "1172:36:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1194:14:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 30133,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30132,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1172:14:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1557,
                "src": "1172:14:43"
              },
              "referencedDeclaration": 1557,
              "src": "1172:14:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30137,
            "nodeType": "VariableDeclaration",
            "src": "1214:32:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec556889",
            "mutability": "mutable",
            "name": "proxy",
            "nameLocation": "1241:5:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
              "typeString": "contract IStakingPoolFactory"
            },
            "typeName": {
              "id": 30136,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30135,
                "name": "IStakingPoolFactory",
                "nameLocations": [
                  "1214:19:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4719,
                "src": "1214:19:43"
              },
              "referencedDeclaration": 4719,
              "src": "1214:19:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
                "typeString": "contract IStakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30143,
            "nodeType": "VariableDeclaration",
            "src": "1267:84:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1290:7:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30138,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1267:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 30141,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1308:42:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30140,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1300:8:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30139,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1300:8:43",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30142,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1300:51:43",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30146,
            "nodeType": "VariableDeclaration",
            "src": "1462:78:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1477:18:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1462:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 30145,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1498:42:43",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 30149,
            "nodeType": "VariableDeclaration",
            "src": "1546:70:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1561:10:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30147,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1546:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 30148,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1574:42:43",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 30155,
            "nodeType": "VariableDeclaration",
            "src": "1623:60:43",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1640:15:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$3974",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 30151,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30150,
                "name": "IDepositContract",
                "nameLocations": [
                  "1623:16:43"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3974,
                "src": "1623:16:43"
              },
              "referencedDeclaration": 3974,
              "src": "1623:16:43",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$3974",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 30153,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 30143,
                  "src": "1675:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 30152,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3974,
                "src": "1658:16:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$3974_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 30154,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1658:25:43",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$3974",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30158,
            "nodeType": "VariableDeclaration",
            "src": "1690:69:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1705:9:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30156,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1690:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 30157,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1717:42:43",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 30164,
            "nodeType": "VariableDeclaration",
            "src": "1765:82:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1788:5:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30159,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1765:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 30162,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1804:42:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30161,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1796:8:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30160,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1796:8:43",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30163,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1796:51:43",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30170,
            "nodeType": "VariableDeclaration",
            "src": "1853:80:43",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1876:3:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 30165,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1853:15:43",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 30168,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1890:42:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30167,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1882:8:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 30166,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:8:43",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 30169,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1882:51:43",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 30173,
            "nodeType": "VariableDeclaration",
            "src": "1940:116:43",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1946:6:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30171,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1940:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7",
              "id": 30172,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1955:101:43",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bdfcfb749742c3093aa9581e8ef2ad1af416ff72460d5243d448d690ad5323e3",
                "typeString": "literal_string hex\"b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30176,
            "nodeType": "VariableDeclaration",
            "src": "2062:100:43",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2068:22:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30174,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2062:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c",
              "id": 30175,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2093:69:43",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5d67e6bdff9aea033a87277a58dc16c10570179f0e67537385b6a1ef5aafe5d7",
                "typeString": "literal_string hex\"010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30179,
            "nodeType": "VariableDeclaration",
            "src": "2168:215:43",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2174:9:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 30177,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2168:5:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3",
              "id": 30178,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2186:197:43",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92410a21b5a1c3f6142a52b50473f8a72585ecd3f6161746c16dd03094aaf9d4",
                "typeString": "literal_string hex\"b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 30182,
            "nodeType": "VariableDeclaration",
            "src": "2389:94:43",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2397:17:43",
            "scope": 31551,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 30180,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2389:7:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834333632613038353937613136373037623466396364653838616132653964353164313737373562363734393037323630373263653838393731323864346332",
              "id": 30181,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2417:66:43",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30479219748484076069933062356768087265247727824042884735859412202213029237954_by_1",
                "typeString": "int_const 3047...(69 digits omitted)...7954"
              },
              "value": "0x4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c2"
            },
            "visibility": "internal"
          },
          {
            "id": 30400,
            "nodeType": "FunctionDefinition",
            "src": "2490:2435:43",
            "nodes": [],
            "body": {
              "id": 30399,
              "nodeType": "Block",
              "src": "2514:2411:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 30190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30185,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30119,
                      "src": "2545:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$2529",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 30188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2560:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$2529_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 30187,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30186,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2564:12:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2529,
                            "src": "2564:12:43"
                          },
                          "referencedDeclaration": 2529,
                          "src": "2564:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 30189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2560:18:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$2529",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2545:33:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$2529",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 30191,
                  "nodeType": "ExpressionStatement",
                  "src": "2545:33:43"
                },
                {
                  "expression": {
                    "id": 30198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30192,
                      "name": "factoryProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30122,
                      "src": "2607:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30196,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "2639:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2622:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_FactoryProxy_$58_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FactoryProxy)"
                        },
                        "typeName": {
                          "id": 30194,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30193,
                            "name": "FactoryProxy",
                            "nameLocations": [
                              "2626:12:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 58,
                            "src": "2626:12:43"
                          },
                          "referencedDeclaration": 58,
                          "src": "2626:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FactoryProxy_$58",
                            "typeString": "contract FactoryProxy"
                          }
                        }
                      },
                      "id": 30197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2622:30:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "src": "2607:45:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryProxy_$58",
                      "typeString": "contract FactoryProxy"
                    }
                  },
                  "id": 30199,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:45:43"
                },
                {
                  "expression": {
                    "id": 30207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30200,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30137,
                      "src": "2705:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30204,
                              "name": "factoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30122,
                              "src": "2741:12:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            ],
                            "id": 30203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2733:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30202,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2733:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2733:21:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 30201,
                        "name": "IStakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4719,
                        "src": "2713:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakingPoolFactory_$4719_$",
                          "typeString": "type(contract IStakingPoolFactory)"
                        }
                      },
                      "id": 30206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2713:42:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "src": "2705:50:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
                      "typeString": "contract IStakingPoolFactory"
                    }
                  },
                  "id": 30208,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:50:43"
                },
                {
                  "expression": {
                    "id": 30215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30209,
                      "name": "frensInitialiser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30110,
                      "src": "2790:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30213,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "2830:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2809:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_FrensInitialiser_$989_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensInitialiser)"
                        },
                        "typeName": {
                          "id": 30211,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30210,
                            "name": "FrensInitialiser",
                            "nameLocations": [
                              "2813:16:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 989,
                            "src": "2813:16:43"
                          },
                          "referencedDeclaration": 989,
                          "src": "2813:16:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                            "typeString": "contract FrensInitialiser"
                          }
                        }
                      },
                      "id": 30214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2809:34:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "src": "2790:53:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                      "typeString": "contract FrensInitialiser"
                    }
                  },
                  "id": 30216,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:53:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30222,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2939:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$31551",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$31551",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 30221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2931:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2931:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2931:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30226,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2954:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$31551",
                              "typeString": "contract StakingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolTest_$31551",
                              "typeString": "contract StakingPoolTest"
                            }
                          ],
                          "id": 30225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2946:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2946:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2946:13:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30217,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "2922:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11818",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 30219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2925:5:43",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11275,
                      "src": "2922:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 30228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2922:38:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30229,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:38:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30235,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30110,
                            "src": "3005:16:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 30234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2997:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30233,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2997:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2997:25:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73496e697469616c69736572",
                        "id": 30237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3024:18:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        },
                        "value": "FrensInitialiser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        }
                      ],
                      "expression": {
                        "id": 30230,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "2968:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2985:11:43",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "2968:28:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2968:75:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30239,
                  "nodeType": "ExpressionStatement",
                  "src": "2968:75:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30243,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30146,
                        "src": "3119:18:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5353565265676973747279",
                        "id": 30244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3139:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        },
                        "value": "SSVRegistry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        }
                      ],
                      "expression": {
                        "id": 30240,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "3082:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3099:19:43",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 988,
                      "src": "3082:36:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3082:71:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30246,
                  "nodeType": "ExpressionStatement",
                  "src": "3082:71:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30250,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30143,
                        "src": "3234:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "4465706f736974436f6e7472616374",
                        "id": 30251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        },
                        "value": "DepositContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        }
                      ],
                      "expression": {
                        "id": 30247,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "3197:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3214:19:43",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 988,
                      "src": "3197:36:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3197:64:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30253,
                  "nodeType": "ExpressionStatement",
                  "src": "3197:64:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30257,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30149,
                        "src": "3330:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "454e53",
                        "id": 30258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3342:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        },
                        "value": "ENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        }
                      ],
                      "expression": {
                        "id": 30254,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "3293:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3310:19:43",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 988,
                      "src": "3293:36:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3293:55:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30260,
                  "nodeType": "ExpressionStatement",
                  "src": "3293:55:43"
                },
                {
                  "expression": {
                    "id": 30267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30261,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30134,
                      "src": "3384:14:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30265,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "3420:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3401:18:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_FrensPoolShare_$1557_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 30263,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30262,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3405:14:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1557,
                            "src": "3405:14:43"
                          },
                          "referencedDeclaration": 1557,
                          "src": "3405:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 30266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3401:32:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3384:49:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 30268,
                  "nodeType": "ExpressionStatement",
                  "src": "3384:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30274,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30134,
                            "src": "3510:14:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 30273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3502:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3502:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3502:23:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265",
                        "id": 30276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3527:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        },
                        "value": "FrensPoolShare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        }
                      ],
                      "expression": {
                        "id": 30269,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "3473:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3490:11:43",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "3473:28:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3473:71:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30278,
                  "nodeType": "ExpressionStatement",
                  "src": "3473:71:43"
                },
                {
                  "expression": {
                    "id": 30285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30279,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30125,
                      "src": "3575:18:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30283,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "3619:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3596:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_StakingPoolFactory_$3879_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 30281,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30280,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3600:18:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3879,
                            "src": "3600:18:43"
                          },
                          "referencedDeclaration": 3879,
                          "src": "3600:18:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 30284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3596:36:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3575:57:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 30286,
                  "nodeType": "ExpressionStatement",
                  "src": "3575:57:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30292,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30125,
                            "src": "3704:18:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$3879",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 30291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3696:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3696:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3696:27:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67506f6f6c466163746f7279",
                        "id": 30294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3725:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        },
                        "value": "StakingPoolFactory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        }
                      ],
                      "expression": {
                        "id": 30287,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "3667:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3684:11:43",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "3667:28:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30296,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:79:43"
                },
                {
                  "expression": {
                    "id": 30303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30297,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30113,
                      "src": "3780:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30301,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "3818:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3798:19:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_FrensMetaHelper_$1398_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 30299,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30298,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "3802:15:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1398,
                            "src": "3802:15:43"
                          },
                          "referencedDeclaration": 1398,
                          "src": "3802:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 30302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3798:33:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "3780:51:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 30304,
                  "nodeType": "ExpressionStatement",
                  "src": "3780:51:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30310,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30113,
                            "src": "3906:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1398",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 30309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3898:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30308,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3898:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3898:24:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d65746148656c706572",
                        "id": 30312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3924:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        },
                        "value": "FrensMetaHelper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        }
                      ],
                      "expression": {
                        "id": 30305,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "3869:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3886:11:43",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "3869:28:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3869:73:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30314,
                  "nodeType": "ExpressionStatement",
                  "src": "3869:73:43"
                },
                {
                  "expression": {
                    "id": 30321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30315,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30116,
                      "src": "3974:22:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30319,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "4026:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3999:26:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_FrensPoolShareTokenURI_$1899_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 30317,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30316,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4003:22:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1899,
                            "src": "4003:22:43"
                          },
                          "referencedDeclaration": 1899,
                          "src": "4003:22:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 30320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3999:40:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "3974:65:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 30322,
                  "nodeType": "ExpressionStatement",
                  "src": "3974:65:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30328,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30116,
                            "src": "4112:22:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$1899",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 30327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4104:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4104:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4104:31:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                        "id": 30330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4137:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        },
                        "value": "FrensPoolShareTokenURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        }
                      ],
                      "expression": {
                        "id": 30323,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "4075:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4092:11:43",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "4075:28:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4075:87:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30332,
                  "nodeType": "ExpressionStatement",
                  "src": "4075:87:43"
                },
                {
                  "expression": {
                    "id": 30339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30333,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30107,
                      "src": "4188:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$245",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 30337,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30119,
                          "src": "4212:12:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2529",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 30336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4199:12:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4404_$returns$_t_contract$_FrensArt_$245_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 30335,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 30334,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4203:8:43"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 245,
                            "src": "4203:8:43"
                          },
                          "referencedDeclaration": 245,
                          "src": "4203:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$245",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 30338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4199:26:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$245",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4188:37:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$245",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 30340,
                  "nodeType": "ExpressionStatement",
                  "src": "4188:37:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 30346,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30107,
                            "src": "4293:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$245",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$245",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 30345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4285:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4285:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4285:17:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73417274",
                        "id": 30348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4304:10:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        },
                        "value": "FrensArt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        }
                      ],
                      "expression": {
                        "id": 30341,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30110,
                        "src": "4256:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$989",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 30343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4273:11:43",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 915,
                      "src": "4256:28:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 30349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4256:59:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30350,
                  "nodeType": "ExpressionStatement",
                  "src": "4256:59:43"
                },
                {
                  "assignments": [
                    30352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30352,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "4384:4:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30399,
                      "src": "4376:12:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30351,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4376:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30358,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30355,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "4405:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4416:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30353,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30137,
                        "src": "4392:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 30354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4398:6:43",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4718,
                      "src": "4392:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:30:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4375:47:43"
                },
                {
                  "expression": {
                    "id": 30366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30359,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30128,
                      "src": "4462:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3736",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30363,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30352,
                              "src": "4496:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4488:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30361,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4488:8:43",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4488:13:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30360,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3736,
                        "src": "4476:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$3736_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30365,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4476:26:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3736",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4462:40:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$3736",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30367,
                  "nodeType": "ExpressionStatement",
                  "src": "4462:40:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f6f6c",
                        "id": 30371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4596:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e35b2940ca10a9581573918a0d9ed2422f97cc9196f63510c77f5a0ed5393cfd",
                          "typeString": "literal_string \"pool\""
                        },
                        "value": "pool"
                      },
                      {
                        "id": 30372,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30352,
                        "src": "4604:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e35b2940ca10a9581573918a0d9ed2422f97cc9196f63510c77f5a0ed5393cfd",
                          "typeString": "literal_string \"pool\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30368,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19882,
                        "src": "4584:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$19882_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4592:3:43",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12577,
                      "src": "4584:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 30373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4584:25:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30374,
                  "nodeType": "ExpressionStatement",
                  "src": "4584:25:43"
                },
                {
                  "assignments": [
                    30376
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30376,
                      "mutability": "mutable",
                      "name": "pool2",
                      "nameLocation": "4687:5:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30399,
                      "src": "4679:13:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30375,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4679:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30382,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30379,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "4709:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 30380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4720:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 30377,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30137,
                        "src": "4696:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$4719",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 30378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4702:6:43",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4718,
                      "src": "4696:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 30381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4696:30:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4678:48:43"
                },
                {
                  "expression": {
                    "id": 30390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30383,
                      "name": "stakingPool2",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30131,
                      "src": "4766:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3736",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 30387,
                              "name": "pool2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30376,
                              "src": "4801:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 30386,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4793:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 30385,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4793:8:43",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4793:14:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 30384,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3736,
                        "src": "4781:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$3736_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 30389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4781:27:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3736",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "4766:42:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$3736",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 30391,
                  "nodeType": "ExpressionStatement",
                  "src": "4766:42:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "706f6f6c32",
                        "id": 30395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4902:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3ae3c9bf3204aad474c94a0e6906c09b3dc39a96df696c59a58a4e922d96918",
                          "typeString": "literal_string \"pool2\""
                        },
                        "value": "pool2"
                      },
                      {
                        "id": 30396,
                        "name": "pool2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30376,
                        "src": "4911:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a3ae3c9bf3204aad474c94a0e6906c09b3dc39a96df696c59a58a4e922d96918",
                          "typeString": "literal_string \"pool2\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 30392,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19882,
                        "src": "4890:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$19882_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 30394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4898:3:43",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12577,
                      "src": "4890:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 30397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4890:27:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30398,
                  "nodeType": "ExpressionStatement",
                  "src": "4890:27:43"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2499:5:43",
            "parameters": {
              "id": 30183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2504:2:43"
            },
            "returnParameters": {
              "id": 30184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2514:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30418,
            "nodeType": "FunctionDefinition",
            "src": "4931:143:43",
            "nodes": [],
            "body": {
              "id": 30417,
              "nodeType": "Block",
              "src": "4959:115:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30404,
                      "mutability": "mutable",
                      "name": "stakingPoolOwner",
                      "nameLocation": "4975:16:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 30417,
                      "src": "4967:24:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30403,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4967:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30408,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 30405,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "4994:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 30406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5006:5:43",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3679,
                      "src": "4994:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 30407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4994:19:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4967:46:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 30410,
                        "name": "stakingPoolOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30404,
                        "src": "5030:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 30413,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30158,
                            "src": "5056:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 30412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5048:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 30411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5048:7:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5048:18:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 30409,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7887,
                        7912,
                        7925,
                        7941,
                        7983,
                        8025,
                        8067,
                        8104,
                        8141,
                        8178,
                        5040,
                        5065,
                        5095,
                        5120,
                        5179,
                        5204,
                        5234,
                        5259,
                        6359,
                        6394
                      ],
                      "referencedDeclaration": 5040,
                      "src": "5021:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 30415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5021:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30416,
                  "nodeType": "ExpressionStatement",
                  "src": "5021:46:43"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "4940:9:43",
            "parameters": {
              "id": 30401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4949:2:43"
            },
            "returnParameters": {
              "id": 30402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4959:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30521,
            "nodeType": "FunctionDefinition",
            "src": "5080:726:43",
            "nodes": [],
            "body": {
              "id": 30520,
              "nodeType": "Block",
              "src": "5118:688:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 30429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 30425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30423,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30420,
                        "src": "5129:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5133:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5129:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 30428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30426,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30420,
                        "src": "5138:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 30427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5143:8:43",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "5138:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5129:22:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 30481,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30479,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30420,
                        "src": "5505:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5510:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5505:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 30517,
                      "nodeType": "Block",
                      "src": "5648:152:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 30503,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5674:43:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 30500,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "5658:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5661:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "5658:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5658:60:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30505,
                          "nodeType": "ExpressionStatement",
                          "src": "5658:60:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30507,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "5738:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30506,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "5728:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5728:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30509,
                          "nodeType": "ExpressionStatement",
                          "src": "5728:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30510,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "5754:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5766:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "5754:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30513,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30420,
                                  "src": "5787:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "5754:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30515,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5754:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30516,
                          "nodeType": "ExpressionStatement",
                          "src": "5754:37:43"
                        }
                      ]
                    },
                    "id": 30518,
                    "nodeType": "IfStatement",
                    "src": "5502:298:43",
                    "trueBody": {
                      "id": 30499,
                      "nodeType": "Block",
                      "src": "5513:129:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 30485,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5539:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 30482,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "5523:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5526:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "5523:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5523:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30487,
                          "nodeType": "ExpressionStatement",
                          "src": "5523:37:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30489,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "5580:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30488,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "5570:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5570:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30491,
                          "nodeType": "ExpressionStatement",
                          "src": "5570:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30492,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "5596:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30494,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5608:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "5596:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30496,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30495,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30420,
                                  "src": "5629:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "5596:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5596:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30498,
                          "nodeType": "ExpressionStatement",
                          "src": "5596:37:43"
                        }
                      ]
                    }
                  },
                  "id": 30519,
                  "nodeType": "IfStatement",
                  "src": "5126:674:43",
                  "trueBody": {
                    "id": 30478,
                    "nodeType": "Block",
                    "src": "5152:344:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30431,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "5172:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30430,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7325,
                              7346,
                              7370,
                              7394
                            ],
                            "referencedDeclaration": 7325,
                            "src": "5162:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5162:16:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30433,
                        "nodeType": "ExpressionStatement",
                        "src": "5162:16:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30434,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "5188:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5200:13:43",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2719,
                              "src": "5188:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30437,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30420,
                                "src": "5221:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "5188:35:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5188:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30440,
                        "nodeType": "ExpressionStatement",
                        "src": "5188:37:43"
                      },
                      {
                        "assignments": [
                          30442
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30442,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5240:2:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30478,
                            "src": "5235:7:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30441,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5235:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30448,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30445,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "5280:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 30446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5287:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 30443,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30134,
                              "src": "5245:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5260:19:43",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29097,
                            "src": "5245:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5245:44:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5235:54:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30450,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30442,
                                "src": "5310:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 30451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5316:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5310:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30449,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4989,
                              5010
                            ],
                            "referencedDeclaration": 4989,
                            "src": "5299:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5299:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30454,
                        "nodeType": "ExpressionStatement",
                        "src": "5299:20:43"
                      },
                      {
                        "assignments": [
                          30456
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30456,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "5334:6:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30478,
                            "src": "5329:11:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30455,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5329:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30461,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30459,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30442,
                              "src": "5372:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30457,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "5343:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5355:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "5343:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5343:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5329:46:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30463,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30420,
                              "src": "5394:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 30464,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30456,
                              "src": "5397:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30462,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "5385:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5385:19:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30466,
                        "nodeType": "ExpressionStatement",
                        "src": "5385:19:43"
                      },
                      {
                        "assignments": [
                          30468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30468,
                            "mutability": "mutable",
                            "name": "totDep",
                            "nameLocation": "5419:6:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30478,
                            "src": "5414:11:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30467,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5414:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30472,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 30469,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "5428:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5440:16:43",
                            "memberName": "getTotalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3666,
                            "src": "5428:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 30471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5428:30:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5414:44:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30474,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30420,
                              "src": "5477:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 30475,
                              "name": "totDep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30468,
                              "src": "5480:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30473,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "5468:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5468:19:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30477,
                        "nodeType": "ExpressionStatement",
                        "src": "5468:19:43"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4ccd89c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "5089:11:43",
            "parameters": {
              "id": 30421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30420,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "5108:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30521,
                  "src": "5101:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 30419,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "5101:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5100:10:43"
            },
            "returnParameters": {
              "id": 30422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5118:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30685,
            "nodeType": "FunctionDefinition",
            "src": "5812:1215:43",
            "nodes": [],
            "body": {
              "id": 30684,
              "nodeType": "Block",
              "src": "5865:1162:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 30542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 30530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30528,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30523,
                        "src": "5876:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5880:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5876:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 30533,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30523,
                              "src": "5890:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 30532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5885:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30531,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5885:4:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5885:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30537,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30525,
                              "src": "5900:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 30536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5895:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30535,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5895:4:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5895:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5885:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 30540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5906:8:43",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "5885:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5876:38:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 30629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30627,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30523,
                        "src": "6535:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6540:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6535:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 30681,
                      "nodeType": "Block",
                      "src": "6678:343:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30649,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "6777:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30648,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "6767:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6767:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30651,
                          "nodeType": "ExpressionStatement",
                          "src": "6767:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30652,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "6793:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6805:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "6793:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30655,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30523,
                                  "src": "6826:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "6793:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6793:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30658,
                          "nodeType": "ExpressionStatement",
                          "src": "6793:37:43"
                        },
                        {
                          "assignments": [
                            30660
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 30660,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "6845:2:43",
                              "nodeType": "VariableDeclaration",
                              "scope": 30681,
                              "src": "6840:7:43",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 30659,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6840:4:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 30666,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 30663,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "6885:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 30664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6892:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 30661,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30134,
                                "src": "6850:14:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6865:19:43",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29097,
                              "src": "6850:34:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 30665,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6850:44:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6840:54:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 30670,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6920:43:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 30667,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "6904:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6907:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "6904:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6904:60:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30672,
                          "nodeType": "ExpressionStatement",
                          "src": "6904:60:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30678,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30660,
                                "src": "7009:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30673,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "6974:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6986:12:43",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2809,
                                "src": "6974:24:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 30677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30676,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30525,
                                  "src": "7006:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "6974:34:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 30679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6974:38:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30680,
                          "nodeType": "ExpressionStatement",
                          "src": "6974:38:43"
                        }
                      ]
                    },
                    "id": 30682,
                    "nodeType": "IfStatement",
                    "src": "6532:489:43",
                    "trueBody": {
                      "id": 30647,
                      "nodeType": "Block",
                      "src": "6543:129:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 30633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6569:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 30630,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "6553:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6556:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "6553:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6553:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30635,
                          "nodeType": "ExpressionStatement",
                          "src": "6553:37:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30637,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "6610:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30636,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "6600:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6600:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30639,
                          "nodeType": "ExpressionStatement",
                          "src": "6600:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30640,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "6626:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30642,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6638:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "6626:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30643,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30523,
                                  "src": "6659:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "6626:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30645,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6626:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30646,
                          "nodeType": "ExpressionStatement",
                          "src": "6626:37:43"
                        }
                      ]
                    }
                  },
                  "id": 30683,
                  "nodeType": "IfStatement",
                  "src": "5873:1148:43",
                  "trueBody": {
                    "id": 30626,
                    "nodeType": "Block",
                    "src": "5915:611:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30544,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "5935:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30543,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7325,
                              7346,
                              7370,
                              7394
                            ],
                            "referencedDeclaration": 7325,
                            "src": "5925:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5925:16:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30546,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:16:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30547,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "5951:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30549,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5963:13:43",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2719,
                              "src": "5951:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30550,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30523,
                                "src": "5984:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "5951:35:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5951:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30553,
                        "nodeType": "ExpressionStatement",
                        "src": "5951:37:43"
                      },
                      {
                        "assignments": [
                          30555
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30555,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6003:2:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30626,
                            "src": "5998:7:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30554,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5998:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30561,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30558,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "6043:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 30559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6050:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 30556,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30134,
                              "src": "6008:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6023:19:43",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29097,
                            "src": "6008:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6008:44:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5998:54:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30563,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30555,
                                "src": "6073:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 30564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6079:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6073:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30562,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4989,
                              5010
                            ],
                            "referencedDeclaration": 4989,
                            "src": "6062:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6062:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30567,
                        "nodeType": "ExpressionStatement",
                        "src": "6062:20:43"
                      },
                      {
                        "assignments": [
                          30569
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30569,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "6097:6:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30626,
                            "src": "6092:11:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30568,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6092:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30574,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30572,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30555,
                              "src": "6135:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30570,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "6106:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6118:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "6106:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6106:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6092:46:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30576,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30523,
                              "src": "6157:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 30577,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30569,
                              "src": "6160:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30575,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "6148:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6148:19:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30579,
                        "nodeType": "ExpressionStatement",
                        "src": "6148:19:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "696420646f6573206e6f74206578697374",
                              "id": 30583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6236:19:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e78ef4f017a8bc6df749ab9c2404c9194222fa8aaeccb8286454828d404e3213",
                                "typeString": "literal_string \"id does not exist\""
                              },
                              "value": "id does not exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_e78ef4f017a8bc6df749ab9c2404c9194222fa8aaeccb8286454828d404e3213",
                                "typeString": "literal_string \"id does not exist\""
                              }
                            ],
                            "expression": {
                              "id": 30580,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6537,
                              "src": "6220:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$11818",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 30582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6223:12:43",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11304,
                            "src": "6220:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 30584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6220:36:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30585,
                        "nodeType": "ExpressionStatement",
                        "src": "6220:36:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 30591,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6301:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 30586,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "6266:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6278:12:43",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "6266:24:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 30590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30589,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30525,
                                "src": "6298:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "6266:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 30592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6266:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30593,
                        "nodeType": "ExpressionStatement",
                        "src": "6266:37:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30599,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30555,
                              "src": "6387:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30594,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "6352:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6364:12:43",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "6352:24:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 30598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30597,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30525,
                                "src": "6384:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "6352:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 30600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6352:38:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30601,
                        "nodeType": "ExpressionStatement",
                        "src": "6352:38:43"
                      },
                      {
                        "assignments": [
                          30603
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30603,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "6405:7:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30626,
                            "src": "6400:12:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30602,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6400:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30608,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30606,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30555,
                              "src": "6444:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30604,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "6415:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6427:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "6415:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6415:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6400:47:43"
                      },
                      {
                        "assignments": [
                          30610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30610,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "6462:3:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30626,
                            "src": "6457:8:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30609,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6457:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30620,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 30613,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30523,
                                "src": "6473:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 30612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6468:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30611,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6468:4:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6468:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 30617,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30525,
                                "src": "6483:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 30616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6478:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30615,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "6478:4:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6478:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6468:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6457:28:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30622,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30610,
                              "src": "6504:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30623,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30603,
                              "src": "6509:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30621,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "6495:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6495:22:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30625,
                        "nodeType": "ExpressionStatement",
                        "src": "6495:22:43"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "020f12da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDeposit",
            "nameLocation": "5821:16:43",
            "parameters": {
              "id": 30526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30523,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "5845:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30685,
                  "src": "5838:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 30522,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5838:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30525,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "5855:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30685,
                  "src": "5848:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 30524,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "5848:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5837:20:43"
            },
            "returnParameters": {
              "id": 30527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5865:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 30849,
            "nodeType": "FunctionDefinition",
            "src": "7033:1253:43",
            "nodes": [],
            "body": {
              "id": 30848,
              "nodeType": "Block",
              "src": "7095:1191:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 30706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 30694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30692,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30687,
                        "src": "7106:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7110:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7106:5:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 30697,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30687,
                              "src": "7120:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 30696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7115:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30695,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7115:4:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7115:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 30701,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30689,
                              "src": "7130:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 30700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7125:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30699,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7125:4:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7125:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7115:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 30704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7136:8:43",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7115:29:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7106:38:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 30793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30791,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30687,
                        "src": "7794:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7799:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7794:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 30845,
                      "nodeType": "Block",
                      "src": "7937:343:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30813,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "8036:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30812,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "8026:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8026:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30815,
                          "nodeType": "ExpressionStatement",
                          "src": "8026:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30816,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "8052:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8064:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "8052:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30819,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30687,
                                  "src": "8085:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "8052:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8052:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30822,
                          "nodeType": "ExpressionStatement",
                          "src": "8052:37:43"
                        },
                        {
                          "assignments": [
                            30824
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 30824,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "8104:2:43",
                              "nodeType": "VariableDeclaration",
                              "scope": 30845,
                              "src": "8099:7:43",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 30823,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8099:4:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 30830,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 30827,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "8144:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 30828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8151:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 30825,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30134,
                                "src": "8109:14:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 30826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8124:19:43",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29097,
                              "src": "8109:34:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 30829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8109:44:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8099:54:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 30834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8179:43:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 30831,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "8163:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8166:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "8163:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30835,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8163:60:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30836,
                          "nodeType": "ExpressionStatement",
                          "src": "8163:60:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30842,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30824,
                                "src": "8268:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 30837,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "8233:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30839,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8245:12:43",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2809,
                                "src": "8233:24:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 30841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30840,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30689,
                                  "src": "8265:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "8233:34:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 30843,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8233:38:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30844,
                          "nodeType": "ExpressionStatement",
                          "src": "8233:38:43"
                        }
                      ]
                    },
                    "id": 30846,
                    "nodeType": "IfStatement",
                    "src": "7791:489:43",
                    "trueBody": {
                      "id": 30811,
                      "nodeType": "Block",
                      "src": "7802:129:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 30797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7828:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 30794,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "7812:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7815:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "7812:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7812:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30799,
                          "nodeType": "ExpressionStatement",
                          "src": "7812:37:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30801,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "7869:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30800,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "7859:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7859:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30803,
                          "nodeType": "ExpressionStatement",
                          "src": "7859:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30804,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "7885:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7897:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "7885:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30807,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30687,
                                  "src": "7918:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "7885:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7885:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30810,
                          "nodeType": "ExpressionStatement",
                          "src": "7885:37:43"
                        }
                      ]
                    }
                  },
                  "id": 30847,
                  "nodeType": "IfStatement",
                  "src": "7103:1177:43",
                  "trueBody": {
                    "id": 30790,
                    "nodeType": "Block",
                    "src": "7145:640:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30708,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "7165:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30707,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7325,
                              7346,
                              7370,
                              7394
                            ],
                            "referencedDeclaration": 7325,
                            "src": "7155:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7155:16:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30710,
                        "nodeType": "ExpressionStatement",
                        "src": "7155:16:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30711,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "7181:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7193:13:43",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2719,
                              "src": "7181:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30714,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30687,
                                "src": "7214:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7181:35:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7181:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30717,
                        "nodeType": "ExpressionStatement",
                        "src": "7181:37:43"
                      },
                      {
                        "assignments": [
                          30719
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30719,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "7233:2:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30790,
                            "src": "7228:7:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30718,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7228:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30725,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30722,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "7273:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 30723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7280:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 30720,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30134,
                              "src": "7238:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7253:19:43",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29097,
                            "src": "7238:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7238:44:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7228:54:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30727,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30719,
                                "src": "7303:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 30728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7309:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7303:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30726,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4989,
                              5010
                            ],
                            "referencedDeclaration": 4989,
                            "src": "7292:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7292:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30731,
                        "nodeType": "ExpressionStatement",
                        "src": "7292:20:43"
                      },
                      {
                        "assignments": [
                          30733
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30733,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "7327:6:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30790,
                            "src": "7322:11:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30732,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7322:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30738,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30736,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30719,
                              "src": "7365:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30734,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "7336:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7348:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "7336:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7336:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7322:46:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30740,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30687,
                              "src": "7387:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 30741,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30733,
                              "src": "7390:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30739,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "7378:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7378:19:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30743,
                        "nodeType": "ExpressionStatement",
                        "src": "7378:19:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "77726f6e67207374616b696e6720706f6f6c",
                              "id": 30747,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7461:20:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bc8097e4f22cd38d305855905857ee7726203311b02f65b4e36865ec549aa7ee",
                                "typeString": "literal_string \"wrong staking pool\""
                              },
                              "value": "wrong staking pool"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_bc8097e4f22cd38d305855905857ee7726203311b02f65b4e36865ec549aa7ee",
                                "typeString": "literal_string \"wrong staking pool\""
                              }
                            ],
                            "expression": {
                              "id": 30744,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6537,
                              "src": "7445:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$11818",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 30746,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7448:12:43",
                            "memberName": "expectRevert",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11304,
                            "src": "7445:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 30748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7445:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30749,
                        "nodeType": "ExpressionStatement",
                        "src": "7445:37:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30755,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30719,
                              "src": "7528:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30750,
                                "name": "stakingPool2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30131,
                                "src": "7492:12:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30752,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7505:12:43",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "7492:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 30754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30753,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30689,
                                "src": "7525:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7492:35:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 30756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7492:39:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30757,
                        "nodeType": "ExpressionStatement",
                        "src": "7492:39:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30763,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30719,
                              "src": "7646:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 30758,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "7611:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7623:12:43",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2809,
                              "src": "7611:24:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 30762,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30761,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30689,
                                "src": "7643:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7611:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 30764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7611:38:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30765,
                        "nodeType": "ExpressionStatement",
                        "src": "7611:38:43"
                      },
                      {
                        "assignments": [
                          30767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30767,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "7664:7:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30790,
                            "src": "7659:12:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30766,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7659:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30772,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30770,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30719,
                              "src": "7703:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30768,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "7674:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30769,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7686:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "7674:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7674:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7659:47:43"
                      },
                      {
                        "assignments": [
                          30774
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30774,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "7721:3:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30790,
                            "src": "7716:8:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30773,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7716:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30784,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 30777,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30687,
                                "src": "7732:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 30776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7727:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30775,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7727:4:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7727:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 30781,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30689,
                                "src": "7742:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 30780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7737:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30779,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7737:4:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7737:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7727:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7716:28:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30786,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30774,
                              "src": "7763:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30787,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30767,
                              "src": "7768:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30785,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "7754:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7754:22:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30789,
                        "nodeType": "ExpressionStatement",
                        "src": "7754:22:43"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b7ab10ee",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDepositWrongPool",
            "nameLocation": "7042:25:43",
            "parameters": {
              "id": 30690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30687,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7075:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30849,
                  "src": "7068:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 30686,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7068:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30689,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "7085:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 30849,
                  "src": "7078:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 30688,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7078:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7067:20:43"
            },
            "returnParameters": {
              "id": 30691,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7095:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31027,
            "nodeType": "FunctionDefinition",
            "src": "8292:1125:43",
            "nodes": [],
            "body": {
              "id": 31026,
              "nodeType": "Block",
              "src": "8341:1076:43",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 30869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 30862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 30858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30856,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30851,
                          "src": "8352:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 30857,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30853,
                          "src": "8357:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "src": "8352:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 30861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 30859,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30851,
                          "src": "8362:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 30860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8366:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8362:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8352:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 30868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 30865,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30851,
                            "src": "8376:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          ],
                          "id": 30864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8371:4:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 30863,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8371:4:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8371:7:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 30867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8382:8:43",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "8371:19:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8352:38:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 30941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 30939,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30851,
                        "src": "8825:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 30940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8830:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8825:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 30965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 30962,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30851,
                              "src": "8976:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "id": 30961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8971:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 30960,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8971:4:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8971:7:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 30964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8981:8:43",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        },
                        "src": "8971:18:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 31022,
                        "nodeType": "Block",
                        "src": "9149:262:43",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 30985,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30164,
                                  "src": "9169:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 30984,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  7325,
                                  7346,
                                  7370,
                                  7394
                                ],
                                "referencedDeclaration": 7325,
                                "src": "9159:9:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 30986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9159:16:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 30987,
                            "nodeType": "ExpressionStatement",
                            "src": "9159:16:43"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 30988,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30128,
                                    "src": "9185:11:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3736",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 30990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9197:13:43",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2719,
                                  "src": "9185:25:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 30992,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 30991,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30851,
                                    "src": "9218:1:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "9185:35:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9185:37:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 30994,
                            "nodeType": "ExpressionStatement",
                            "src": "9185:37:43"
                          },
                          {
                            "assignments": [
                              30996
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 30996,
                                "mutability": "mutable",
                                "name": "id",
                                "nameLocation": "9237:2:43",
                                "nodeType": "VariableDeclaration",
                                "scope": 31022,
                                "src": "9232:7:43",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 30995,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9232:4:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 31002,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 30999,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30164,
                                  "src": "9277:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 31000,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9284:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 30997,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30134,
                                  "src": "9242:14:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 30998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9257:19:43",
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29097,
                                "src": "9242:34:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 31001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9242:44:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9232:54:43"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 31006,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 31004,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30996,
                                    "src": "9307:2:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 31005,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9313:1:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9307:7:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 31003,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4989,
                                  5010
                                ],
                                "referencedDeclaration": 4989,
                                "src": "9296:10:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                  "typeString": "function (bool)"
                                }
                              },
                              "id": 31007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9296:20:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 31008,
                            "nodeType": "ExpressionStatement",
                            "src": "9296:20:43"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f7420656e6f756768206465706f7369746564",
                                  "id": 31012,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9342:22:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  },
                                  "value": "not enough deposited"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  }
                                ],
                                "expression": {
                                  "id": 31009,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6537,
                                  "src": "9326:2:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$11818",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 31011,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9329:12:43",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11304,
                                "src": "9326:15:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 31013,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9326:39:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 31014,
                            "nodeType": "ExpressionStatement",
                            "src": "9326:39:43"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 31018,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30996,
                                  "src": "9396:2:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 31019,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30853,
                                  "src": "9400:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                ],
                                "expression": {
                                  "id": 31015,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "9375:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 31017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9387:8:43",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3325,
                                "src": "9375:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) external"
                                }
                              },
                              "id": 31020,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9375:27:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 31021,
                            "nodeType": "ExpressionStatement",
                            "src": "9375:27:43"
                          }
                        ]
                      },
                      "id": 31023,
                      "nodeType": "IfStatement",
                      "src": "8968:443:43",
                      "trueBody": {
                        "id": 30983,
                        "nodeType": "Block",
                        "src": "8991:152:43",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                  "id": 30969,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9017:43:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  },
                                  "value": "total deposits cannot be more than 32 Eth"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  }
                                ],
                                "expression": {
                                  "id": 30966,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6537,
                                  "src": "9001:2:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$11818",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 30968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9004:12:43",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11304,
                                "src": "9001:15:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 30970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9001:60:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 30971,
                            "nodeType": "ExpressionStatement",
                            "src": "9001:60:43"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 30973,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30164,
                                  "src": "9081:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 30972,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  7325,
                                  7346,
                                  7370,
                                  7394
                                ],
                                "referencedDeclaration": 7325,
                                "src": "9071:9:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 30974,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9071:16:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 30975,
                            "nodeType": "ExpressionStatement",
                            "src": "9071:16:43"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 30976,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30128,
                                    "src": "9097:11:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3736",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 30978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9109:13:43",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2719,
                                  "src": "9097:25:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 30980,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 30979,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30851,
                                    "src": "9130:1:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "9097:35:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9097:37:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 30982,
                            "nodeType": "ExpressionStatement",
                            "src": "9097:37:43"
                          }
                        ]
                      }
                    },
                    "id": 31024,
                    "nodeType": "IfStatement",
                    "src": "8822:589:43",
                    "trueBody": {
                      "id": 30959,
                      "nodeType": "Block",
                      "src": "8833:129:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 30945,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8859:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 30942,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "8843:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 30944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8846:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "8843:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 30946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8843:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30947,
                          "nodeType": "ExpressionStatement",
                          "src": "8843:37:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 30949,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "8900:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 30948,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "8890:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 30950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8890:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30951,
                          "nodeType": "ExpressionStatement",
                          "src": "8890:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 30952,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "8916:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 30954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8928:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "8916:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 30956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 30955,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30851,
                                  "src": "8949:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "8916:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8916:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 30958,
                          "nodeType": "ExpressionStatement",
                          "src": "8916:37:43"
                        }
                      ]
                    }
                  },
                  "id": 31025,
                  "nodeType": "IfStatement",
                  "src": "8349:1062:43",
                  "trueBody": {
                    "id": 30938,
                    "nodeType": "Block",
                    "src": "8391:425:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30871,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "8411:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 30870,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7325,
                              7346,
                              7370,
                              7394
                            ],
                            "referencedDeclaration": 7325,
                            "src": "8401:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 30872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8401:16:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30873,
                        "nodeType": "ExpressionStatement",
                        "src": "8401:16:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 30874,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "8427:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 30876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8439:13:43",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2719,
                              "src": "8427:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 30878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 30877,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30851,
                                "src": "8460:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "8427:35:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 30879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8427:37:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30880,
                        "nodeType": "ExpressionStatement",
                        "src": "8427:37:43"
                      },
                      {
                        "assignments": [
                          30882
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30882,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8479:2:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30938,
                            "src": "8474:7:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30881,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8474:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30888,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30885,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "8519:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 30886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8526:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 30883,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30134,
                              "src": "8484:14:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1557",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 30884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8499:19:43",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29097,
                            "src": "8484:34:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8484:44:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8474:54:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 30892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 30890,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30882,
                                "src": "8549:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 30891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8555:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8549:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 30889,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4989,
                              5010
                            ],
                            "referencedDeclaration": 4989,
                            "src": "8538:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 30893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8538:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30894,
                        "nodeType": "ExpressionStatement",
                        "src": "8538:20:43"
                      },
                      {
                        "assignments": [
                          30896
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30896,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "8573:6:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30938,
                            "src": "8568:11:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30895,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8568:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30901,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30899,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30882,
                              "src": "8611:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30897,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "8582:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8594:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "8582:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8582:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8568:46:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30903,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30851,
                              "src": "8633:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 30904,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30896,
                              "src": "8636:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30902,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "8624:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8624:19:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30906,
                        "nodeType": "ExpressionStatement",
                        "src": "8624:19:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30910,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30882,
                              "src": "8674:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30911,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30853,
                              "src": "8678:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "expression": {
                              "id": 30907,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "8653:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8665:8:43",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3325,
                            "src": "8653:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 30912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8653:27:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30913,
                        "nodeType": "ExpressionStatement",
                        "src": "8653:27:43"
                      },
                      {
                        "assignments": [
                          30915
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30915,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "8695:7:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30938,
                            "src": "8690:12:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30914,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8690:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30920,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 30918,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30882,
                              "src": "8734:2:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 30916,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "8705:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 30917,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8717:16:43",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3647,
                            "src": "8705:28:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 30919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8705:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8690:47:43"
                      },
                      {
                        "assignments": [
                          30922
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 30922,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "8752:3:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 30938,
                            "src": "8747:8:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 30921,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8747:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 30932,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 30931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 30925,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30851,
                                "src": "8763:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 30924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8758:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30923,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8758:4:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8758:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 30929,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30853,
                                "src": "8773:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 30928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8768:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 30927,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8768:4:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 30930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8768:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8758:17:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8747:28:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 30934,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30922,
                              "src": "8794:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 30935,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30915,
                              "src": "8799:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 30933,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7887,
                              7912,
                              7925,
                              7941,
                              7983,
                              8025,
                              8067,
                              8104,
                              8141,
                              8178,
                              5040,
                              5065,
                              5095,
                              5120,
                              5179,
                              5204,
                              5234,
                              5259,
                              6359,
                              6394
                            ],
                            "referencedDeclaration": 5234,
                            "src": "8785:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 30936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8785:22:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30937,
                        "nodeType": "ExpressionStatement",
                        "src": "8785:22:43"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "90f805d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "8301:12:43",
            "parameters": {
              "id": 30854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30851,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "8321:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 31027,
                  "src": "8314:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 30850,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "8314:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30853,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "8331:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 31027,
                  "src": "8324:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 30852,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "8324:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8313:20:43"
            },
            "returnParameters": {
              "id": 30855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8341:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31132,
            "nodeType": "FunctionDefinition",
            "src": "9423:1261:43",
            "nodes": [],
            "body": {
              "id": 31131,
              "nodeType": "Block",
              "src": "9451:1233:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31031
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31031,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "9500:14:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31131,
                      "src": "9495:19:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31030,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9495:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31037,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 31034,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30128,
                          "src": "9525:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 31033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9517:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9517:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 31035,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9517:20:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 31036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9538:7:43",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9517:28:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9495:50:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31039,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30164,
                        "src": "9608:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31038,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7235,
                        7256,
                        7280,
                        7304
                      ],
                      "referencedDeclaration": 7235,
                      "src": "9603:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9603:11:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31041,
                  "nodeType": "ExpressionStatement",
                  "src": "9603:11:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31042,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30128,
                          "src": "9622:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9634:13:43",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2719,
                        "src": "9622:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 31045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9655:20:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "9622:54:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9622:56:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31048,
                  "nodeType": "ExpressionStatement",
                  "src": "9622:56:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31050,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31031,
                          "src": "9695:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 31051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9712:20:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "9695:37:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31055,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "9742:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 31054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9734:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31053,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9734:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9734:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9755:7:43",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "9734:28:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31049,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7887,
                        7912,
                        7925,
                        7941,
                        7983,
                        8025,
                        8067,
                        8104,
                        8141,
                        8178,
                        5040,
                        5065,
                        5095,
                        5120,
                        5179,
                        5204,
                        5234,
                        5259,
                        6359,
                        6394
                      ],
                      "referencedDeclaration": 5234,
                      "src": "9686:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:77:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31059,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:77:43"
                },
                {
                  "assignments": [
                    31061
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31061,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "9779:18:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31131,
                      "src": "9771:26:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 31060,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9771:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31067,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 31063,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30155,
                            "src": "9810:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$3974",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 31064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9826:17:43",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3973,
                          "src": "9810:33:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 31065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9810:35:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 31062,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9800:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 31066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9800:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9771:75:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31069,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "9859:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31068,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7235,
                        7256,
                        7280,
                        7304
                      ],
                      "referencedDeclaration": 7235,
                      "src": "9854:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9854:15:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31071,
                  "nodeType": "ExpressionStatement",
                  "src": "9854:15:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31075,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30173,
                        "src": "10198:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31076,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30176,
                        "src": "10206:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31077,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30179,
                        "src": "10230:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31078,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30182,
                        "src": "10241:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 31072,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "10180:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10192:5:43",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2877,
                      "src": "10180:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 31079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10180:79:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31080,
                  "nodeType": "ExpressionStatement",
                  "src": "10180:79:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31082,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31031,
                        "src": "10276:14:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31085,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "10300:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 31084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10292:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31083,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10292:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10292:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10313:7:43",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10292:28:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31081,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7887,
                        7912,
                        7925,
                        7941,
                        7983,
                        8025,
                        8067,
                        8104,
                        8141,
                        8178,
                        5040,
                        5065,
                        5095,
                        5120,
                        5179,
                        5204,
                        5234,
                        5259,
                        6359,
                        6394
                      ],
                      "referencedDeclaration": 5234,
                      "src": "10267:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10267:54:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31089,
                  "nodeType": "ExpressionStatement",
                  "src": "10267:54:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 31097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31092,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30155,
                                  "src": "10351:15:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$3974",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 31093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10367:17:43",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3973,
                                "src": "10351:33:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 31094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10351:35:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 31091,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "10341:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 31095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10341:46:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 31096,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31061,
                          "src": "10391:18:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10341:68:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31090,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7837,
                        7851
                      ],
                      "referencedDeclaration": 7837,
                      "src": "10329:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 31098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10329:81:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31099,
                  "nodeType": "ExpressionStatement",
                  "src": "10329:81:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31101,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30164,
                        "src": "10483:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31100,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7325,
                        7346,
                        7370,
                        7394
                      ],
                      "referencedDeclaration": 7325,
                      "src": "10473:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10473:16:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31103,
                  "nodeType": "ExpressionStatement",
                  "src": "10473:16:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 31107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10513:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 31104,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "10497:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11818",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10500:12:43",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11304,
                      "src": "10497:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10497:41:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31109,
                  "nodeType": "ExpressionStatement",
                  "src": "10497:41:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31110,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30128,
                          "src": "10546:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10558:13:43",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2719,
                        "src": "10546:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10579:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10546:35:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10546:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31116,
                  "nodeType": "ExpressionStatement",
                  "src": "10546:37:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 31120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10607:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 31117,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "10591:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11818",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10594:12:43",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11304,
                      "src": "10591:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10591:41:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31122,
                  "nodeType": "ExpressionStatement",
                  "src": "10591:41:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 31128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10675:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 31123,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30128,
                          "src": "10640:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10652:12:43",
                        "memberName": "addToDeposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2809,
                        "src": "10640:24:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 31127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 31126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10672:1:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "10640:34:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 31129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10640:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31130,
                  "nodeType": "ExpressionStatement",
                  "src": "10640:37:43"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "9432:9:43",
            "parameters": {
              "id": 31028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9441:2:43"
            },
            "returnParameters": {
              "id": 31029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9451:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31211,
            "nodeType": "FunctionDefinition",
            "src": "10690:1002:43",
            "nodes": [],
            "body": {
              "id": 31210,
              "nodeType": "Block",
              "src": "10725:967:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31136,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "10739:14:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31210,
                      "src": "10734:19:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31135,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10734:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31142,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 31139,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30128,
                          "src": "10764:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 31138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10756:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 31137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10756:7:43",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 31140,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10756:20:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 31141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10777:7:43",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "10756:28:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10734:50:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31144,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30164,
                        "src": "10847:5:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 31143,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7235,
                        7256,
                        7280,
                        7304
                      ],
                      "referencedDeclaration": 7235,
                      "src": "10842:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10842:11:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31146,
                  "nodeType": "ExpressionStatement",
                  "src": "10842:11:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 31147,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30128,
                          "src": "10861:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 31149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10873:13:43",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2719,
                        "src": "10861:25:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 31151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 31150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10894:20:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "10861:54:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 31152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10861:56:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31153,
                  "nodeType": "ExpressionStatement",
                  "src": "10861:56:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 31157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31155,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31136,
                          "src": "10934:14:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 31156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10951:20:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "10934:37:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31160,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "10981:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 31159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10973:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31158,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10973:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10973:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10994:7:43",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10973:28:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31154,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7887,
                        7912,
                        7925,
                        7941,
                        7983,
                        8025,
                        8067,
                        8104,
                        8141,
                        8178,
                        5040,
                        5065,
                        5095,
                        5120,
                        5179,
                        5204,
                        5234,
                        5259,
                        6359,
                        6394
                      ],
                      "referencedDeclaration": 5234,
                      "src": "10925:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10925:77:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31164,
                  "nodeType": "ExpressionStatement",
                  "src": "10925:77:43"
                },
                {
                  "assignments": [
                    31166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31166,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "11018:18:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31210,
                      "src": "11010:26:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 31165,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11010:7:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31172,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 31168,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30155,
                            "src": "11049:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$3974",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 31169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11065:17:43",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3973,
                          "src": "11049:33:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 31170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11049:35:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 31167,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "11039:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 31171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11039:46:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11010:75:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31174,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "11103:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31173,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7325,
                        7346,
                        7370,
                        7394
                      ],
                      "referencedDeclaration": 7325,
                      "src": "11093:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11093:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31176,
                  "nodeType": "ExpressionStatement",
                  "src": "11093:20:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31180,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30173,
                        "src": "11446:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31181,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30176,
                        "src": "11454:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31182,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30179,
                        "src": "11478:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31183,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30182,
                        "src": "11489:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 31177,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "11424:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11436:9:43",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3040,
                      "src": "11424:21:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 31184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11424:83:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31185,
                  "nodeType": "ExpressionStatement",
                  "src": "11424:83:43"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 31186,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "11515:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11527:5:43",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2886,
                      "src": "11515:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 31189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11515:19:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31190,
                  "nodeType": "ExpressionStatement",
                  "src": "11515:19:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31192,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31136,
                        "src": "11551:14:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31195,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "11575:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 31194,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11567:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 31193,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11567:7:43",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 31196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11567:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 31197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11588:7:43",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "11567:28:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31191,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7887,
                        7912,
                        7925,
                        7941,
                        7983,
                        8025,
                        8067,
                        8104,
                        8141,
                        8178,
                        5040,
                        5065,
                        5095,
                        5120,
                        5179,
                        5204,
                        5234,
                        5259,
                        6359,
                        6394
                      ],
                      "referencedDeclaration": 5234,
                      "src": "11542:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:54:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31199,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:54:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 31207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31202,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30155,
                                  "src": "11626:15:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$3974",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 31203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11642:17:43",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3973,
                                "src": "11626:33:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 31204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11626:35:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 31201,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "11616:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 31205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11616:46:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 31206,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31166,
                          "src": "11666:18:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "11616:68:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31200,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7837,
                        7851
                      ],
                      "referencedDeclaration": 7837,
                      "src": "11604:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 31208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11604:81:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31209,
                  "nodeType": "ExpressionStatement",
                  "src": "11604:81:43"
                }
              ]
            },
            "functionSelector": "5dcf6be5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStakeTwoStep",
            "nameLocation": "10699:16:43",
            "parameters": {
              "id": 31133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10715:2:43"
            },
            "returnParameters": {
              "id": 31134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10725:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31480,
            "nodeType": "FunctionDefinition",
            "src": "11698:2113:43",
            "nodes": [],
            "body": {
              "id": 31479,
              "nodeType": "Block",
              "src": "11749:2062:43",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    31219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31219,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "11762:9:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31479,
                      "src": "11757:14:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31218,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11757:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31221,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 31220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11774:10:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11757:27:43"
                },
                {
                  "assignments": [
                    31223
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31223,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "11797:12:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31479,
                      "src": "11792:17:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31222,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11792:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31232,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 31229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 31226,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31213,
                            "src": "11817:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 31225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11812:4:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 31224,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "11812:4:43",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 31227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11812:7:43",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 31228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11822:20:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "11812:30:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 31230,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31219,
                      "src": "11845:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11812:42:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11792:62:43"
                },
                {
                  "assignments": [
                    31234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 31234,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "11867:10:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 31479,
                      "src": "11862:15:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31233,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "11862:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 31238,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 31235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11880:20:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 31236,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31223,
                      "src": "11903:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11880:35:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11862:53:43"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 31245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 31241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31239,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31213,
                        "src": "11926:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 31240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11931:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11926:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 31244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31242,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31215,
                        "src": "11936:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 31243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11940:3:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "11936:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11926:17:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 31403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 31401,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31213,
                        "src": "13242:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 31402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13247:1:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13242:6:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 31476,
                      "nodeType": "Block",
                      "src": "13385:419:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31423,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "13400:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31422,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7235,
                                7256,
                                7280,
                                7304
                              ],
                              "referencedDeclaration": 7235,
                              "src": "13395:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 31424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13395:11:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31425,
                          "nodeType": "ExpressionStatement",
                          "src": "13395:11:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31426,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "13416:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 31428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13428:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "13416:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 31430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 31429,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31223,
                                  "src": "13449:12:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "13416:46:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13416:48:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31432,
                          "nodeType": "ExpressionStatement",
                          "src": "13416:48:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31434,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30170,
                                "src": "13479:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31433,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7235,
                                7256,
                                7280,
                                7304
                              ],
                              "referencedDeclaration": 7235,
                              "src": "13474:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 31435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13474:9:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31436,
                          "nodeType": "ExpressionStatement",
                          "src": "13474:9:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31437,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "13493:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 31439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13505:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "13493:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 31441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 31440,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31234,
                                  "src": "13526:10:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "13493:44:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13493:46:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31443,
                          "nodeType": "ExpressionStatement",
                          "src": "13493:46:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31445,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30158,
                                "src": "13559:9:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 31444,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "13549:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 31446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13549:20:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31447,
                          "nodeType": "ExpressionStatement",
                          "src": "13549:20:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31451,
                                "name": "pubkey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30173,
                                "src": "13597:6:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 31452,
                                "name": "withdrawal_credentials",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30176,
                                "src": "13605:22:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 31453,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30179,
                                "src": "13629:9:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              },
                              {
                                "id": 31454,
                                "name": "deposit_data_root",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30182,
                                "src": "13640:17:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 31448,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "13579:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13591:5:43",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2877,
                              "src": "13579:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                                "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                              }
                            },
                            "id": 31455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13579:79:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31456,
                          "nodeType": "ExpressionStatement",
                          "src": "13579:79:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31462,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31215,
                                "src": "13698:1:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 31459,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 30128,
                                    "src": "13676:11:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3736",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3736",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 31458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13668:8:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 31457,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13668:8:43",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 31460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13668:20:43",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 31461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13689:8:43",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "13668:29:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 31463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13668:32:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31464,
                          "nodeType": "ExpressionStatement",
                          "src": "13668:32:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d696e696d756d206f66203130302077656920746f2064697374726962757465",
                                "id": 31468,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13726:34:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f00fb37f6a37183ae3803ed39ad837a119d5582659746e10b4b04d676b4b4ea",
                                  "typeString": "literal_string \"minimum of 100 wei to distribute\""
                                },
                                "value": "minimum of 100 wei to distribute"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0f00fb37f6a37183ae3803ed39ad837a119d5582659746e10b4b04d676b4b4ea",
                                  "typeString": "literal_string \"minimum of 100 wei to distribute\""
                                }
                              ],
                              "expression": {
                                "id": 31465,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "13710:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 31467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13713:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "13710:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 31469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13710:51:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31470,
                          "nodeType": "ExpressionStatement",
                          "src": "13710:51:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31471,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "13771:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13783:10:43",
                              "memberName": "distribute",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3403,
                              "src": "13771:22:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 31474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13771:24:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31475,
                          "nodeType": "ExpressionStatement",
                          "src": "13771:24:43"
                        }
                      ]
                    },
                    "id": 31477,
                    "nodeType": "IfStatement",
                    "src": "13239:565:43",
                    "trueBody": {
                      "id": 31421,
                      "nodeType": "Block",
                      "src": "13250:129:43",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 31407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13276:20:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 31404,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6537,
                                "src": "13260:2:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$11818",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 31406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13263:12:43",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11304,
                              "src": "13260:15:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 31408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13260:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31409,
                          "nodeType": "ExpressionStatement",
                          "src": "13260:37:43"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31411,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "13317:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31410,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7325,
                                7346,
                                7370,
                                7394
                              ],
                              "referencedDeclaration": 7325,
                              "src": "13307:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 31412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13307:16:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31413,
                          "nodeType": "ExpressionStatement",
                          "src": "13307:16:43"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 31414,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "13333:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 31416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13345:13:43",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2719,
                                "src": "13333:25:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 31418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 31417,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31213,
                                  "src": "13366:1:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "13333:35:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13333:37:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 31420,
                          "nodeType": "ExpressionStatement",
                          "src": "13333:37:43"
                        }
                      ]
                    }
                  },
                  "id": 31478,
                  "nodeType": "IfStatement",
                  "src": "11923:1881:43",
                  "trueBody": {
                    "id": 31400,
                    "nodeType": "Block",
                    "src": "11944:1289:43",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31247,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30164,
                              "src": "11959:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31246,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7235,
                              7256,
                              7280,
                              7304
                            ],
                            "referencedDeclaration": 7235,
                            "src": "11954:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11954:11:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31249,
                        "nodeType": "ExpressionStatement",
                        "src": "11954:11:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31250,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "11975:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11987:13:43",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2719,
                              "src": "11975:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 31253,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31223,
                                "src": "12008:12:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "11975:46:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11975:48:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31256,
                        "nodeType": "ExpressionStatement",
                        "src": "11975:48:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31258,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30170,
                              "src": "12038:3:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 31257,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7235,
                              7256,
                              7280,
                              7304
                            ],
                            "referencedDeclaration": 7235,
                            "src": "12033:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12033:9:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31260,
                        "nodeType": "ExpressionStatement",
                        "src": "12033:9:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 31261,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30128,
                                "src": "12052:11:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$3736",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 31263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12064:13:43",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2719,
                              "src": "12052:25:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 31265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 31264,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31234,
                                "src": "12085:10:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "12052:44:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 31266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12052:46:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31267,
                        "nodeType": "ExpressionStatement",
                        "src": "12052:46:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31269,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30158,
                              "src": "12118:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 31268,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7325,
                              7346,
                              7370,
                              7394
                            ],
                            "referencedDeclaration": 7325,
                            "src": "12108:9:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 31270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12108:20:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31271,
                        "nodeType": "ExpressionStatement",
                        "src": "12108:20:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31275,
                              "name": "pubkey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30173,
                              "src": "12156:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 31276,
                              "name": "withdrawal_credentials",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30176,
                              "src": "12164:22:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 31277,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30179,
                              "src": "12188:9:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            },
                            {
                              "id": 31278,
                              "name": "deposit_data_root",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30182,
                              "src": "12199:17:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 31272,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "12138:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 31274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12150:5:43",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2877,
                            "src": "12138:17:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                            }
                          },
                          "id": 31279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12138:79:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31280,
                        "nodeType": "ExpressionStatement",
                        "src": "12138:79:43"
                      },
                      {
                        "assignments": [
                          31282
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31282,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "12232:12:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 31400,
                            "src": "12227:17:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31281,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12227:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31288,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31285,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30164,
                                "src": "12255:5:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12247:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31283,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12247:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12247:14:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 31287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12262:7:43",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "12247:22:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12227:42:43"
                      },
                      {
                        "assignments": [
                          31290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31290,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "12284:10:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 31400,
                            "src": "12279:15:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31289,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12279:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31296,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 31293,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30170,
                                "src": "12305:3:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 31292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12297:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31291,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12297:7:43",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 31294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12297:12:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 31295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12310:7:43",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "12297:20:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12279:38:43"
                      },
                      {
                        "assignments": [
                          31298
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31298,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "12332:10:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 31400,
                            "src": "12327:15:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31297,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12327:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31314,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 31311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 31308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 31301,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 31215,
                                        "src": "12351:1:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "id": 31300,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12346:4:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 31299,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12346:4:43",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 31302,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12346:7:43",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 31305,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 30128,
                                          "src": "12364:11:43",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$3736",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 31304,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "12356:7:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 31303,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "12356:7:43",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 31306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12356:20:43",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 31307,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "12377:7:43",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "12356:28:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12346:38:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 31309,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "12345:40:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 31310,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31223,
                              "src": "12388:12:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12345:55:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 31312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12403:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "12345:78:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12327:96:43"
                      },
                      {
                        "assignments": [
                          31316
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31316,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "12438:8:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 31400,
                            "src": "12433:13:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31315,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12433:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31330,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 31326,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 31319,
                                      "name": "y",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31215,
                                      "src": "12455:1:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "id": 31318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "12450:4:43",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 31317,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "12450:4:43",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 31320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12450:7:43",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 31323,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30128,
                                        "src": "12468:11:43",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                                          "typeString": "contract StakingPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                                          "typeString": "contract StakingPool"
                                        }
                                      ],
                                      "id": 31322,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12460:7:43",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 31321,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12460:7:43",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 31324,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12460:20:43",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 31325,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "12481:7:43",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "12460:28:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12450:38:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 31327,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12449:40:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 31328,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31298,
                            "src": "12492:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12449:53:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12433:69:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31336,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31215,
                              "src": "12542:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 31333,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30128,
                                  "src": "12520:11:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$3736",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 31332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12512:8:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 31331,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12512:8:43",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12512:20:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 31335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12533:8:43",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "12512:29:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 31337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12512:32:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31338,
                        "nodeType": "ExpressionStatement",
                        "src": "12512:32:43"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 31339,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30128,
                              "src": "12554:11:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$3736",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 31341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12566:10:43",
                            "memberName": "distribute",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3403,
                            "src": "12554:22:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 31342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12554:24:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31343,
                        "nodeType": "ExpressionStatement",
                        "src": "12554:24:43"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31344,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31298,
                            "src": "12591:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 31345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12605:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12591:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 31351,
                        "nodeType": "IfStatement",
                        "src": "12588:34:43",
                        "trueBody": {
                          "expression": {
                            "id": 31349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 31347,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31298,
                              "src": "12608:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 31348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12621:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12608:14:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 31350,
                          "nodeType": "ExpressionStatement",
                          "src": "12608:14:43"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31352,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31316,
                            "src": "12635:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 31353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12647:1:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "12635:13:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 31359,
                        "nodeType": "IfStatement",
                        "src": "12632:29:43",
                        "trueBody": {
                          "expression": {
                            "id": 31357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 31355,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31316,
                              "src": "12650:8:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 31356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12660:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "12650:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 31358,
                          "nodeType": "ExpressionStatement",
                          "src": "12650:11:43"
                        }
                      },
                      {
                        "assignments": [
                          31361
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31361,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "12676:20:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 31400,
                            "src": "12671:25:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31360,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12671:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31365,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31362,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31282,
                            "src": "12699:12:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 31363,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31298,
                            "src": "12714:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12699:25:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12671:53:43"
                      },
                      {
                        "expression": {
                          "id": 31372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31366,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31282,
                            "src": "12734:12:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 31369,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30164,
                                  "src": "12757:5:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 31368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12749:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 31367,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12749:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12749:14:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 31371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12764:7:43",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "12749:22:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12734:37:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31373,
                        "nodeType": "ExpressionStatement",
                        "src": "12734:37:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31375,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31282,
                              "src": "12911:12:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 31376,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31361,
                              "src": "12925:20:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 31377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12947:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 31374,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8247,
                              8283,
                              8333,
                              8369
                            ],
                            "referencedDeclaration": 8247,
                            "src": "12893:17:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 31378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12893:56:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31379,
                        "nodeType": "ExpressionStatement",
                        "src": "12893:56:43"
                      },
                      {
                        "assignments": [
                          31381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 31381,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "12964:18:43",
                            "nodeType": "VariableDeclaration",
                            "scope": 31400,
                            "src": "12959:23:43",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 31380,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12959:4:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 31385,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 31384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 31382,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31290,
                            "src": "12985:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 31383,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31316,
                            "src": "12998:8:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12985:21:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12959:47:43"
                      },
                      {
                        "expression": {
                          "id": 31392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 31386,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31290,
                            "src": "13016:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 31389,
                                  "name": "bob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30170,
                                  "src": "13037:3:43",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 31388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13029:7:43",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 31387,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13029:7:43",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 31390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13029:12:43",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 31391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13042:7:43",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "13029:20:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13016:33:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31393,
                        "nodeType": "ExpressionStatement",
                        "src": "13016:33:43"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 31395,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31290,
                              "src": "13189:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 31396,
                              "name": "bobBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31381,
                              "src": "13201:18:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 31397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13221:1:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 31394,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8247,
                              8283,
                              8333,
                              8369
                            ],
                            "referencedDeclaration": 8247,
                            "src": "13171:17:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 31398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13171:52:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 31399,
                        "nodeType": "ExpressionStatement",
                        "src": "13171:52:43"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c07d2f57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDistribute",
            "nameLocation": "11707:14:43",
            "parameters": {
              "id": 31216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31213,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "11729:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 31480,
                  "src": "11722:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 31212,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11722:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31215,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "11739:1:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 31480,
                  "src": "11732:8:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 31214,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "11732:6:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11721:20:43"
            },
            "returnParameters": {
              "id": 31217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11749:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31518,
            "nodeType": "FunctionDefinition",
            "src": "13817:393:43",
            "nodes": [],
            "body": {
              "id": 31517,
              "nodeType": "Block",
              "src": "13857:353:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31484,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "13875:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31483,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7325,
                        7346,
                        7370,
                        7394
                      ],
                      "referencedDeclaration": 7325,
                      "src": "13865:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13865:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31486,
                  "nodeType": "ExpressionStatement",
                  "src": "13865:20:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 31490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13909:32:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 31487,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "13893:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11818",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13896:12:43",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11304,
                      "src": "13893:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13893:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31492,
                  "nodeType": "ExpressionStatement",
                  "src": "13893:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31496,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30173,
                        "src": "13972:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 31497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13980:35:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 31498,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30179,
                        "src": "14017:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31499,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30182,
                        "src": "14028:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 31493,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "13950:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13962:9:43",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3040,
                      "src": "13950:21:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 31500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13950:96:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31501,
                  "nodeType": "ExpressionStatement",
                  "src": "13950:96:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 31505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14070:32:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 31502,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "14054:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11818",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14057:12:43",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11304,
                      "src": "14054:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14054:49:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31507,
                  "nodeType": "ExpressionStatement",
                  "src": "14054:49:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31511,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30173,
                        "src": "14129:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 31512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14137:35:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 31513,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30179,
                        "src": "14174:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31514,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30182,
                        "src": "14185:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 31508,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "14111:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31510,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14123:5:43",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2877,
                      "src": "14111:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 31515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14111:92:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31516,
                  "nodeType": "ExpressionStatement",
                  "src": "14111:92:43"
                }
              ]
            },
            "functionSelector": "8adcff77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBadWithdrawalCred",
            "nameLocation": "13826:21:43",
            "parameters": {
              "id": 31481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13847:2:43"
            },
            "returnParameters": {
              "id": 31482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13857:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 31550,
            "nodeType": "FunctionDefinition",
            "src": "14216:295:43",
            "nodes": [],
            "body": {
              "id": 31549,
              "nodeType": "Block",
              "src": "14253:258:43",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31522,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30158,
                        "src": "14271:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 31521,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7325,
                        7346,
                        7370,
                        7394
                      ],
                      "referencedDeclaration": 7325,
                      "src": "14261:9:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 31523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14261:20:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31524,
                  "nodeType": "ExpressionStatement",
                  "src": "14261:20:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 31528,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30173,
                        "src": "14311:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31529,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30176,
                        "src": "14319:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31530,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30179,
                        "src": "14343:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31531,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30182,
                        "src": "14354:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 31525,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "14289:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14301:9:43",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3040,
                      "src": "14289:21:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 31532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14289:83:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31533,
                  "nodeType": "ExpressionStatement",
                  "src": "14289:83:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7075624b6579206d69736d61746368",
                        "id": 31537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14396:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        },
                        "value": "pubKey mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2714402f8c3b573b64268d127ae315c0053fe45c201e45c87cf1244c19f77ab9",
                          "typeString": "literal_string \"pubKey mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 31534,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "14380:2:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$11818",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 31536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14383:12:43",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11304,
                      "src": "14380:15:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 31538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14380:34:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31539,
                  "nodeType": "ExpressionStatement",
                  "src": "14380:34:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "dead",
                        "id": 31543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14440:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        "value": "ޭ"
                      },
                      {
                        "id": 31544,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30176,
                        "src": "14451:22:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31545,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30179,
                        "src": "14475:9:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 31546,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30182,
                        "src": "14486:17:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_3905d344717efd562447a4960eea941c1244adc31f53525d0ec1397ff6951c9c",
                          "typeString": "literal_string hex\"dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 31540,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30128,
                        "src": "14422:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3736",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 31542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14434:5:43",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2877,
                      "src": "14422:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 31547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14422:82:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31548,
                  "nodeType": "ExpressionStatement",
                  "src": "14422:82:43"
                }
              ]
            },
            "functionSelector": "94892dda",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testPubKeyMismatch",
            "nameLocation": "14225:18:43",
            "parameters": {
              "id": 31519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14243:2:43"
            },
            "returnParameters": {
              "id": 31520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14253:0:43"
            },
            "scope": 31551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30103,
              "name": "Test",
              "nameLocations": [
                "784:4:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9699,
              "src": "784:4:43"
            },
            "id": 30104,
            "nodeType": "InheritanceSpecifier",
            "src": "784:4:43"
          }
        ],
        "canonicalName": "StakingPoolTest",
        "contractDependencies": [
          58,
          245,
          989,
          1398,
          1557,
          1899,
          2529,
          3879
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31551,
          9699,
          6769,
          6506
        ],
        "name": "StakingPoolTest",
        "nameLocation": "765:15:43",
        "scope": 31552,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 43
}