{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "_frensStorage",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "validatorLocked",
          "type": "bool"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461008557601f612bd338819003918201601f19168301916001600160401b0383118484101761008a5780849260209460405283398101031261008557516001600160a01b038116810361008557600080546001600160a81b03191660089290921b610100600160a81b0316919091176001179055604051612b3290816100a18239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163319e90901461005a57506354fd4d501461003857600080fd5b3461005657816003193601126100565760ff60209254169051908152f35b5080fd5b8383346100565780600319360112610056576004356001600160a01b038181169182900361033d57602435908115159485830361033a5780549661263f8082019082821067ffffffffffffffff83111761032657879183916104be83398781528560209b60081c168b82015203019082f095861561031a57828716966101208751918a8301906a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b169283602b820152601f81526101188161036b565b519020610470565b61015187518a8101906e636f6e74726163742e65786973747360881b825283602f8201526023815261011881610387565b8651898101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b835260308201526024815261017f81610387565b51902092825460081c1692833b15610316579060448392838951968794859363abfdcced60e01b8552600485015260248401525af190811561030b5750927fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e92859287956102fc575b50156102825781516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102719161023c81602284015b03601f1981018352826103a3565b51902083519061024b8261036b565b60158252746177616974696e6756616c696461746f72496e666f60581b8a8301526103c5565b81519033825287820152a251908152f35b81516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102f7916102c6816022840161022e565b5190208351906102d58261036b565b6011825270616363657074696e674465706f7369747360781b8a8301526103c5565b610271565b61030590610341565b886101e8565b8551903d90823e3d90fd5b8280fd5b508451903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b80fd5b8380fd5b67ffffffffffffffff811161035557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761035557604052565b6060810190811067ffffffffffffffff82111761035557604052565b90601f8019910116810190811067ffffffffffffffff82111761035557604052565b600080549192909160081c6001600160a01b031690813b15610316579282916040519485926306e8995560e41b8452600484015260406024840152805190816044850152845b82811061045557505083606484838383839684010152601f801991011681010301925af1908115610449575061043e5750565b61044790610341565b565b604051903d90823e3d90fd5b602081830181015160648a840101528796508895500161040b565b60009060018060a01b03825460081c1690813b1561031657829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610449575061043e575056fe6080604081815234620001965780826200263f80380380916200002382856200019b565b83398101031262000196576200003982620001bf565b6020928301516001600160a01b03808216949185900362000196576200005f33620001d4565b600180546001600160a01b0319908116871790915584516f636f6e74726163742e6164647265737360801b8185019081526d4672656e73506f6f6c536861726560901b6030830152601e82528187019792949192906001600160401b038911848a1017620001805760248984938193828c52875190206321f8a72160e01b835260448801525afa918215620001755760009262000131575b50506200011094955016906002541617600255620001d4565b6000805460ff60a01b1916600160a01b1790555161242390816200021c8239f35b813d83116200016d575b62000147818a6200019b565b810103126200016a575062000161620001109495620001bf565b859438620000f7565b80fd5b503d6200013b565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200018057604052565b51906001600160a01b03821682036200019657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c908163168a482214610f4b575080631865c57d14610f2d5780631e83409a14610f005780632def662014610e84578063378de45b14610e3d5780633a4b66f114610e18578063441a3e7014610c2a57806345b58fe414610bd05780634ad02ef114610b695780634b2b4e3614610a425780634e71d92d14610a2857806354fd4d5014610a0557806355ec447f1461093b578063678e300a1461091b578063715018a6146108bd5780638620891c146106ed5780638da5cb5b146106c55780639278e714146106a3578063cfb5a5f81461067a578063e2664e4914610624578063e4fc6b6d1461060b578063e920eec0146105d3578063f2fde38b1461050b5763f9faa10403610012578260031936011261044b5761015c6101466123b5565b6101566101516110fb565b6123bd565b14611128565b34156104d3578051916020926101b46801bc16d674ec8000006101ad868401936101a88161018a308861116d565b039561019e601f19978881018552846110bd565b349251902061121c565b61119b565b11156111be565b825190848201671d1bdad95b8b9a5960c21b92838252600881526101d781611085565b5190206001546001600160a01b03939188918516803b1561044b576044839289519485938492632b6cd4f760e21b84528b840152600160248401525af180156104ba579061024392916104c4575b5085518781019182526008815261023b81611085565b51902061121c565b90868551878101906d19195c1bdcda5d0b985b5bdd5b9d60921b825284602e820152602e8152610272816110a1565b5190208460015416803b1561044b576044839289519485938492637152429d60e11b84528b8401523460248401525af180156104ba576104a1575b5090869392916102df86518881016102d5826102c9308461116d565b038581018452836110bd565b3491519020611295565b85516a1a591ccb9a5b8b9c1bdbdb60aa1b8882019081523060601b6001600160601b031916600b820152916103209082601f85015b039081018352826110bd565b519020826001541690813b1561049d578591604483928951948593849263785f002b60e11b84528a8401528760248401525af180156104935790859161047b575b50508451868101916a1c1bdbdb0b999bdc8b9a5960aa1b8352602b820152602b815261038c816110a1565b519020816001541690813b15610477578491604483928851948593849263ca446dd960e01b8452898401523060248401525af1801561046d57908491610459575b50506002541690813b1561044b57829160248392865194859384926335313c2160e11b845233908401525af1801561044f57610437575b50507f1ed12c9855bd60407f7650e01c62ee4f0f40744b5b17983eec349a2b4e89981a918151903482523390820152a180f35b6104409061105b565b61044b578238610404565b8280fd5b83513d84823e3d90fd5b6104629061105b565b61044b5782386103cd565b85513d86823e3d90fd5b8480fd5b6104849061105b565b61048f578338610361565b8380fd5b86513d87823e3d90fd5b8580fd5b6104b09097919493929761105b565b95909192386102ad565b86513d8a823e3d90fd5b6104cd9061105b565b38610225565b906020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b503461044b57602036600319011261044b576001600160a01b038235818116939084900361047757845491821692610544338514611376565b84156105815750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8334610608576106056105e536610ff1565b9561060060018060a09894989795971b038a54163314611376565b611957565b80f35b80fd5b8334610608578060031936011261060857610605611e1a565b83823461067657816003193601126106765761064a60018060a01b038354163314611376565b818080804781811561066d575b3390f115610663575080f35b51903d90823e3d90fd5b506108fc610657565b5080fd5b508234610608576020366003190112610608575061069c6020924790356121ec565b9051908152f35b83346106085780600319360112610608576106bc611e1a565b61060533612028565b838234610676578160031936011261067657905490516001600160a01b039091168152602090f35b5091906020908160031936011261044b5780359060018060a01b036024848260025416885192838092634f558e7960e01b825288888301525afa9081156108b3578691610886575b501561084f576107708651858101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b8152610768816110a1565b51902061131c565b3091160361081757506102d5610605939461078c6101466123b5565b6107fb8151936107ce6801bc16d674ec8000006101ad6107c7898901896107b3308361116d565b039961023b601f199b8c81018352826110bd565b349061119b565b825190868201906d19195c1bdcda5d0b985b5bdd5b9d60921b8252602e830152602e82526102d5826110a1565b51928301918361080b308561116d565b039081018452836110bd565b845162461bcd60e51b815290810183905260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b855162461bcd60e51b815280830185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b6108a69150853d87116108ac575b61089e81836110bd565b8101906112e5565b38610735565b503d610894565b87513d88823e3d90fd5b8334610608578060031936011261060857805481906001600160a01b038116906108e8338314611376565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508234610608576020366003190112610608575061069c60209235612291565b503461044b578260031936011261044b57610954611e1a565b61095c6120b6565b91835b8351811015610a01576109728185611df0565b5160025484516331a9108f60e11b815284810192909252602091908290829060249082906001600160a01b03165afa9182156109f757916109c0916109c5949389926109ca575b5050612028565b611de1565b61095f565b6109e99250803d106109f0575b6109e181836110bd565b8101906112fd565b38806109b9565b503d6109d7565b85513d89823e3d90fd5b8480f35b83823461067657816003193601126106765760ff6020925460a01c169051908152f35b833461060857806003193601126106085761060533612028565b503461044b57610a5136610ff1565b92610a6c60018060a09998999594951b038b54163314611376565b875194610ac56020870187610aa930836021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b0397610abd601f19998a81018352826110bd565b5190206114f0565b15610b4e57505050505090610af4610b03928551610aec60208201928261031430866113c1565b519020611453565b602081519101209236916113e7565b6020815191012003610b19575050610605611661565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b939750935093610b619750949094611957565b610605611661565b83823461067657816003193601126106765780610bb9610bcc925160208101907376616c696461746f722e7075626c69632e6b657960601b82523060601b603482015260288152610aec816110a1565b9051918291602083526020830190610f99565b0390f35b838234610676578160031936011261067657610bea6120b6565b815192839260208080860192818752855180945286019401925b828110610c1357505050500390f35b835185528695509381019392810192600101610c04565b50903461044b578160031936011261044b57803560243591610c4a6123b5565b610c5561015161163f565b14610dd55760025484516331a9108f60e11b8152828101849052602093916001600160a01b03919085908290602490829086165afa908115610dcb578891610dae575b50163303610d7c5784519184610cd38585016d19195c1bdcda5d0b985b5bdd5b9d60921b9586825285602e820152602e815261023b816110a1565b10610d42575083610d2f81889695610d0d8897889788978c5190858201928352602e820152602e8152610d05816110a1565b519020611d9c565b885190810190610d0581610d21308561116d565b03601f1981018352826110bd565b81811561066d573390f115610663575080f35b855162461bcd60e51b815290810184905260146024820152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b5060649184519162461bcd60e51b8352820152600d60248201526c3737ba103a34329037bbb732b960991b6044820152fd5b610dc59150853d87116109f0576109e181836110bd565b38610c98565b87513d8a823e3d90fd5b606490602085519162461bcd60e51b8352820152601b60248201527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152fd5b8334610608578060031936011261060857610b6160018060a01b038254163314611376565b508234610608576020366003190112610608575061069c6020928251848101916d19195c1bdcda5d0b985b5bdd5b9d60921b835235602e820152602e815261023b816110a1565b83823461067657816003193601126106765761060590610eae60018060a01b038454163314611376565b60644711610ef3575b80516020810190610ecc81610d213085611611565b519020905190610edb82611085565b6006825265195e1a5d195960d21b6020830152611901565b610efb611e1a565b610eb7565b50503461067657602036600319011261067657356001600160a01b03811681036106765761060590612028565b838234610676578160031936011261067657610bcc90610bb961235b565b8285346106085780600319360112610608575061069c8260208094019061023b81610d21308561116d565b60005b838110610f895750506000910152565b8181015183820152602001610f79565b90602091610fb281518092818552858086019101610f76565b601f01601f1916010190565b9181601f84011215610fec5782359167ffffffffffffffff8311610fec5760208381860195010111610fec57565b600080fd5b906080600319830112610fec5767ffffffffffffffff600435818111610fec578361101e91600401610fbe565b93909392602435838111610fec578261103991600401610fbe565b93909392604435918211610fec5761105391600401610fbe565b909160643590565b67ffffffffffffffff811161106f57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761106f57604052565b6060810190811067ffffffffffffffff82111761106f57604052565b90601f8019910116810190811067ffffffffffffffff82111761106f57604052565b67ffffffffffffffff811161106f57601f01601f191660200190565b6040519061110882611085565b6011825270616363657074696e674465706f7369747360781b6020830152565b1561112f57565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b919082018092116111a857565b634e487b7160e01b600052601160045260246000fd5b156111c557565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156112895760009161125b575090565b906020823d8211611281575b81611274602093836110bd565b8101031261060857505190565b3d9150611267565b6040513d6000823e3d90fd5b6001546001600160a01b031691823b15610fec576044600092836040519586948593632b6cd4f760e21b8552600485015260248401525af18015611289576112da5750565b6112e39061105b565b565b90816020910312610fec57518015158103610fec5790565b90816020910312610fec57516001600160a01b0381168103610fec5790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156112895760009161135b575090565b611373915060203d81116109f0576109e181836110bd565b90565b1561137d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b9291926113f3826110df565b9161140160405193846110bd565b829481845281830111610fec578281602093846000960137010152565b9092919261142b816110df565b9161143960405193846110bd565b829482845282820111610fec5760206112e3930190610f76565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa9182156114e357819261149457505090565b909291503d8084833e6114a781836110bd565b81019060208183031261048f5780519067ffffffffffffffff8211610477570181601f8201121561048f5761137392935060208151910161141e565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa9081156112895760009161152f575090565b611373915060203d81116108ac5761089e81836110bd565b1561154e57565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b602a91757769746864726177616c5f63726564656e7469616c7360501b82526001600160601b03199060601b1660168201520190565b601d91687369676e617475726560b81b82526001600160601b03199060601b1660098201520190565b6025917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82526001600160601b03199060601b1660118201520190565b6022916d636f6e74726163742e737461746560901b82526001600160601b03199060601b16600e8201520190565b6040519061164c82611085565b60068252651cdd185ad95960d21b6020830152565b6801bc16d674ec800000908147106118cb5761168f61167e6123b5565b6116896101516110fb565b14611547565b6040805160206116ba818301836116a630836113c1565b0393610aec601f19958681018352826110bd565b6116dd845183810190610aec816116d13085611581565b038781018352826110bd565b92611701855184810190610aec816116f530856115b7565b038581018352826110bd565b96855184810190611716816116f530856115e0565b5190206001548751635376ab1f60e11b8152600481019290925290926001600160a01b039186908590602490829086165afa9384156118c057600094611891575b506117d26117ac8951888101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152610768816110a1565b9189516117c189820192826103143086611611565b5190206117cc61163f565b90611901565b1694853b15610fec576000936118209361182f61180d938a519c8d97889687966304512a2360e31b8852608060048901526084880190610f99565b6003199384888303016024890152610f99565b91858303016044860152610f99565b9060648301520391865af1948515611886577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611877575b5082519182523390820152a1565b6118809061105b565b38611869565b83513d6000823e3d90fd5b90938682813d83116118b9575b6118a881836110bd565b810103126106085750519238611757565b503d61189e565b88513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b6001546001600160a01b031691823b15610fec5761194692600092836040518096819582946306e8995560e41b84526004840152604060248401526044830190610f99565b03925af18015611289576112da5750565b93909592949194600160f81b3001958630116111a857604097885160209889820190815289825261198782611085565b6119923686866113e7565b8a81519101209151902003611cce576119d68951898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b603082015260248152610abd816110a1565b15611bc5576119e36123b5565b89516119ee81611085565b60158152746177616974696e6756616c696461746f72496e666f60581b8a820152611a18906123bd565b14611a2290611547565b88519688880188611a3330836113c1565b0398601f19998a81018252611a4890826110bd565b519020913690611a57926113e7565b611a6091611d12565b87518781019080611a713084611581565b038881018252611a8190826110bd565b519020913690611a90926113e7565b611a9991611d12565b85518581019080611aaa30846115b7565b038681018252611aba90826110bd565b519020913690611ac9926113e7565b611ad291611d12565b83518381019080611ae330846115e0565b038481018252611af390826110bd565b51902090611b0091611d57565b82518281019181611b113085611611565b039081018252611b2190826110bd565b519020611b2c6110fb565b611b3591611901565b81516c1d985b1a59185d1bdc8b9cd95d609a1b9181019182523060601b6001600160601b031916600d830152611b6e8160218401610d21565b5190206001546001600160a01b03169190823b15610fec57600092604484928451958693849263abfdcced60e01b84526004840152600160248401525af1908115611bbb57506112da5750565b513d6000823e3d90fd5b611bd09695966123b5565b611bd86110fb565b611be1906123bd565b14611beb90611547565b88519588870187611bfc30836113c1565b0397601f19988981018252611c1190826110bd565b519020913690611c20926113e7565b611c2991611d12565b87518781019080611c3a3084611581565b038781018252611c4a90826110bd565b519020913690611c59926113e7565b611c6291611d12565b85518581019080611c7330846115b7565b038581018252611c8390826110bd565b519020913690611c92926113e7565b611c9b91611d12565b83518381019181611cac30856115e0565b039081018252611cbc90826110bd565b51902090611cc991611d57565b611b35565b885162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b6001546001600160a01b031691823b15610fec576119469260009283604051809681958294630b8a342160e21b84526004840152604060248401526044830190610f99565b6001546001600160a01b031691823b15610fec5760446000928360405195869485936309d23b6160e31b8552600485015260248401525af18015611289576112da5750565b6001546001600160a01b031691823b15610fec57604460009283604051958694859363ebb9d8c960e01b8552600485015260248401525af18015611289576112da5750565b60001981146111a85760010190565b8051821015611e045760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b611e226123b5565b611e2d61015161163f565b03611fe357476064811115611f9f57604090815190602090818301926f636f6e74726163742e6164647265737360801b8452694672656e73436c61696d60b01b6030820152601a8152611e7f81611085565b519092206001600160a01b0392908390611e989061131c565b1692611ea26120b6565b9560005b8751811015611f7757611eb98189611df0565b5160248685600254168a51928380926331a9108f60e11b82528660048301525afa908115611f6c57916109c09187611f469594600092611f4b575b50611eff91926121ec565b908a51611f3e81610d218c820194856024916f18db185a5b58589b194b985b5bdd5b9d60821b82526001600160601b03199060601b1660108201520190565b519020611295565b611ea6565b611eff9250611f66908b3d8d116109f0576109e181836110bd565b91611ef4565b89513d6000823e3d90fd5b5095505060008093819350918192828215611f96575bf115611bbb5750565b506108fc611f8d565b606460405162461bcd60e51b815260206004820152602060248201527f6d696e696d756d206f66203130302077656920746f20646973747269627574656044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b6040519060208201916f636f6e74726163742e6164647265737360801b8352694672656e73436c61696d60b01b6030820152601a815261206781611085565b519091206001600160a01b03919082906120809061131c565b1691823b15610fec576024600092836040519586948593630f41a04d60e11b85521660048401525af18015611289576112da5750565b6040516a1a591ccb9a5b8b9c1bdbdb60aa1b60208083019182523060601b6001600160601b031916602b840152916120f181603f8101610d21565b5190206001546040516378267eb560e11b81526004810192909252600092908390839060249082906001600160a01b03165afa9283156121e0578093612138575b50505090565b909192503d8082853e61214b81856110bd565b830190828483031261060857835167ffffffffffffffff9485821161044b570182601f820112156106765780519485116121cc578460051b9160405195612194868501886110bd565b8652848087019383010193841161060857508301905b8282106121bd5750505050388080612132565b815181529083019083016121aa565b634e487b7160e01b82526041600452602482fd5b604051903d90823e3d90fd5b61221e9060405160208101916d19195c1bdcda5d0b985b5bdd5b9d60921b8352602e820152602e815261023b816110a1565b612237604051602081019061023b81610d21308561116d565b918115612289578181029181830414901517156111a85781156122735704600181111561226d5760001981019081116111a85790565b50600090565b634e487b7160e01b600052601260045260246000fd5b505050600090565b6002546040516331a9108f60e11b81526004810183905290602090829060249082906001600160a01b03165afa8015611289576123119160009161233d575b506040516f18db185a5b58589b194b985b5bdd5b9d60821b6020820190815260609290921b6001600160601b031916603082015261023b8160448101610d21565b9061231a6123b5565b6123256101516110fb565b0361232e575090565b906101a86113739247906121ec565b612355915060203d81116109f0576109e181836110bd565b386122d0565b604051602081019061237181610d213085611611565b519020600154604051634c373c8d60e11b815260048101929092526000908190839060249082906001600160a01b03165afa9182156114e357819261149457505090565b6123bd61235b565b6040516123e7602082816123da8183019687815193849201610f76565b81010380845201826110bd565b5190209056fea264697066735822122003b58c7861725b32bfbaf3b81231aec100e5c6ed4a4b0e52e14e270a20d79e2d64736f6c63430008110033a2646970667358221220b8853fa2d85fff2850d159e13f625c5bf65ee749e3ce75a807a2fe63080437b764736f6c63430008110033",
    "sourceMap": "199:1116:10:-:0;;;;;;;;;;;;;-1:-1:-1;;199:1116:10;;;;-1:-1:-1;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:1116:10;;;;;;-1:-1:-1;199:1116:10;;-1:-1:-1;;;;;;199:1116:10;;;;;;-1:-1:-1;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;199:1116:10;;;;;;-1:-1:-1;199:1116:10;;;;;-1:-1:-1;199:1116:10",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040818152600436101561001457600080fd5b600091823560e01c908163319e90901461005a57506354fd4d501461003857600080fd5b3461005657816003193601126100565760ff60209254169051908152f35b5080fd5b8383346100565780600319360112610056576004356001600160a01b038181169182900361033d57602435908115159485830361033a5780549661263f8082019082821067ffffffffffffffff83111761032657879183916104be83398781528560209b60081c168b82015203019082f095861561031a57828716966101208751918a8301906a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b169283602b820152601f81526101188161036b565b519020610470565b61015187518a8101906e636f6e74726163742e65786973747360881b825283602f8201526023815261011881610387565b8651898101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b835260308201526024815261017f81610387565b51902092825460081c1692833b15610316579060448392838951968794859363abfdcced60e01b8552600485015260248401525af190811561030b5750927fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e92859287956102fc575b50156102825781516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102719161023c81602284015b03601f1981018352826103a3565b51902083519061024b8261036b565b60158252746177616974696e6756616c696461746f72496e666f60581b8a8301526103c5565b81519033825287820152a251908152f35b81516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102f7916102c6816022840161022e565b5190208351906102d58261036b565b6011825270616363657074696e674465706f7369747360781b8a8301526103c5565b610271565b61030590610341565b886101e8565b8551903d90823e3d90fd5b8280fd5b508451903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b80fd5b8380fd5b67ffffffffffffffff811161035557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761035557604052565b6060810190811067ffffffffffffffff82111761035557604052565b90601f8019910116810190811067ffffffffffffffff82111761035557604052565b600080549192909160081c6001600160a01b031690813b15610316579282916040519485926306e8995560e41b8452600484015260406024840152805190816044850152845b82811061045557505083606484838383839684010152601f801991011681010301925af1908115610449575061043e5750565b61044790610341565b565b604051903d90823e3d90fd5b602081830181015160648a840101528796508895500161040b565b60009060018060a01b03825460081c1690813b1561031657829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610449575061043e575056fe6080604081815234620001965780826200263f80380380916200002382856200019b565b83398101031262000196576200003982620001bf565b6020928301516001600160a01b03808216949185900362000196576200005f33620001d4565b600180546001600160a01b0319908116871790915584516f636f6e74726163742e6164647265737360801b8185019081526d4672656e73506f6f6c536861726560901b6030830152601e82528187019792949192906001600160401b038911848a1017620001805760248984938193828c52875190206321f8a72160e01b835260448801525afa918215620001755760009262000131575b50506200011094955016906002541617600255620001d4565b6000805460ff60a01b1916600160a01b1790555161242390816200021c8239f35b813d83116200016d575b62000147818a6200019b565b810103126200016a575062000161620001109495620001bf565b859438620000f7565b80fd5b503d6200013b565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200018057604052565b51906001600160a01b03821682036200019657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c908163168a482214610f4b575080631865c57d14610f2d5780631e83409a14610f005780632def662014610e84578063378de45b14610e3d5780633a4b66f114610e18578063441a3e7014610c2a57806345b58fe414610bd05780634ad02ef114610b695780634b2b4e3614610a425780634e71d92d14610a2857806354fd4d5014610a0557806355ec447f1461093b578063678e300a1461091b578063715018a6146108bd5780638620891c146106ed5780638da5cb5b146106c55780639278e714146106a3578063cfb5a5f81461067a578063e2664e4914610624578063e4fc6b6d1461060b578063e920eec0146105d3578063f2fde38b1461050b5763f9faa10403610012578260031936011261044b5761015c6101466123b5565b6101566101516110fb565b6123bd565b14611128565b34156104d3578051916020926101b46801bc16d674ec8000006101ad868401936101a88161018a308861116d565b039561019e601f19978881018552846110bd565b349251902061121c565b61119b565b11156111be565b825190848201671d1bdad95b8b9a5960c21b92838252600881526101d781611085565b5190206001546001600160a01b03939188918516803b1561044b576044839289519485938492632b6cd4f760e21b84528b840152600160248401525af180156104ba579061024392916104c4575b5085518781019182526008815261023b81611085565b51902061121c565b90868551878101906d19195c1bdcda5d0b985b5bdd5b9d60921b825284602e820152602e8152610272816110a1565b5190208460015416803b1561044b576044839289519485938492637152429d60e11b84528b8401523460248401525af180156104ba576104a1575b5090869392916102df86518881016102d5826102c9308461116d565b038581018452836110bd565b3491519020611295565b85516a1a591ccb9a5b8b9c1bdbdb60aa1b8882019081523060601b6001600160601b031916600b820152916103209082601f85015b039081018352826110bd565b519020826001541690813b1561049d578591604483928951948593849263785f002b60e11b84528a8401528760248401525af180156104935790859161047b575b50508451868101916a1c1bdbdb0b999bdc8b9a5960aa1b8352602b820152602b815261038c816110a1565b519020816001541690813b15610477578491604483928851948593849263ca446dd960e01b8452898401523060248401525af1801561046d57908491610459575b50506002541690813b1561044b57829160248392865194859384926335313c2160e11b845233908401525af1801561044f57610437575b50507f1ed12c9855bd60407f7650e01c62ee4f0f40744b5b17983eec349a2b4e89981a918151903482523390820152a180f35b6104409061105b565b61044b578238610404565b8280fd5b83513d84823e3d90fd5b6104629061105b565b61044b5782386103cd565b85513d86823e3d90fd5b8480fd5b6104849061105b565b61048f578338610361565b8380fd5b86513d87823e3d90fd5b8580fd5b6104b09097919493929761105b565b95909192386102ad565b86513d8a823e3d90fd5b6104cd9061105b565b38610225565b906020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b503461044b57602036600319011261044b576001600160a01b038235818116939084900361047757845491821692610544338514611376565b84156105815750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8334610608576106056105e536610ff1565b9561060060018060a09894989795971b038a54163314611376565b611957565b80f35b80fd5b8334610608578060031936011261060857610605611e1a565b83823461067657816003193601126106765761064a60018060a01b038354163314611376565b818080804781811561066d575b3390f115610663575080f35b51903d90823e3d90fd5b506108fc610657565b5080fd5b508234610608576020366003190112610608575061069c6020924790356121ec565b9051908152f35b83346106085780600319360112610608576106bc611e1a565b61060533612028565b838234610676578160031936011261067657905490516001600160a01b039091168152602090f35b5091906020908160031936011261044b5780359060018060a01b036024848260025416885192838092634f558e7960e01b825288888301525afa9081156108b3578691610886575b501561084f576107708651858101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b8152610768816110a1565b51902061131c565b3091160361081757506102d5610605939461078c6101466123b5565b6107fb8151936107ce6801bc16d674ec8000006101ad6107c7898901896107b3308361116d565b039961023b601f199b8c81018352826110bd565b349061119b565b825190868201906d19195c1bdcda5d0b985b5bdd5b9d60921b8252602e830152602e82526102d5826110a1565b51928301918361080b308561116d565b039081018452836110bd565b845162461bcd60e51b815290810183905260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b855162461bcd60e51b815280830185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b6108a69150853d87116108ac575b61089e81836110bd565b8101906112e5565b38610735565b503d610894565b87513d88823e3d90fd5b8334610608578060031936011261060857805481906001600160a01b038116906108e8338314611376565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b508234610608576020366003190112610608575061069c60209235612291565b503461044b578260031936011261044b57610954611e1a565b61095c6120b6565b91835b8351811015610a01576109728185611df0565b5160025484516331a9108f60e11b815284810192909252602091908290829060249082906001600160a01b03165afa9182156109f757916109c0916109c5949389926109ca575b5050612028565b611de1565b61095f565b6109e99250803d106109f0575b6109e181836110bd565b8101906112fd565b38806109b9565b503d6109d7565b85513d89823e3d90fd5b8480f35b83823461067657816003193601126106765760ff6020925460a01c169051908152f35b833461060857806003193601126106085761060533612028565b503461044b57610a5136610ff1565b92610a6c60018060a09998999594951b038b54163314611376565b875194610ac56020870187610aa930836021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b0397610abd601f19998a81018352826110bd565b5190206114f0565b15610b4e57505050505090610af4610b03928551610aec60208201928261031430866113c1565b519020611453565b602081519101209236916113e7565b6020815191012003610b19575050610605611661565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b939750935093610b619750949094611957565b610605611661565b83823461067657816003193601126106765780610bb9610bcc925160208101907376616c696461746f722e7075626c69632e6b657960601b82523060601b603482015260288152610aec816110a1565b9051918291602083526020830190610f99565b0390f35b838234610676578160031936011261067657610bea6120b6565b815192839260208080860192818752855180945286019401925b828110610c1357505050500390f35b835185528695509381019392810192600101610c04565b50903461044b578160031936011261044b57803560243591610c4a6123b5565b610c5561015161163f565b14610dd55760025484516331a9108f60e11b8152828101849052602093916001600160a01b03919085908290602490829086165afa908115610dcb578891610dae575b50163303610d7c5784519184610cd38585016d19195c1bdcda5d0b985b5bdd5b9d60921b9586825285602e820152602e815261023b816110a1565b10610d42575083610d2f81889695610d0d8897889788978c5190858201928352602e820152602e8152610d05816110a1565b519020611d9c565b885190810190610d0581610d21308561116d565b03601f1981018352826110bd565b81811561066d573390f115610663575080f35b855162461bcd60e51b815290810184905260146024820152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b5060649184519162461bcd60e51b8352820152600d60248201526c3737ba103a34329037bbb732b960991b6044820152fd5b610dc59150853d87116109f0576109e181836110bd565b38610c98565b87513d8a823e3d90fd5b606490602085519162461bcd60e51b8352820152601b60248201527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152fd5b8334610608578060031936011261060857610b6160018060a01b038254163314611376565b508234610608576020366003190112610608575061069c6020928251848101916d19195c1bdcda5d0b985b5bdd5b9d60921b835235602e820152602e815261023b816110a1565b83823461067657816003193601126106765761060590610eae60018060a01b038454163314611376565b60644711610ef3575b80516020810190610ecc81610d213085611611565b519020905190610edb82611085565b6006825265195e1a5d195960d21b6020830152611901565b610efb611e1a565b610eb7565b50503461067657602036600319011261067657356001600160a01b03811681036106765761060590612028565b838234610676578160031936011261067657610bcc90610bb961235b565b8285346106085780600319360112610608575061069c8260208094019061023b81610d21308561116d565b60005b838110610f895750506000910152565b8181015183820152602001610f79565b90602091610fb281518092818552858086019101610f76565b601f01601f1916010190565b9181601f84011215610fec5782359167ffffffffffffffff8311610fec5760208381860195010111610fec57565b600080fd5b906080600319830112610fec5767ffffffffffffffff600435818111610fec578361101e91600401610fbe565b93909392602435838111610fec578261103991600401610fbe565b93909392604435918211610fec5761105391600401610fbe565b909160643590565b67ffffffffffffffff811161106f57604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761106f57604052565b6060810190811067ffffffffffffffff82111761106f57604052565b90601f8019910116810190811067ffffffffffffffff82111761106f57604052565b67ffffffffffffffff811161106f57601f01601f191660200190565b6040519061110882611085565b6011825270616363657074696e674465706f7369747360781b6020830152565b1561112f57565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b919082018092116111a857565b634e487b7160e01b600052601160045260246000fd5b156111c557565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156112895760009161125b575090565b906020823d8211611281575b81611274602093836110bd565b8101031261060857505190565b3d9150611267565b6040513d6000823e3d90fd5b6001546001600160a01b031691823b15610fec576044600092836040519586948593632b6cd4f760e21b8552600485015260248401525af18015611289576112da5750565b6112e39061105b565b565b90816020910312610fec57518015158103610fec5790565b90816020910312610fec57516001600160a01b0381168103610fec5790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa9081156112895760009161135b575090565b611373915060203d81116109f0576109e181836110bd565b90565b1561137d57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b9291926113f3826110df565b9161140160405193846110bd565b829481845281830111610fec578281602093846000960137010152565b9092919261142b816110df565b9161143960405193846110bd565b829482845282820111610fec5760206112e3930190610f76565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa9182156114e357819261149457505090565b909291503d8084833e6114a781836110bd565b81019060208183031261048f5780519067ffffffffffffffff8211610477570181601f8201121561048f5761137392935060208151910161141e565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa9081156112895760009161152f575090565b611373915060203d81116108ac5761089e81836110bd565b1561154e57565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b602a91757769746864726177616c5f63726564656e7469616c7360501b82526001600160601b03199060601b1660168201520190565b601d91687369676e617475726560b81b82526001600160601b03199060601b1660098201520190565b6025917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82526001600160601b03199060601b1660118201520190565b6022916d636f6e74726163742e737461746560901b82526001600160601b03199060601b16600e8201520190565b6040519061164c82611085565b60068252651cdd185ad95960d21b6020830152565b6801bc16d674ec800000908147106118cb5761168f61167e6123b5565b6116896101516110fb565b14611547565b6040805160206116ba818301836116a630836113c1565b0393610aec601f19958681018352826110bd565b6116dd845183810190610aec816116d13085611581565b038781018352826110bd565b92611701855184810190610aec816116f530856115b7565b038581018352826110bd565b96855184810190611716816116f530856115e0565b5190206001548751635376ab1f60e11b8152600481019290925290926001600160a01b039186908590602490829086165afa9384156118c057600094611891575b506117d26117ac8951888101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b603982015260288152610768816110a1565b9189516117c189820192826103143086611611565b5190206117cc61163f565b90611901565b1694853b15610fec576000936118209361182f61180d938a519c8d97889687966304512a2360e31b8852608060048901526084880190610f99565b6003199384888303016024890152610f99565b91858303016044860152610f99565b9060648301520391865af1948515611886577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611877575b5082519182523390820152a1565b6118809061105b565b38611869565b83513d6000823e3d90fd5b90938682813d83116118b9575b6118a881836110bd565b810103126106085750519238611757565b503d61189e565b88513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b6001546001600160a01b031691823b15610fec5761194692600092836040518096819582946306e8995560e41b84526004840152604060248401526044830190610f99565b03925af18015611289576112da5750565b93909592949194600160f81b3001958630116111a857604097885160209889820190815289825261198782611085565b6119923686866113e7565b8a81519101209151902003611cce576119d68951898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b603082015260248152610abd816110a1565b15611bc5576119e36123b5565b89516119ee81611085565b60158152746177616974696e6756616c696461746f72496e666f60581b8a820152611a18906123bd565b14611a2290611547565b88519688880188611a3330836113c1565b0398601f19998a81018252611a4890826110bd565b519020913690611a57926113e7565b611a6091611d12565b87518781019080611a713084611581565b038881018252611a8190826110bd565b519020913690611a90926113e7565b611a9991611d12565b85518581019080611aaa30846115b7565b038681018252611aba90826110bd565b519020913690611ac9926113e7565b611ad291611d12565b83518381019080611ae330846115e0565b038481018252611af390826110bd565b51902090611b0091611d57565b82518281019181611b113085611611565b039081018252611b2190826110bd565b519020611b2c6110fb565b611b3591611901565b81516c1d985b1a59185d1bdc8b9cd95d609a1b9181019182523060601b6001600160601b031916600d830152611b6e8160218401610d21565b5190206001546001600160a01b03169190823b15610fec57600092604484928451958693849263abfdcced60e01b84526004840152600160248401525af1908115611bbb57506112da5750565b513d6000823e3d90fd5b611bd09695966123b5565b611bd86110fb565b611be1906123bd565b14611beb90611547565b88519588870187611bfc30836113c1565b0397601f19988981018252611c1190826110bd565b519020913690611c20926113e7565b611c2991611d12565b87518781019080611c3a3084611581565b038781018252611c4a90826110bd565b519020913690611c59926113e7565b611c6291611d12565b85518581019080611c7330846115b7565b038581018252611c8390826110bd565b519020913690611c92926113e7565b611c9b91611d12565b83518381019181611cac30856115e0565b039081018252611cbc90826110bd565b51902090611cc991611d57565b611b35565b885162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b6001546001600160a01b031691823b15610fec576119469260009283604051809681958294630b8a342160e21b84526004840152604060248401526044830190610f99565b6001546001600160a01b031691823b15610fec5760446000928360405195869485936309d23b6160e31b8552600485015260248401525af18015611289576112da5750565b6001546001600160a01b031691823b15610fec57604460009283604051958694859363ebb9d8c960e01b8552600485015260248401525af18015611289576112da5750565b60001981146111a85760010190565b8051821015611e045760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b611e226123b5565b611e2d61015161163f565b03611fe357476064811115611f9f57604090815190602090818301926f636f6e74726163742e6164647265737360801b8452694672656e73436c61696d60b01b6030820152601a8152611e7f81611085565b519092206001600160a01b0392908390611e989061131c565b1692611ea26120b6565b9560005b8751811015611f7757611eb98189611df0565b5160248685600254168a51928380926331a9108f60e11b82528660048301525afa908115611f6c57916109c09187611f469594600092611f4b575b50611eff91926121ec565b908a51611f3e81610d218c820194856024916f18db185a5b58589b194b985b5bdd5b9d60821b82526001600160601b03199060601b1660108201520190565b519020611295565b611ea6565b611eff9250611f66908b3d8d116109f0576109e181836110bd565b91611ef4565b89513d6000823e3d90fd5b5095505060008093819350918192828215611f96575bf115611bbb5750565b506108fc611f8d565b606460405162461bcd60e51b815260206004820152602060248201527f6d696e696d756d206f66203130302077656920746f20646973747269627574656044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b6040519060208201916f636f6e74726163742e6164647265737360801b8352694672656e73436c61696d60b01b6030820152601a815261206781611085565b519091206001600160a01b03919082906120809061131c565b1691823b15610fec576024600092836040519586948593630f41a04d60e11b85521660048401525af18015611289576112da5750565b6040516a1a591ccb9a5b8b9c1bdbdb60aa1b60208083019182523060601b6001600160601b031916602b840152916120f181603f8101610d21565b5190206001546040516378267eb560e11b81526004810192909252600092908390839060249082906001600160a01b03165afa9283156121e0578093612138575b50505090565b909192503d8082853e61214b81856110bd565b830190828483031261060857835167ffffffffffffffff9485821161044b570182601f820112156106765780519485116121cc578460051b9160405195612194868501886110bd565b8652848087019383010193841161060857508301905b8282106121bd5750505050388080612132565b815181529083019083016121aa565b634e487b7160e01b82526041600452602482fd5b604051903d90823e3d90fd5b61221e9060405160208101916d19195c1bdcda5d0b985b5bdd5b9d60921b8352602e820152602e815261023b816110a1565b612237604051602081019061023b81610d21308561116d565b918115612289578181029181830414901517156111a85781156122735704600181111561226d5760001981019081116111a85790565b50600090565b634e487b7160e01b600052601260045260246000fd5b505050600090565b6002546040516331a9108f60e11b81526004810183905290602090829060249082906001600160a01b03165afa8015611289576123119160009161233d575b506040516f18db185a5b58589b194b985b5bdd5b9d60821b6020820190815260609290921b6001600160601b031916603082015261023b8160448101610d21565b9061231a6123b5565b6123256101516110fb565b0361232e575090565b906101a86113739247906121ec565b612355915060203d81116109f0576109e181836110bd565b386122d0565b604051602081019061237181610d213085611611565b519020600154604051634c373c8d60e11b815260048101929092526000908190839060249082906001600160a01b03165afa9182156114e357819261149457505090565b6123bd61235b565b6040516123e7602082816123da8183019687815193849201610f76565b81010380845201826110bd565b5190209056fea264697066735822122003b58c7861725b32bfbaf3b81231aec100e5c6ed4a4b0e52e14e270a20d79e2d64736f6c63430008110033a2646970667358221220b8853fa2d85fff2850d159e13f625c5bf65ee749e3ce75a807a2fe63080437b764736f6c63430008110033",
    "sourceMap": "199:1116:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;589:37;;;;;;;;;;;;;;;;;;;;;;199:1116;;;;;;;;;;;;;589:37;;;;;;;;;;199:1116;;;;706:4;199:1116;;650:53;;;;199:1116;-1:-1:-1;;;199:1116:10;;;;;;;;;;;;;;650:53;;;;;;:::i;:::-;199:1116;640:64;;706:4;:::i;:::-;845;199:1116;;785:57;;;199:1116;-1:-1:-1;;;199:1116:10;;;;;;;785:57;;;;;;:::i;845:4::-;199:1116;;874:58;;;199:1116;-1:-1:-1;;;199:1116:10;;;;;;;874:58;;;;;:::i;:::-;199:1116;864:69;;199:1116;;;;;;6422:34:2;;;;;;199:1116:10;;;;;;;;;;;;;;;6422:34:2;;199:1116:10;6422:34:2;;199:1116:10;;;;;6422:34:2;;;;;;;;;1224:48:10;6422:34:2;;;;;;;199:1116:10;-1:-1:-1;957:257:10;;;199:1116;;-1:-1:-1;;;1004:56:10;;;199:1116;;;;;;;-1:-1:-1;;199:1116:10;;;;;984:103;;1004:56;199:1116;;;;1004:56;;650:53;;1004:56;;;;;;:::i;:::-;199:1116;994:67;;199:1116;;;;;;:::i;:::-;;;;-1:-1:-1;;;199:1116:10;;;;984:103;:::i;:::-;199:1116;;1253:10;;199:1116;;;;;;1224:48;199:1116;;;;;957:257;199:1116;;-1:-1:-1;;;1128:56:10;;;199:1116;;;;;;;-1:-1:-1;;199:1116:10;;;;;1108:99;;1128:56;199:1116;;;;1128:56;199:1116;1128:56;199:1116;1118:67;;199:1116;;;;;;:::i;:::-;;;;-1:-1:-1;;;199:1116:10;;;;1108:99;:::i;:::-;957:257;;6422:34:2;;;;:::i;:::-;;;;;199:1116:10;;;;;;;;;;6422:34:2;199:1116:10;;;589:37;199:1116;;;;;;;;;;;589:37;-1:-1:-1;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;650:53;;;199:1116;;;;;;;;;;;;;;;;:::o;6150:105:2:-;6216:12;199:1116:10;;6150:105:2;;6216:12;;199:1116:10;;-1:-1:-1;;;;;199:1116:10;;6216:36:2;;;;;199:1116:10;;;;;;;;;;;6216:36:2;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:53;;;199:1116;;;;;6216:36:2;;;;;;;;;;;;;6150:105;:::o;6216:36::-;;;;:::i;:::-;6150:105::o;6216:36::-;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;199:1116:10;;-1:-1:-1;199:1116:10;;;6367:92:2;6422:12;199:1116:10;;;;;;;;;;;6422:34:2;;;;;;199:1116:10;;;;;;;;;;;;;;;6422:34:2;;;;;199:1116:10;;;;;;6422:34:2;;;;;;;;;;6367:92;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "create(address,bool)": "319e9090",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"_frensStorage\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Create\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"validatorLocked\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolFactory.sol\":\"StakingPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x0bbd8d04f70230898e6f8f0103a47996c2cf0ebbab4806830a22e53468fec3c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65356ec82691e82fca1bc902ec534eaeb6a3a39734862c039cfc46c8481a3b32\",\"dweb:/ipfs/QmbFg5hijbFMXeiAPnzsapxatetCync2peCP2DW5JMZw4v\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f\",\"dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655\",\"dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2\",\"dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278\",\"dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "_frensStorage",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Create",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "validatorLocked",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/StakingPoolFactory.sol": "StakingPoolFactory"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x0bbd8d04f70230898e6f8f0103a47996c2cf0ebbab4806830a22e53468fec3c0",
        "urls": [
          "bzz-raw://65356ec82691e82fca1bc902ec534eaeb6a3a39734862c039cfc46c8481a3b32",
          "dweb:/ipfs/QmbFg5hijbFMXeiAPnzsapxatetCync2peCP2DW5JMZw4v"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9",
        "urls": [
          "bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f",
          "dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f",
        "urls": [
          "bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655",
          "dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6",
        "urls": [
          "bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2",
          "dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a",
        "urls": [
          "bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278",
          "dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/StakingPoolFactory.sol",
    "id": 4092,
    "exportedSymbols": {
      "Context": [
        29955
      ],
      "FrensBase": [
        836
      ],
      "IDepositContract": [
        4186
      ],
      "IERC165": [
        30194
      ],
      "IERC721": [
        29222
      ],
      "IERC721Enumerable": [
        29609
      ],
      "IFrensClaim": [
        4344
      ],
      "IFrensPoolShare": [
        4419
      ],
      "IFrensStorage": [
        4625
      ],
      "IStakingPool": [
        4928
      ],
      "IStakingPoolFactory": [
        4940
      ],
      "Ownable": [
        28272
      ],
      "StakingPool": [
        3948
      ],
      "StakingPoolFactory": [
        4091
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1284:10",
    "nodes": [
      {
        "id": 3950,
        "nodeType": "PragmaDirective",
        "src": "32:31:10",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 3951,
        "nodeType": "ImportDirective",
        "src": "97:27:10",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "./StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4092,
        "sourceUnit": 3949,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3952,
        "nodeType": "ImportDirective",
        "src": "125:25:10",
        "nodes": [],
        "absolutePath": "contracts/FrensBase.sol",
        "file": "./FrensBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4092,
        "sourceUnit": 837,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3953,
        "nodeType": "ImportDirective",
        "src": "151:46:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "./interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4092,
        "sourceUnit": 4941,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4091,
        "nodeType": "ContractDefinition",
        "src": "199:1116:10",
        "nodes": [
          {
            "id": 3965,
            "nodeType": "EventDefinition",
            "src": "266:94:10",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e",
            "name": "Create",
            "nameLocation": "272:6:10",
            "parameters": {
              "id": 3964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3959,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "300:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3965,
                  "src": "284:31:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3961,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "329:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3965,
                  "src": "321:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3963,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "350:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3965,
                  "src": "342:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3962,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "278:81:10"
            }
          },
          {
            "id": 3979,
            "nodeType": "FunctionDefinition",
            "src": "364:87:10",
            "nodes": [],
            "body": {
              "id": 3978,
              "nodeType": "Block",
              "src": "429:22:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3974,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "435:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "435:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3977,
                  "nodeType": "ExpressionStatement",
                  "src": "435:11:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3971,
                    "name": "_frensStorage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3968,
                    "src": "415:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$4625",
                      "typeString": "contract IFrensStorage"
                    }
                  }
                ],
                "id": 3972,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3970,
                  "name": "FrensBase",
                  "nameLocations": [
                    "405:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "405:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "405:24:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3968,
                  "mutability": "mutable",
                  "name": "_frensStorage",
                  "nameLocation": "390:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "376:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$4625",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 3967,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3966,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "376:13:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4625,
                      "src": "376:13:10"
                    },
                    "referencedDeclaration": 4625,
                    "src": "376:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$4625",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:29:10"
            },
            "returnParameters": {
              "id": 3973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:10"
            },
            "scope": 4091,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4090,
            "nodeType": "FunctionDefinition",
            "src": "455:856:10",
            "nodes": [],
            "body": {
              "id": 4089,
              "nodeType": "Block",
              "src": "557:754:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3991,
                      "mutability": "mutable",
                      "name": "stakingPool",
                      "nameLocation": "575:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 4089,
                      "src": "563:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3948",
                        "typeString": "contract StakingPool"
                      },
                      "typeName": {
                        "id": 3990,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3989,
                          "name": "StakingPool",
                          "nameLocations": [
                            "563:11:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3948,
                          "src": "563:11:10"
                        },
                        "referencedDeclaration": 3948,
                        "src": "563:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3948",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3998,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3995,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3981,
                        "src": "605:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3996,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "613:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensStorage_$4625",
                          "typeString": "contract IFrensStorage"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IFrensStorage_$4625",
                          "typeString": "contract IFrensStorage"
                        }
                      ],
                      "id": 3994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "589:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IFrensStorage_$4625_$returns$_t_contract$_StakingPool_$3948_$",
                        "typeString": "function (address,contract IFrensStorage) returns (contract StakingPool)"
                      },
                      "typeName": {
                        "id": 3993,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3992,
                          "name": "StakingPool",
                          "nameLocations": [
                            "593:11:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3948,
                          "src": "593:11:10"
                        },
                        "referencedDeclaration": 3948,
                        "src": "593:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3948",
                          "typeString": "contract StakingPool"
                        }
                      }
                    },
                    "id": 3997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "563:63:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "706f6f6c2e657869737473",
                                "id": 4003,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "667:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e7aaece09fa4791cde3a855fe5360cc9e92113156f25db4328faea689f82419",
                                  "typeString": "literal_string \"pool.exists\""
                                },
                                "value": "pool.exists"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4006,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3991,
                                    "src": "690:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 4005,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "682:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4004,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "682:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "682:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2e7aaece09fa4791cde3a855fe5360cc9e92113156f25db4328faea689f82419",
                                  "typeString": "literal_string \"pool.exists\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4001,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "650:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "654:12:10",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "650:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:53:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4000,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "640:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "640:64:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "706:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3999,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 4011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:79:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4012,
                  "nodeType": "ExpressionStatement",
                  "src": "632:79:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e657869737473",
                                "id": 4017,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "802:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0bee25abf9dd4d7db1b6a26ed35c16c69cd61a59f46569898d3d99df8a574317",
                                  "typeString": "literal_string \"contract.exists\""
                                },
                                "value": "contract.exists"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4020,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3991,
                                    "src": "829:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 4019,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "821:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4018,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "821:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "821:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0bee25abf9dd4d7db1b6a26ed35c16c69cd61a59f46569898d3d99df8a574317",
                                  "typeString": "literal_string \"contract.exists\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4015,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "785:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4016,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "789:12:10",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "785:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4022,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "785:57:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4014,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "775:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "775:68:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4013,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "767:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 4025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:83:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4026,
                  "nodeType": "ExpressionStatement",
                  "src": "767:83:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "76616c696461746f722e6c6f636b6564",
                                "id": 4031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "891:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_abd7ea9415d7628743a805e41423332e230d8f0ad72e4fa8e7415d9adbd80fc3",
                                  "typeString": "literal_string \"validator.locked\""
                                },
                                "value": "validator.locked"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4034,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3991,
                                    "src": "919:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3948",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 4033,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "911:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4032,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "911:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "911:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_abd7ea9415d7628743a805e41423332e230d8f0ad72e4fa8e7415d9adbd80fc3",
                                  "typeString": "literal_string \"validator.locked\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4029,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "874:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "878:12:10",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "874:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "874:58:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4028,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "864:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:69:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4038,
                        "name": "validatorLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3983,
                        "src": "935:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4027,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "856:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 4039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:95:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4040,
                  "nodeType": "ExpressionStatement",
                  "src": "856:95:10"
                },
                {
                  "condition": {
                    "id": 4041,
                    "name": "validatorLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3983,
                    "src": "960:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4071,
                    "nodeType": "Block",
                    "src": "1100:114:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "636f6e74726163742e7374617465",
                                      "id": 4061,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1145:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      "value": "contract.state"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 4064,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3991,
                                          "src": "1171:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$3948",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$3948",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 4063,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1163:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4062,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1163:7:10",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4065,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1163:20:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4059,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1128:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4060,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1132:12:10",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1128:16:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4066,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1128:56:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4058,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1118:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1118:67:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "616363657074696e674465706f73697473",
                              "id": 4068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1187:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb40db457b263a056d9662810bc3d59355192492c2fc1274da04fbb78484172b",
                                "typeString": "literal_string \"acceptingDeposits\""
                              },
                              "value": "acceptingDeposits"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb40db457b263a056d9662810bc3d59355192492c2fc1274da04fbb78484172b",
                                "typeString": "literal_string \"acceptingDeposits\""
                              }
                            ],
                            "id": 4057,
                            "name": "setString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "1108:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,string memory)"
                            }
                          },
                          "id": 4069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:99:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4070,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:99:10"
                      }
                    ]
                  },
                  "id": 4072,
                  "nodeType": "IfStatement",
                  "src": "957:257:10",
                  "trueBody": {
                    "id": 4056,
                    "nodeType": "Block",
                    "src": "976:118:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "636f6e74726163742e7374617465",
                                      "id": 4046,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1021:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      "value": "contract.state"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 4049,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3991,
                                          "src": "1047:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$3948",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$3948",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 4048,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1039:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4047,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1039:7:10",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4050,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1039:20:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4044,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1004:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4045,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1008:12:10",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1004:16:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4051,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1004:56:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4043,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "994:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4052,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "994:67:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "6177616974696e6756616c696461746f72496e666f",
                              "id": 4053,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1063:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7cfdf6f805bf7a834dd5e8169d1f6bc72c63f63c126de09f1ba91782abcfa23d",
                                "typeString": "literal_string \"awaitingValidatorInfo\""
                              },
                              "value": "awaitingValidatorInfo"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7cfdf6f805bf7a834dd5e8169d1f6bc72c63f63c126de09f1ba91782abcfa23d",
                                "typeString": "literal_string \"awaitingValidatorInfo\""
                              }
                            ],
                            "id": 4042,
                            "name": "setString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "984:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,string memory)"
                            }
                          },
                          "id": 4054,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:103:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4055,
                        "nodeType": "ExpressionStatement",
                        "src": "984:103:10"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4076,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3991,
                            "src": "1239:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$3948",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$3948",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 4075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1231:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4074,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1231:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1231:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4078,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1253:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1257:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1253:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4080,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3981,
                        "src": "1265:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4073,
                      "name": "Create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3965,
                      "src": "1224:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 4081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4082,
                  "nodeType": "EmitStatement",
                  "src": "1219:53:10"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 4085,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3991,
                            "src": "1293:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$3948",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$3948",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 4084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1285:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1285:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 4087,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1284:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3988,
                  "id": 4088,
                  "nodeType": "Return",
                  "src": "1278:28:10"
                }
              ]
            },
            "baseFunctions": [
              4939
            ],
            "functionSelector": "319e9090",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "464:6:10",
            "overrides": {
              "id": 3985,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "531:8:10"
            },
            "parameters": {
              "id": 3984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3981,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "484:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4090,
                  "src": "476:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3983,
                  "mutability": "mutable",
                  "name": "validatorLocked",
                  "nameLocation": "502:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4090,
                  "src": "497:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3982,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:53:10"
            },
            "returnParameters": {
              "id": 3988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3987,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4090,
                  "src": "548:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:9:10"
            },
            "scope": 4091,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3954,
              "name": "IStakingPoolFactory",
              "nameLocations": [
                "230:19:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4940,
              "src": "230:19:10"
            },
            "id": 3955,
            "nodeType": "InheritanceSpecifier",
            "src": "230:19:10"
          },
          {
            "baseName": {
              "id": 3956,
              "name": "FrensBase",
              "nameLocations": [
                "251:9:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 836,
              "src": "251:9:10"
            },
            "id": 3957,
            "nodeType": "InheritanceSpecifier",
            "src": "251:9:10"
          }
        ],
        "canonicalName": "StakingPoolFactory",
        "contractDependencies": [
          3948
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4091,
          836,
          4940
        ],
        "name": "StakingPoolFactory",
        "nameLocation": "208:18:10",
        "scope": 4092,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 10
}