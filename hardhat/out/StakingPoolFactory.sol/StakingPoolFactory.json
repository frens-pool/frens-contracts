{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "_frensStorage",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "validatorLocked",
          "type": "bool"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461008557601f612d3a38819003918201601f19168301916001600160401b0383118484101761008a5780849260209460405283398101031261008557516001600160a01b038116810361008557600080546001600160a81b03191660089290921b610100600160a81b0316919091176001179055604051612c9990816100a18239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163319e90901461005a57506354fd4d501461003857600080fd5b3461005657816003193601126100565760ff60209254169051908152f35b5080fd5b8383346100565780600319360112610056576004356001600160a01b038181169182900361033d57602435908115159485830361033a578054966127a68082019082821067ffffffffffffffff83111761032657879183916104be83398781528560209b60081c168b82015203019082f095861561031a57828716966101208751918a8301906a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b169283602b820152601f81526101188161036b565b519020610470565b61015187518a8101906e636f6e74726163742e65786973747360881b825283602f8201526023815261011881610387565b8651898101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b835260308201526024815261017f81610387565b51902092825460081c1692833b15610316579060448392838951968794859363abfdcced60e01b8552600485015260248401525af190811561030b5750927fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e92859287956102fc575b50156102825781516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102719161023c81602284015b03601f1981018352826103a3565b51902083519061024b8261036b565b60158252746177616974696e6756616c696461746f72496e666f60581b8a8301526103c5565b81519033825287820152a251908152f35b81516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102f7916102c6816022840161022e565b5190208351906102d58261036b565b6011825270616363657074696e674465706f7369747360781b8a8301526103c5565b610271565b61030590610341565b886101e8565b8551903d90823e3d90fd5b8280fd5b508451903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b80fd5b8380fd5b67ffffffffffffffff811161035557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761035557604052565b6060810190811067ffffffffffffffff82111761035557604052565b90601f8019910116810190811067ffffffffffffffff82111761035557604052565b600080549192909160081c6001600160a01b031690813b15610316579282916040519485926306e8995560e41b8452600484015260406024840152805190816044850152845b82811061045557505083606484838383839684010152601f801991011681010301925af1908115610449575061043e5750565b61044790610341565b565b604051903d90823e3d90fd5b602081830181015160648a840101528796508895500161040b565b60009060018060a01b03825460081c1690813b1561031657829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610449575061043e575056fe608060408181523462000196578082620027a680380380916200002382856200019b565b83398101031262000196576200003982620001bf565b6020928301516001600160a01b03808216949185900362000196576200005f33620001d4565b600180546001600160a01b0319908116871790915584516f636f6e74726163742e6164647265737360801b8185019081526d4672656e73506f6f6c536861726560901b6030830152601e82528187019792949192906001600160401b038911848a1017620001805760248984938193828c52875190206321f8a72160e01b835260448801525afa918215620001755760009262000131575b50506200011094955016906002541617600255620001d4565b6000805460ff60a01b1916600160a01b1790555161258a90816200021c8239f35b813d83116200016d575b62000147818a6200019b565b810103126200016a575062000161620001109495620001bf565b859438620000f7565b80fd5b503d6200013b565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200018057604052565b51906001600160a01b03821682036200019657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c908163168a482214611021575080631865c57d146110035780631e83409a14610fd65780632def662014610f5a578063378de45b14610f135780633a4b66f114610eee578063441a3e7014610d0057806345b58fe414610ca65780634ad02ef114610c3f5780634b2b4e3614610b185780634e71d92d14610afe57806354fd4d5014610adb57806355ec447f14610a11578063678e300a146109f1578063715018a6146109935780638620891c146107c35780638da5cb5b1461079b5780639278e71414610779578063cfb5a5f814610750578063e2664e49146106fe578063e4fc6b6d146106e5578063e6b1a3ae146105c4578063e920eec01461058c578063f2fde38b146104c05763f9faa1040361001257826003193601126104225761016761015161251c565b61016161015c6111d1565b612524565b146111fe565b3415610488578051916020926101bf6801bc16d674ec8000006101b8868401936101b3816101953088611243565b03956101a9601f1997888101855284611193565b34925190206112f2565b611271565b1115611294565b825190848201671d1bdad95b8b9a5960c21b92838252600881526101e28161115b565b5190206001546001600160a01b03939188918516803b15610422576044839289519485938492632b6cd4f760e21b84528b840152600160248401525af1801561046f579061024e9291610479575b508551878101918252600881526102468161115b565b5190206112f2565b90868551878101906d19195c1bdcda5d0b985b5bdd5b9d60921b825284602e820152602e815261027d81611177565b5190208460015416803b15610422576044839289519485938492637152429d60e11b84528b8401523460248401525af1801561046f57610456575b5090869392916102ea86518881016102e0826102d43084611243565b03858101845283611193565b34915190206113bf565b85516a1a591ccb9a5b8b9c1bdbdb60aa1b8882019081523060601b6001600160601b031916600b8201529161032b9082601f85015b03908101835282611193565b519020826001541690813b15610452578591604483928951948593849263785f002b60e11b84528a8401528760248401525af1801561044857908591610430575b50506103a690855190878201906a1c1bdbdb0b999bdc8b9a5960aa1b8252602b830152602b825261039c82611177565b309151902061136b565b6002541690813b1561042257829160248392865194859384926335313c2160e11b845233908401525af180156104265761040e575b50507f1ed12c9855bd60407f7650e01c62ee4f0f40744b5b17983eec349a2b4e89981a918151903482523390820152a180f35b61041790611131565b6104225782386103db565b8280fd5b83513d84823e3d90fd5b61043990611131565b61044457833861036c565b8380fd5b86513d87823e3d90fd5b8580fd5b61046590979194939297611131565b95909192386102b8565b86513d8a823e3d90fd5b61048290611131565b38610230565b906020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b5034610422576020366003190112610422576001600160a01b0382358181169390849003610588578454918216926104f9338514611495565b84156105365750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b83346105c1576105be61059e366110c7565b956105b960018060a09894989795971b038a54163314611495565b611a76565b80f35b80fd5b509190346106e15760203660031901126106e1578035906001600160a01b03808316908184036105885760249161060086928354163314611495565b865163516b636d60e11b815260018582015292839182905afa9081156106d75784916106b5575b50511561067b57506105be91925160208101907f706f6f6c2e73706563696669632e6172742e616464726573730000000000000082523060601b6039820152602d815261067381611177565b51902061136b565b606490602085519162461bcd60e51b835282015260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b6044820152fd5b6106d191503d8086833e6106c98183611193565b8101906124e5565b38610627565b85513d86823e3d90fd5b5080fd5b83346105c157806003193601126105c1576105be611f39565b8382346106e157816003193601126106e15761072460018060a01b038354163314611495565b8180808047818115610747575b3390f11561073d575080f35b51903d90823e3d90fd5b506108fc610731565b5082346105c15760203660031901126105c1575061077260209247903561230b565b9051908152f35b83346105c157806003193601126105c157610792611f39565b6105be33612147565b8382346106e157816003193601126106e157905490516001600160a01b039091168152602090f35b509190602090816003193601126104225780359060018060a01b036024848260025416885192838092634f558e7960e01b825288888301525afa90811561098957869161095c575b5015610925576108468651858101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b815261083e81611177565b51902061143b565b309116036108ed57506102e06105be939461086261015161251c565b6108d18151936108a46801bc16d674ec8000006101b861089d898901896108893083611243565b0399610246601f199b8c8101835282611193565b3490611271565b825190868201906d19195c1bdcda5d0b985b5bdd5b9d60921b8252602e830152602e82526102e082611177565b5192830191836108e13085611243565b03908101845283611193565b845162461bcd60e51b815290810183905260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b855162461bcd60e51b815280830185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b61097c9150853d8711610982575b6109748183611193565b810190611404565b3861080b565b503d61096a565b87513d88823e3d90fd5b83346105c157806003193601126105c157805481906001600160a01b038116906109be338314611495565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346105c15760203660031901126105c15750610772602092356123b0565b5034610422578260031936011261042257610a2a611f39565b610a326121d5565b91835b8351811015610ad757610a488185611f0f565b5160025484516331a9108f60e11b815284810192909252602091908290829060249082906001600160a01b03165afa918215610acd5791610a9691610a9b94938992610aa0575b5050612147565b611f00565b610a35565b610abf9250803d10610ac6575b610ab78183611193565b81019061141c565b3880610a8f565b503d610aad565b85513d89823e3d90fd5b8480f35b8382346106e157816003193601126106e15760ff6020925460a01c169051908152f35b83346105c157806003193601126105c1576105be33612147565b503461042257610b27366110c7565b92610b4260018060a09998999594951b038b54163314611495565b875194610b9b6020870187610b7f30836021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b0397610b93601f19998a8101835282611193565b51902061160f565b15610c2457505050505090610bca610bd9928551610bc260208201928261031f30866114e0565b519020611572565b60208151910120923691611506565b6020815191012003610bef5750506105be611780565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b939750935093610c379750949094611a76565b6105be611780565b8382346106e157816003193601126106e15780610c8f610ca2925160208101907376616c696461746f722e7075626c69632e6b657960601b82523060601b603482015260288152610bc281611177565b905191829160208352602083019061106f565b0390f35b8382346106e157816003193601126106e157610cc06121d5565b815192839260208080860192818752855180945286019401925b828110610ce957505050500390f35b835185528695509381019392810192600101610cda565b509034610422578160031936011261042257803560243591610d2061251c565b610d2b61015c61175e565b14610eab5760025484516331a9108f60e11b8152828101849052602093916001600160a01b03919085908290602490829086165afa908115610ea1578891610e84575b50163303610e525784519184610da98585016d19195c1bdcda5d0b985b5bdd5b9d60921b9586825285602e820152602e815261024681611177565b10610e18575083610e0581889695610de38897889788978c5190858201928352602e820152602e8152610ddb81611177565b519020611ebb565b885190810190610ddb81610df73085611243565b03601f198101835282611193565b818115610747573390f11561073d575080f35b855162461bcd60e51b815290810184905260146024820152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b5060649184519162461bcd60e51b8352820152600d60248201526c3737ba103a34329037bbb732b960991b6044820152fd5b610e9b9150853d8711610ac657610ab78183611193565b38610d6e565b87513d8a823e3d90fd5b606490602085519162461bcd60e51b8352820152601b60248201527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152fd5b83346105c157806003193601126105c157610c3760018060a01b038254163314611495565b5082346105c15760203660031901126105c157506107726020928251848101916d19195c1bdcda5d0b985b5bdd5b9d60921b835235602e820152602e815261024681611177565b8382346106e157816003193601126106e1576105be90610f8460018060a01b038454163314611495565b60644711610fc9575b80516020810190610fa281610df73085611730565b519020905190610fb18261115b565b6006825265195e1a5d195960d21b6020830152611a20565b610fd1611f39565b610f8d565b5050346106e15760203660031901126106e157356001600160a01b03811681036106e1576105be90612147565b8382346106e157816003193601126106e157610ca290610c8f61247a565b8285346105c157806003193601126105c157506107728260208094019061024681610df73085611243565b60005b83811061105f5750506000910152565b818101518382015260200161104f565b906020916110888151809281855285808601910161104c565b601f01601f1916010190565b9181601f840112156110c25782359167ffffffffffffffff83116110c257602083818601950101116110c257565b600080fd5b9060806003198301126110c25767ffffffffffffffff6004358181116110c257836110f491600401611094565b939093926024358381116110c2578261110f91600401611094565b939093926044359182116110c25761112991600401611094565b909160643590565b67ffffffffffffffff811161114557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761114557604052565b6060810190811067ffffffffffffffff82111761114557604052565b90601f8019910116810190811067ffffffffffffffff82111761114557604052565b67ffffffffffffffff811161114557601f01601f191660200190565b604051906111de8261115b565b6011825270616363657074696e674465706f7369747360781b6020830152565b1561120557565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b9190820180921161127e57565b634e487b7160e01b600052601160045260246000fd5b1561129b57565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561135f57600091611331575090565b906020823d8211611357575b8161134a60209383611193565b810103126105c157505190565b3d915061133d565b6040513d6000823e3d90fd5b6001546001600160a01b0392908316803b156110c25760009283604492604051968795869463ca446dd960e01b865260048601521660248401525af1801561135f576113b45750565b6113bd90611131565b565b6001546001600160a01b031691823b156110c2576044600092836040519586948593632b6cd4f760e21b8552600485015260248401525af1801561135f576113b45750565b908160209103126110c2575180151581036110c25790565b908160209103126110c257516001600160a01b03811681036110c25790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561135f5760009161147a575090565b611492915060203d8111610ac657610ab78183611193565b90565b1561149c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b929192611512826111b5565b916115206040519384611193565b8294818452818301116110c2578281602093846000960137010152565b9092919261154a816111b5565b916115586040519384611193565b8294828452828201116110c25760206113bd93019061104c565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa9182156116025781926115b357505090565b909291503d8084833e6115c68183611193565b8101906020818303126104445780519067ffffffffffffffff8211610588570181601f820112156104445761149292935060208151910161153d565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa90811561135f5760009161164e575090565b611492915060203d8111610982576109748183611193565b1561166d57565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b602a91757769746864726177616c5f63726564656e7469616c7360501b82526001600160601b03199060601b1660168201520190565b601d91687369676e617475726560b81b82526001600160601b03199060601b1660098201520190565b6025917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82526001600160601b03199060601b1660118201520190565b6022916d636f6e74726163742e737461746560901b82526001600160601b03199060601b16600e8201520190565b6040519061176b8261115b565b60068252651cdd185ad95960d21b6020830152565b6801bc16d674ec800000908147106119ea576117ae61179d61251c565b6117a861015c6111d1565b14611666565b6040805160206117d9818301836117c530836114e0565b0393610bc2601f1995868101835282611193565b6117fc845183810190610bc2816117f030856116a0565b03878101835282611193565b92611820855184810190610bc28161181430856116d6565b03858101835282611193565b968551848101906118358161181430856116ff565b5190206001548751635376ab1f60e11b8152600481019290925290926001600160a01b039186908590602490829086165afa9384156119df576000946119b0575b506118f16118cb8951888101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b60398201526028815261083e81611177565b9189516118e0898201928261031f3086611730565b5190206118eb61175e565b90611a20565b1694853b156110c25760009361193f9361194e61192c938a519c8d97889687966304512a2360e31b885260806004890152608488019061106f565b600319938488830301602489015261106f565b9185830301604486015261106f565b9060648301520391865af19485156119a5577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611996575b5082519182523390820152a1565b61199f90611131565b38611988565b83513d6000823e3d90fd5b90938682813d83116119d8575b6119c78183611193565b810103126105c15750519238611876565b503d6119bd565b88513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b6001546001600160a01b031691823b156110c257611a6592600092836040518096819582946306e8995560e41b8452600484015260406024840152604483019061106f565b03925af1801561135f576113b45750565b93909592949194600160f81b30019586301161127e576040978851602098898201908152898252611aa68261115b565b611ab1368686611506565b8a81519101209151902003611ded57611af58951898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b603082015260248152610b9381611177565b15611ce457611b0261251c565b8951611b0d8161115b565b60158152746177616974696e6756616c696461746f72496e666f60581b8a820152611b3790612524565b14611b4190611666565b88519688880188611b5230836114e0565b0398601f19998a81018252611b679082611193565b519020913690611b7692611506565b611b7f91611e31565b87518781019080611b9030846116a0565b038881018252611ba09082611193565b519020913690611baf92611506565b611bb891611e31565b85518581019080611bc930846116d6565b038681018252611bd99082611193565b519020913690611be892611506565b611bf191611e31565b83518381019080611c0230846116ff565b038481018252611c129082611193565b51902090611c1f91611e76565b82518281019181611c303085611730565b039081018252611c409082611193565b519020611c4b6111d1565b611c5491611a20565b81516c1d985b1a59185d1bdc8b9cd95d609a1b9181019182523060601b6001600160601b031916600d830152611c8d8160218401610df7565b5190206001546001600160a01b03169190823b156110c257600092604484928451958693849263abfdcced60e01b84526004840152600160248401525af1908115611cda57506113b45750565b513d6000823e3d90fd5b611cef96959661251c565b611cf76111d1565b611d0090612524565b14611d0a90611666565b88519588870187611d1b30836114e0565b0397601f19988981018252611d309082611193565b519020913690611d3f92611506565b611d4891611e31565b87518781019080611d5930846116a0565b038781018252611d699082611193565b519020913690611d7892611506565b611d8191611e31565b85518581019080611d9230846116d6565b038581018252611da29082611193565b519020913690611db192611506565b611dba91611e31565b83518381019181611dcb30856116ff565b039081018252611ddb9082611193565b51902090611de891611e76565b611c54565b885162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b6001546001600160a01b031691823b156110c257611a659260009283604051809681958294630b8a342160e21b8452600484015260406024840152604483019061106f565b6001546001600160a01b031691823b156110c25760446000928360405195869485936309d23b6160e31b8552600485015260248401525af1801561135f576113b45750565b6001546001600160a01b031691823b156110c257604460009283604051958694859363ebb9d8c960e01b8552600485015260248401525af1801561135f576113b45750565b600019811461127e5760010190565b8051821015611f235760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b611f4161251c565b611f4c61015c61175e565b03612102574760648111156120be57604090815190602090818301926f636f6e74726163742e6164647265737360801b8452694672656e73436c61696d60b01b6030820152601a8152611f9e8161115b565b519092206001600160a01b0392908390611fb79061143b565b1692611fc16121d5565b9560005b875181101561209657611fd88189611f0f565b5160248685600254168a51928380926331a9108f60e11b82528660048301525afa90811561208b5791610a969187612065959460009261206a575b5061201e919261230b565b908a5161205d81610df78c820194856024916f18db185a5b58589b194b985b5bdd5b9d60821b82526001600160601b03199060601b1660108201520190565b5190206113bf565b611fc5565b61201e9250612085908b3d8d11610ac657610ab78183611193565b91612013565b89513d6000823e3d90fd5b50955050600080938193509181928282156120b5575bf115611cda5750565b506108fc6120ac565b606460405162461bcd60e51b815260206004820152602060248201527f6d696e696d756d206f66203130302077656920746f20646973747269627574656044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b6040519060208201916f636f6e74726163742e6164647265737360801b8352694672656e73436c61696d60b01b6030820152601a81526121868161115b565b519091206001600160a01b039190829061219f9061143b565b1691823b156110c2576024600092836040519586948593630f41a04d60e11b85521660048401525af1801561135f576113b45750565b6040516a1a591ccb9a5b8b9c1bdbdb60aa1b60208083019182523060601b6001600160601b031916602b8401529161221081603f8101610df7565b5190206001546040516378267eb560e11b81526004810192909252600092908390839060249082906001600160a01b03165afa9283156122ff578093612257575b50505090565b909192503d8082853e61226a8185611193565b83019082848303126105c157835167ffffffffffffffff94858211610422570182601f820112156106e15780519485116122eb578460051b91604051956122b386850188611193565b865284808701938301019384116105c157508301905b8282106122dc5750505050388080612251565b815181529083019083016122c9565b634e487b7160e01b82526041600452602482fd5b604051903d90823e3d90fd5b61233d9060405160208101916d19195c1bdcda5d0b985b5bdd5b9d60921b8352602e820152602e815261024681611177565b612356604051602081019061024681610df73085611243565b9181156123a85781810291818304149015171561127e5781156123925704600181111561238c57600019810190811161127e5790565b50600090565b634e487b7160e01b600052601260045260246000fd5b505050600090565b6002546040516331a9108f60e11b81526004810183905290602090829060249082906001600160a01b03165afa801561135f576124309160009161245c575b506040516f18db185a5b58589b194b985b5bdd5b9d60821b6020820190815260609290921b6001600160601b03191660308201526102468160448101610df7565b9061243961251c565b61244461015c6111d1565b0361244d575090565b906101b361149292479061230b565b612474915060203d8111610ac657610ab78183611193565b386123ef565b604051602081019061249081610df73085611730565b519020600154604051634c373c8d60e11b81526004810192909252600090829060249082906001600160a01b03165afa90811561135f576000916124d2575090565b611492913d8091833e6106c98183611193565b6020818303126110c25780519067ffffffffffffffff82116110c257019080601f830112156110c25781516114929260200161153d565b61252461247a565b60405161254e60208281612541818301968781519384920161104c565b8101038084520182611193565b5190209056fea26469706673582212209027d55b161af060055a3e86bac1830c2a4c187ed339f6f4d91cd8fd14d07ce664736f6c63430008110033a26469706673582212201da3275c485cf7285f473f73b808bd89a5361d84d59d4f4574626618ff1428af64736f6c63430008110033",
    "sourceMap": "199:1116:10:-:0;;;;;;;;;;;;;-1:-1:-1;;199:1116:10;;;;-1:-1:-1;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:1116:10;;;;;;-1:-1:-1;199:1116:10;;-1:-1:-1;;;;;;199:1116:10;;;;;;-1:-1:-1;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;199:1116:10;;;;;;-1:-1:-1;199:1116:10;;;;;-1:-1:-1;199:1116:10",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040818152600436101561001457600080fd5b600091823560e01c908163319e90901461005a57506354fd4d501461003857600080fd5b3461005657816003193601126100565760ff60209254169051908152f35b5080fd5b8383346100565780600319360112610056576004356001600160a01b038181169182900361033d57602435908115159485830361033a578054966127a68082019082821067ffffffffffffffff83111761032657879183916104be83398781528560209b60081c168b82015203019082f095861561031a57828716966101208751918a8301906a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b169283602b820152601f81526101188161036b565b519020610470565b61015187518a8101906e636f6e74726163742e65786973747360881b825283602f8201526023815261011881610387565b8651898101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b835260308201526024815261017f81610387565b51902092825460081c1692833b15610316579060448392838951968794859363abfdcced60e01b8552600485015260248401525af190811561030b5750927fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e92859287956102fc575b50156102825781516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102719161023c81602284015b03601f1981018352826103a3565b51902083519061024b8261036b565b60158252746177616974696e6756616c696461746f72496e666f60581b8a8301526103c5565b81519033825287820152a251908152f35b81516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102f7916102c6816022840161022e565b5190208351906102d58261036b565b6011825270616363657074696e674465706f7369747360781b8a8301526103c5565b610271565b61030590610341565b886101e8565b8551903d90823e3d90fd5b8280fd5b508451903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b80fd5b8380fd5b67ffffffffffffffff811161035557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761035557604052565b6060810190811067ffffffffffffffff82111761035557604052565b90601f8019910116810190811067ffffffffffffffff82111761035557604052565b600080549192909160081c6001600160a01b031690813b15610316579282916040519485926306e8995560e41b8452600484015260406024840152805190816044850152845b82811061045557505083606484838383839684010152601f801991011681010301925af1908115610449575061043e5750565b61044790610341565b565b604051903d90823e3d90fd5b602081830181015160648a840101528796508895500161040b565b60009060018060a01b03825460081c1690813b1561031657829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610449575061043e575056fe608060408181523462000196578082620027a680380380916200002382856200019b565b83398101031262000196576200003982620001bf565b6020928301516001600160a01b03808216949185900362000196576200005f33620001d4565b600180546001600160a01b0319908116871790915584516f636f6e74726163742e6164647265737360801b8185019081526d4672656e73506f6f6c536861726560901b6030830152601e82528187019792949192906001600160401b038911848a1017620001805760248984938193828c52875190206321f8a72160e01b835260448801525afa918215620001755760009262000131575b50506200011094955016906002541617600255620001d4565b6000805460ff60a01b1916600160a01b1790555161258a90816200021c8239f35b813d83116200016d575b62000147818a6200019b565b810103126200016a575062000161620001109495620001bf565b859438620000f7565b80fd5b503d6200013b565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200018057604052565b51906001600160a01b03821682036200019657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c908163168a482214611021575080631865c57d146110035780631e83409a14610fd65780632def662014610f5a578063378de45b14610f135780633a4b66f114610eee578063441a3e7014610d0057806345b58fe414610ca65780634ad02ef114610c3f5780634b2b4e3614610b185780634e71d92d14610afe57806354fd4d5014610adb57806355ec447f14610a11578063678e300a146109f1578063715018a6146109935780638620891c146107c35780638da5cb5b1461079b5780639278e71414610779578063cfb5a5f814610750578063e2664e49146106fe578063e4fc6b6d146106e5578063e6b1a3ae146105c4578063e920eec01461058c578063f2fde38b146104c05763f9faa1040361001257826003193601126104225761016761015161251c565b61016161015c6111d1565b612524565b146111fe565b3415610488578051916020926101bf6801bc16d674ec8000006101b8868401936101b3816101953088611243565b03956101a9601f1997888101855284611193565b34925190206112f2565b611271565b1115611294565b825190848201671d1bdad95b8b9a5960c21b92838252600881526101e28161115b565b5190206001546001600160a01b03939188918516803b15610422576044839289519485938492632b6cd4f760e21b84528b840152600160248401525af1801561046f579061024e9291610479575b508551878101918252600881526102468161115b565b5190206112f2565b90868551878101906d19195c1bdcda5d0b985b5bdd5b9d60921b825284602e820152602e815261027d81611177565b5190208460015416803b15610422576044839289519485938492637152429d60e11b84528b8401523460248401525af1801561046f57610456575b5090869392916102ea86518881016102e0826102d43084611243565b03858101845283611193565b34915190206113bf565b85516a1a591ccb9a5b8b9c1bdbdb60aa1b8882019081523060601b6001600160601b031916600b8201529161032b9082601f85015b03908101835282611193565b519020826001541690813b15610452578591604483928951948593849263785f002b60e11b84528a8401528760248401525af1801561044857908591610430575b50506103a690855190878201906a1c1bdbdb0b999bdc8b9a5960aa1b8252602b830152602b825261039c82611177565b309151902061136b565b6002541690813b1561042257829160248392865194859384926335313c2160e11b845233908401525af180156104265761040e575b50507f1ed12c9855bd60407f7650e01c62ee4f0f40744b5b17983eec349a2b4e89981a918151903482523390820152a180f35b61041790611131565b6104225782386103db565b8280fd5b83513d84823e3d90fd5b61043990611131565b61044457833861036c565b8380fd5b86513d87823e3d90fd5b8580fd5b61046590979194939297611131565b95909192386102b8565b86513d8a823e3d90fd5b61048290611131565b38610230565b906020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b5034610422576020366003190112610422576001600160a01b0382358181169390849003610588578454918216926104f9338514611495565b84156105365750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8480fd5b83346105c1576105be61059e366110c7565b956105b960018060a09894989795971b038a54163314611495565b611a76565b80f35b80fd5b509190346106e15760203660031901126106e1578035906001600160a01b03808316908184036105885760249161060086928354163314611495565b865163516b636d60e11b815260018582015292839182905afa9081156106d75784916106b5575b50511561067b57506105be91925160208101907f706f6f6c2e73706563696669632e6172742e616464726573730000000000000082523060601b6039820152602d815261067381611177565b51902061136b565b606490602085519162461bcd60e51b835282015260146024820152731a5b9d985b1a5908185c9d0818dbdb9d1c9858dd60621b6044820152fd5b6106d191503d8086833e6106c98183611193565b8101906124e5565b38610627565b85513d86823e3d90fd5b5080fd5b83346105c157806003193601126105c1576105be611f39565b8382346106e157816003193601126106e15761072460018060a01b038354163314611495565b8180808047818115610747575b3390f11561073d575080f35b51903d90823e3d90fd5b506108fc610731565b5082346105c15760203660031901126105c1575061077260209247903561230b565b9051908152f35b83346105c157806003193601126105c157610792611f39565b6105be33612147565b8382346106e157816003193601126106e157905490516001600160a01b039091168152602090f35b509190602090816003193601126104225780359060018060a01b036024848260025416885192838092634f558e7960e01b825288888301525afa90811561098957869161095c575b5015610925576108468651858101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b815261083e81611177565b51902061143b565b309116036108ed57506102e06105be939461086261015161251c565b6108d18151936108a46801bc16d674ec8000006101b861089d898901896108893083611243565b0399610246601f199b8c8101835282611193565b3490611271565b825190868201906d19195c1bdcda5d0b985b5bdd5b9d60921b8252602e830152602e82526102e082611177565b5192830191836108e13085611243565b03908101845283611193565b845162461bcd60e51b815290810183905260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b855162461bcd60e51b815280830185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b61097c9150853d8711610982575b6109748183611193565b810190611404565b3861080b565b503d61096a565b87513d88823e3d90fd5b83346105c157806003193601126105c157805481906001600160a01b038116906109be338314611495565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346105c15760203660031901126105c15750610772602092356123b0565b5034610422578260031936011261042257610a2a611f39565b610a326121d5565b91835b8351811015610ad757610a488185611f0f565b5160025484516331a9108f60e11b815284810192909252602091908290829060249082906001600160a01b03165afa918215610acd5791610a9691610a9b94938992610aa0575b5050612147565b611f00565b610a35565b610abf9250803d10610ac6575b610ab78183611193565b81019061141c565b3880610a8f565b503d610aad565b85513d89823e3d90fd5b8480f35b8382346106e157816003193601126106e15760ff6020925460a01c169051908152f35b83346105c157806003193601126105c1576105be33612147565b503461042257610b27366110c7565b92610b4260018060a09998999594951b038b54163314611495565b875194610b9b6020870187610b7f30836021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b0397610b93601f19998a8101835282611193565b51902061160f565b15610c2457505050505090610bca610bd9928551610bc260208201928261031f30866114e0565b519020611572565b60208151910120923691611506565b6020815191012003610bef5750506105be611780565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b939750935093610c379750949094611a76565b6105be611780565b8382346106e157816003193601126106e15780610c8f610ca2925160208101907376616c696461746f722e7075626c69632e6b657960601b82523060601b603482015260288152610bc281611177565b905191829160208352602083019061106f565b0390f35b8382346106e157816003193601126106e157610cc06121d5565b815192839260208080860192818752855180945286019401925b828110610ce957505050500390f35b835185528695509381019392810192600101610cda565b509034610422578160031936011261042257803560243591610d2061251c565b610d2b61015c61175e565b14610eab5760025484516331a9108f60e11b8152828101849052602093916001600160a01b03919085908290602490829086165afa908115610ea1578891610e84575b50163303610e525784519184610da98585016d19195c1bdcda5d0b985b5bdd5b9d60921b9586825285602e820152602e815261024681611177565b10610e18575083610e0581889695610de38897889788978c5190858201928352602e820152602e8152610ddb81611177565b519020611ebb565b885190810190610ddb81610df73085611243565b03601f198101835282611193565b818115610747573390f11561073d575080f35b855162461bcd60e51b815290810184905260146024820152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b5060649184519162461bcd60e51b8352820152600d60248201526c3737ba103a34329037bbb732b960991b6044820152fd5b610e9b9150853d8711610ac657610ab78183611193565b38610d6e565b87513d8a823e3d90fd5b606490602085519162461bcd60e51b8352820152601b60248201527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152fd5b83346105c157806003193601126105c157610c3760018060a01b038254163314611495565b5082346105c15760203660031901126105c157506107726020928251848101916d19195c1bdcda5d0b985b5bdd5b9d60921b835235602e820152602e815261024681611177565b8382346106e157816003193601126106e1576105be90610f8460018060a01b038454163314611495565b60644711610fc9575b80516020810190610fa281610df73085611730565b519020905190610fb18261115b565b6006825265195e1a5d195960d21b6020830152611a20565b610fd1611f39565b610f8d565b5050346106e15760203660031901126106e157356001600160a01b03811681036106e1576105be90612147565b8382346106e157816003193601126106e157610ca290610c8f61247a565b8285346105c157806003193601126105c157506107728260208094019061024681610df73085611243565b60005b83811061105f5750506000910152565b818101518382015260200161104f565b906020916110888151809281855285808601910161104c565b601f01601f1916010190565b9181601f840112156110c25782359167ffffffffffffffff83116110c257602083818601950101116110c257565b600080fd5b9060806003198301126110c25767ffffffffffffffff6004358181116110c257836110f491600401611094565b939093926024358381116110c2578261110f91600401611094565b939093926044359182116110c25761112991600401611094565b909160643590565b67ffffffffffffffff811161114557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761114557604052565b6060810190811067ffffffffffffffff82111761114557604052565b90601f8019910116810190811067ffffffffffffffff82111761114557604052565b67ffffffffffffffff811161114557601f01601f191660200190565b604051906111de8261115b565b6011825270616363657074696e674465706f7369747360781b6020830152565b1561120557565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b9190820180921161127e57565b634e487b7160e01b600052601160045260246000fd5b1561129b57565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561135f57600091611331575090565b906020823d8211611357575b8161134a60209383611193565b810103126105c157505190565b3d915061133d565b6040513d6000823e3d90fd5b6001546001600160a01b0392908316803b156110c25760009283604492604051968795869463ca446dd960e01b865260048601521660248401525af1801561135f576113b45750565b6113bd90611131565b565b6001546001600160a01b031691823b156110c2576044600092836040519586948593632b6cd4f760e21b8552600485015260248401525af1801561135f576113b45750565b908160209103126110c2575180151581036110c25790565b908160209103126110c257516001600160a01b03811681036110c25790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561135f5760009161147a575090565b611492915060203d8111610ac657610ab78183611193565b90565b1561149c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b929192611512826111b5565b916115206040519384611193565b8294818452818301116110c2578281602093846000960137010152565b9092919261154a816111b5565b916115586040519384611193565b8294828452828201116110c25760206113bd93019061104c565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa9182156116025781926115b357505090565b909291503d8084833e6115c68183611193565b8101906020818303126104445780519067ffffffffffffffff8211610588570181601f820112156104445761149292935060208151910161153d565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa90811561135f5760009161164e575090565b611492915060203d8111610982576109748183611193565b1561166d57565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b602a91757769746864726177616c5f63726564656e7469616c7360501b82526001600160601b03199060601b1660168201520190565b601d91687369676e617475726560b81b82526001600160601b03199060601b1660098201520190565b6025917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82526001600160601b03199060601b1660118201520190565b6022916d636f6e74726163742e737461746560901b82526001600160601b03199060601b16600e8201520190565b6040519061176b8261115b565b60068252651cdd185ad95960d21b6020830152565b6801bc16d674ec800000908147106119ea576117ae61179d61251c565b6117a861015c6111d1565b14611666565b6040805160206117d9818301836117c530836114e0565b0393610bc2601f1995868101835282611193565b6117fc845183810190610bc2816117f030856116a0565b03878101835282611193565b92611820855184810190610bc28161181430856116d6565b03858101835282611193565b968551848101906118358161181430856116ff565b5190206001548751635376ab1f60e11b8152600481019290925290926001600160a01b039186908590602490829086165afa9384156119df576000946119b0575b506118f16118cb8951888101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b60398201526028815261083e81611177565b9189516118e0898201928261031f3086611730565b5190206118eb61175e565b90611a20565b1694853b156110c25760009361193f9361194e61192c938a519c8d97889687966304512a2360e31b885260806004890152608488019061106f565b600319938488830301602489015261106f565b9185830301604486015261106f565b9060648301520391865af19485156119a5577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611996575b5082519182523390820152a1565b61199f90611131565b38611988565b83513d6000823e3d90fd5b90938682813d83116119d8575b6119c78183611193565b810103126105c15750519238611876565b503d6119bd565b88513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b6001546001600160a01b031691823b156110c257611a6592600092836040518096819582946306e8995560e41b8452600484015260406024840152604483019061106f565b03925af1801561135f576113b45750565b93909592949194600160f81b30019586301161127e576040978851602098898201908152898252611aa68261115b565b611ab1368686611506565b8a81519101209151902003611ded57611af58951898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b603082015260248152610b9381611177565b15611ce457611b0261251c565b8951611b0d8161115b565b60158152746177616974696e6756616c696461746f72496e666f60581b8a820152611b3790612524565b14611b4190611666565b88519688880188611b5230836114e0565b0398601f19998a81018252611b679082611193565b519020913690611b7692611506565b611b7f91611e31565b87518781019080611b9030846116a0565b038881018252611ba09082611193565b519020913690611baf92611506565b611bb891611e31565b85518581019080611bc930846116d6565b038681018252611bd99082611193565b519020913690611be892611506565b611bf191611e31565b83518381019080611c0230846116ff565b038481018252611c129082611193565b51902090611c1f91611e76565b82518281019181611c303085611730565b039081018252611c409082611193565b519020611c4b6111d1565b611c5491611a20565b81516c1d985b1a59185d1bdc8b9cd95d609a1b9181019182523060601b6001600160601b031916600d830152611c8d8160218401610df7565b5190206001546001600160a01b03169190823b156110c257600092604484928451958693849263abfdcced60e01b84526004840152600160248401525af1908115611cda57506113b45750565b513d6000823e3d90fd5b611cef96959661251c565b611cf76111d1565b611d0090612524565b14611d0a90611666565b88519588870187611d1b30836114e0565b0397601f19988981018252611d309082611193565b519020913690611d3f92611506565b611d4891611e31565b87518781019080611d5930846116a0565b038781018252611d699082611193565b519020913690611d7892611506565b611d8191611e31565b85518581019080611d9230846116d6565b038581018252611da29082611193565b519020913690611db192611506565b611dba91611e31565b83518381019181611dcb30856116ff565b039081018252611ddb9082611193565b51902090611de891611e76565b611c54565b885162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b6001546001600160a01b031691823b156110c257611a659260009283604051809681958294630b8a342160e21b8452600484015260406024840152604483019061106f565b6001546001600160a01b031691823b156110c25760446000928360405195869485936309d23b6160e31b8552600485015260248401525af1801561135f576113b45750565b6001546001600160a01b031691823b156110c257604460009283604051958694859363ebb9d8c960e01b8552600485015260248401525af1801561135f576113b45750565b600019811461127e5760010190565b8051821015611f235760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b611f4161251c565b611f4c61015c61175e565b03612102574760648111156120be57604090815190602090818301926f636f6e74726163742e6164647265737360801b8452694672656e73436c61696d60b01b6030820152601a8152611f9e8161115b565b519092206001600160a01b0392908390611fb79061143b565b1692611fc16121d5565b9560005b875181101561209657611fd88189611f0f565b5160248685600254168a51928380926331a9108f60e11b82528660048301525afa90811561208b5791610a969187612065959460009261206a575b5061201e919261230b565b908a5161205d81610df78c820194856024916f18db185a5b58589b194b985b5bdd5b9d60821b82526001600160601b03199060601b1660108201520190565b5190206113bf565b611fc5565b61201e9250612085908b3d8d11610ac657610ab78183611193565b91612013565b89513d6000823e3d90fd5b50955050600080938193509181928282156120b5575bf115611cda5750565b506108fc6120ac565b606460405162461bcd60e51b815260206004820152602060248201527f6d696e696d756d206f66203130302077656920746f20646973747269627574656044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b6040519060208201916f636f6e74726163742e6164647265737360801b8352694672656e73436c61696d60b01b6030820152601a81526121868161115b565b519091206001600160a01b039190829061219f9061143b565b1691823b156110c2576024600092836040519586948593630f41a04d60e11b85521660048401525af1801561135f576113b45750565b6040516a1a591ccb9a5b8b9c1bdbdb60aa1b60208083019182523060601b6001600160601b031916602b8401529161221081603f8101610df7565b5190206001546040516378267eb560e11b81526004810192909252600092908390839060249082906001600160a01b03165afa9283156122ff578093612257575b50505090565b909192503d8082853e61226a8185611193565b83019082848303126105c157835167ffffffffffffffff94858211610422570182601f820112156106e15780519485116122eb578460051b91604051956122b386850188611193565b865284808701938301019384116105c157508301905b8282106122dc5750505050388080612251565b815181529083019083016122c9565b634e487b7160e01b82526041600452602482fd5b604051903d90823e3d90fd5b61233d9060405160208101916d19195c1bdcda5d0b985b5bdd5b9d60921b8352602e820152602e815261024681611177565b612356604051602081019061024681610df73085611243565b9181156123a85781810291818304149015171561127e5781156123925704600181111561238c57600019810190811161127e5790565b50600090565b634e487b7160e01b600052601260045260246000fd5b505050600090565b6002546040516331a9108f60e11b81526004810183905290602090829060249082906001600160a01b03165afa801561135f576124309160009161245c575b506040516f18db185a5b58589b194b985b5bdd5b9d60821b6020820190815260609290921b6001600160601b03191660308201526102468160448101610df7565b9061243961251c565b61244461015c6111d1565b0361244d575090565b906101b361149292479061230b565b612474915060203d8111610ac657610ab78183611193565b386123ef565b604051602081019061249081610df73085611730565b519020600154604051634c373c8d60e11b81526004810192909252600090829060249082906001600160a01b03165afa90811561135f576000916124d2575090565b611492913d8091833e6106c98183611193565b6020818303126110c25780519067ffffffffffffffff82116110c257019080601f830112156110c25781516114929260200161153d565b61252461247a565b60405161254e60208281612541818301968781519384920161104c565b8101038084520182611193565b5190209056fea26469706673582212209027d55b161af060055a3e86bac1830c2a4c187ed339f6f4d91cd8fd14d07ce664736f6c63430008110033a26469706673582212201da3275c485cf7285f473f73b808bd89a5361d84d59d4f4574626618ff1428af64736f6c63430008110033",
    "sourceMap": "199:1116:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;589:37;;;;;;;;;;;;;;;;;;;;;;199:1116;;;;;;;;;;;;;589:37;;;;;;;;;;199:1116;;;;706:4;199:1116;;650:53;;;;199:1116;-1:-1:-1;;;199:1116:10;;;;;;;;;;;;;;650:53;;;;;;:::i;:::-;199:1116;640:64;;706:4;:::i;:::-;845;199:1116;;785:57;;;199:1116;-1:-1:-1;;;199:1116:10;;;;;;;785:57;;;;;;:::i;845:4::-;199:1116;;874:58;;;199:1116;-1:-1:-1;;;199:1116:10;;;;;;;874:58;;;;;:::i;:::-;199:1116;864:69;;199:1116;;;;;;6422:34:2;;;;;;199:1116:10;;;;;;;;;;;;;;;6422:34:2;;199:1116:10;6422:34:2;;199:1116:10;;;;;6422:34:2;;;;;;;;;1224:48:10;6422:34:2;;;;;;;199:1116:10;-1:-1:-1;957:257:10;;;199:1116;;-1:-1:-1;;;1004:56:10;;;199:1116;;;;;;;-1:-1:-1;;199:1116:10;;;;;984:103;;1004:56;199:1116;;;;1004:56;;650:53;;1004:56;;;;;;:::i;:::-;199:1116;994:67;;199:1116;;;;;;:::i;:::-;;;;-1:-1:-1;;;199:1116:10;;;;984:103;:::i;:::-;199:1116;;1253:10;;199:1116;;;;;;1224:48;199:1116;;;;;957:257;199:1116;;-1:-1:-1;;;1128:56:10;;;199:1116;;;;;;;-1:-1:-1;;199:1116:10;;;;;1108:99;;1128:56;199:1116;;;;1128:56;199:1116;1128:56;199:1116;1118:67;;199:1116;;;;;;:::i;:::-;;;;-1:-1:-1;;;199:1116:10;;;;1108:99;:::i;:::-;957:257;;6422:34:2;;;;:::i;:::-;;;;;199:1116:10;;;;;;;;;;6422:34:2;199:1116:10;;;589:37;199:1116;;;;;;;;;;;589:37;-1:-1:-1;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;650:53;;;199:1116;;;;;;;;;;;;;;;;:::o;6150:105:2:-;6216:12;199:1116:10;;6150:105:2;;6216:12;;199:1116:10;;-1:-1:-1;;;;;199:1116:10;;6216:36:2;;;;;199:1116:10;;;;;;;;;;;6216:36:2;;;;;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:53;;;199:1116;;;;;6216:36:2;;;;;;;;;;;;;6150:105;:::o;6216:36::-;;;;:::i;:::-;6150:105::o;6216:36::-;199:1116:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;199:1116:10;;-1:-1:-1;199:1116:10;;;6367:92:2;6422:12;199:1116:10;;;;;;;;;;;6422:34:2;;;;;;199:1116:10;;;;;;;;;;;;;;;6422:34:2;;;;;199:1116:10;;;;;;6422:34:2;;;;;;;;;;6367:92;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "create(address,bool)": "319e9090",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"_frensStorage\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Create\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"validatorLocked\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolFactory.sol\":\"StakingPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0xaffd9e619970f265c9d72f70e35802b322918a586d627a4f6c5034b177f3052b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2fb26bfaa590f6c58b86c995865fbb3c73e693031692c16af42420d529fac20\",\"dweb:/ipfs/QmcYi9xc2YDsrBdnKTSQpxH3onzeo1qzSm4JBEGiFYZAyL\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f\",\"dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655\",\"dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2\",\"dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278\",\"dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "_frensStorage",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Create",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "validatorLocked",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/StakingPoolFactory.sol": "StakingPoolFactory"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0xaffd9e619970f265c9d72f70e35802b322918a586d627a4f6c5034b177f3052b",
        "urls": [
          "bzz-raw://f2fb26bfaa590f6c58b86c995865fbb3c73e693031692c16af42420d529fac20",
          "dweb:/ipfs/QmcYi9xc2YDsrBdnKTSQpxH3onzeo1qzSm4JBEGiFYZAyL"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9",
        "urls": [
          "bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f",
          "dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f",
        "urls": [
          "bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655",
          "dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6",
        "urls": [
          "bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2",
          "dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a",
        "urls": [
          "bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278",
          "dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/StakingPoolFactory.sol",
    "id": 4209,
    "exportedSymbols": {
      "Context": [
        30072
      ],
      "FrensBase": [
        836
      ],
      "IDepositContract": [
        4303
      ],
      "IERC165": [
        30311
      ],
      "IERC721": [
        29339
      ],
      "IERC721Enumerable": [
        29726
      ],
      "IFrensArt": [
        4450
      ],
      "IFrensClaim": [
        4461
      ],
      "IFrensPoolShare": [
        4536
      ],
      "IFrensStorage": [
        4742
      ],
      "IStakingPool": [
        5045
      ],
      "IStakingPoolFactory": [
        5057
      ],
      "Ownable": [
        28389
      ],
      "StakingPool": [
        4065
      ],
      "StakingPoolFactory": [
        4208
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1284:10",
    "nodes": [
      {
        "id": 4067,
        "nodeType": "PragmaDirective",
        "src": "32:31:10",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 4068,
        "nodeType": "ImportDirective",
        "src": "97:27:10",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "./StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4209,
        "sourceUnit": 4066,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4069,
        "nodeType": "ImportDirective",
        "src": "125:25:10",
        "nodes": [],
        "absolutePath": "contracts/FrensBase.sol",
        "file": "./FrensBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4209,
        "sourceUnit": 837,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4070,
        "nodeType": "ImportDirective",
        "src": "151:46:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "./interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4209,
        "sourceUnit": 5058,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4208,
        "nodeType": "ContractDefinition",
        "src": "199:1116:10",
        "nodes": [
          {
            "id": 4082,
            "nodeType": "EventDefinition",
            "src": "266:94:10",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e",
            "name": "Create",
            "nameLocation": "272:6:10",
            "parameters": {
              "id": 4081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4076,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "300:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4082,
                  "src": "284:31:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4078,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "329:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4082,
                  "src": "321:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4077,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4080,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "350:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4082,
                  "src": "342:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "278:81:10"
            }
          },
          {
            "id": 4096,
            "nodeType": "FunctionDefinition",
            "src": "364:87:10",
            "nodes": [],
            "body": {
              "id": 4095,
              "nodeType": "Block",
              "src": "429:22:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 4093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4091,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "435:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 4092,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "435:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 4094,
                  "nodeType": "ExpressionStatement",
                  "src": "435:11:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4088,
                    "name": "_frensStorage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4085,
                    "src": "415:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$4742",
                      "typeString": "contract IFrensStorage"
                    }
                  }
                ],
                "id": 4089,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4087,
                  "name": "FrensBase",
                  "nameLocations": [
                    "405:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "405:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "405:24:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 4086,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4085,
                  "mutability": "mutable",
                  "name": "_frensStorage",
                  "nameLocation": "390:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4096,
                  "src": "376:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$4742",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 4084,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4083,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "376:13:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4742,
                      "src": "376:13:10"
                    },
                    "referencedDeclaration": 4742,
                    "src": "376:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$4742",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:29:10"
            },
            "returnParameters": {
              "id": 4090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:10"
            },
            "scope": 4208,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4207,
            "nodeType": "FunctionDefinition",
            "src": "455:856:10",
            "nodes": [],
            "body": {
              "id": 4206,
              "nodeType": "Block",
              "src": "557:754:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    4108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4108,
                      "mutability": "mutable",
                      "name": "stakingPool",
                      "nameLocation": "575:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 4206,
                      "src": "563:23:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4065",
                        "typeString": "contract StakingPool"
                      },
                      "typeName": {
                        "id": 4107,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4106,
                          "name": "StakingPool",
                          "nameLocations": [
                            "563:11:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4065,
                          "src": "563:11:10"
                        },
                        "referencedDeclaration": 4065,
                        "src": "563:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4065",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4115,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4112,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "605:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4113,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "613:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensStorage_$4742",
                          "typeString": "contract IFrensStorage"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IFrensStorage_$4742",
                          "typeString": "contract IFrensStorage"
                        }
                      ],
                      "id": 4111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "589:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IFrensStorage_$4742_$returns$_t_contract$_StakingPool_$4065_$",
                        "typeString": "function (address,contract IFrensStorage) returns (contract StakingPool)"
                      },
                      "typeName": {
                        "id": 4110,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4109,
                          "name": "StakingPool",
                          "nameLocations": [
                            "593:11:10"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4065,
                          "src": "593:11:10"
                        },
                        "referencedDeclaration": 4065,
                        "src": "593:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4065",
                          "typeString": "contract StakingPool"
                        }
                      }
                    },
                    "id": 4114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "563:63:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "706f6f6c2e657869737473",
                                "id": 4120,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "667:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e7aaece09fa4791cde3a855fe5360cc9e92113156f25db4328faea689f82419",
                                  "typeString": "literal_string \"pool.exists\""
                                },
                                "value": "pool.exists"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4123,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4108,
                                    "src": "690:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 4122,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "682:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4121,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "682:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "682:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2e7aaece09fa4791cde3a855fe5360cc9e92113156f25db4328faea689f82419",
                                  "typeString": "literal_string \"pool.exists\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4118,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "650:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "654:12:10",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "650:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:53:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4117,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "640:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "640:64:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "706:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4116,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "632:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 4128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:79:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4129,
                  "nodeType": "ExpressionStatement",
                  "src": "632:79:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e657869737473",
                                "id": 4134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "802:17:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0bee25abf9dd4d7db1b6a26ed35c16c69cd61a59f46569898d3d99df8a574317",
                                  "typeString": "literal_string \"contract.exists\""
                                },
                                "value": "contract.exists"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4137,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4108,
                                    "src": "829:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 4136,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "821:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4135,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "821:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "821:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0bee25abf9dd4d7db1b6a26ed35c16c69cd61a59f46569898d3d99df8a574317",
                                  "typeString": "literal_string \"contract.exists\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4132,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "785:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4133,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "789:12:10",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "785:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "785:57:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4131,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "775:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "775:68:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 4141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4130,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "767:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 4142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:83:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4143,
                  "nodeType": "ExpressionStatement",
                  "src": "767:83:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "76616c696461746f722e6c6f636b6564",
                                "id": 4148,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "891:18:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_abd7ea9415d7628743a805e41423332e230d8f0ad72e4fa8e7415d9adbd80fc3",
                                  "typeString": "literal_string \"validator.locked\""
                                },
                                "value": "validator.locked"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 4151,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4108,
                                    "src": "919:11:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4065",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 4150,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "911:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 4149,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "911:7:10",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4152,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "911:20:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_abd7ea9415d7628743a805e41423332e230d8f0ad72e4fa8e7415d9adbd80fc3",
                                  "typeString": "literal_string \"validator.locked\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 4146,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "874:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 4147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "878:12:10",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "874:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 4153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "874:58:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4145,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "864:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 4154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:69:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 4155,
                        "name": "validatorLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4100,
                        "src": "935:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4144,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "856:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 4156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:95:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4157,
                  "nodeType": "ExpressionStatement",
                  "src": "856:95:10"
                },
                {
                  "condition": {
                    "id": 4158,
                    "name": "validatorLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4100,
                    "src": "960:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4188,
                    "nodeType": "Block",
                    "src": "1100:114:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "636f6e74726163742e7374617465",
                                      "id": 4178,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1145:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      "value": "contract.state"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 4181,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4108,
                                          "src": "1171:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$4065",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$4065",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 4180,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1163:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4179,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1163:7:10",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4182,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1163:20:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4176,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1128:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1132:12:10",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1128:16:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1128:56:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4175,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1118:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4184,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1118:67:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "616363657074696e674465706f73697473",
                              "id": 4185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1187:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb40db457b263a056d9662810bc3d59355192492c2fc1274da04fbb78484172b",
                                "typeString": "literal_string \"acceptingDeposits\""
                              },
                              "value": "acceptingDeposits"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb40db457b263a056d9662810bc3d59355192492c2fc1274da04fbb78484172b",
                                "typeString": "literal_string \"acceptingDeposits\""
                              }
                            ],
                            "id": 4174,
                            "name": "setString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "1108:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,string memory)"
                            }
                          },
                          "id": 4186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:99:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4187,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:99:10"
                      }
                    ]
                  },
                  "id": 4189,
                  "nodeType": "IfStatement",
                  "src": "957:257:10",
                  "trueBody": {
                    "id": 4173,
                    "nodeType": "Block",
                    "src": "976:118:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "636f6e74726163742e7374617465",
                                      "id": 4163,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1021:16:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      "value": "contract.state"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 4166,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4108,
                                          "src": "1047:11:10",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$4065",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$4065",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 4165,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1039:7:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 4164,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1039:7:10",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4167,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1039:20:10",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 4161,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1004:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 4162,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1008:12:10",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1004:16:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 4168,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1004:56:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 4160,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "994:9:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 4169,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "994:67:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "6177616974696e6756616c696461746f72496e666f",
                              "id": 4170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1063:23:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7cfdf6f805bf7a834dd5e8169d1f6bc72c63f63c126de09f1ba91782abcfa23d",
                                "typeString": "literal_string \"awaitingValidatorInfo\""
                              },
                              "value": "awaitingValidatorInfo"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7cfdf6f805bf7a834dd5e8169d1f6bc72c63f63c126de09f1ba91782abcfa23d",
                                "typeString": "literal_string \"awaitingValidatorInfo\""
                              }
                            ],
                            "id": 4159,
                            "name": "setString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "984:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,string memory)"
                            }
                          },
                          "id": 4171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:103:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4172,
                        "nodeType": "ExpressionStatement",
                        "src": "984:103:10"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4193,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4108,
                            "src": "1239:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$4065",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$4065",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 4192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1231:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4191,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1231:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1231:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 4195,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1253:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1257:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1253:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4197,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "1265:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4190,
                      "name": "Create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4082,
                      "src": "1224:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 4198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4199,
                  "nodeType": "EmitStatement",
                  "src": "1219:53:10"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 4202,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4108,
                            "src": "1293:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$4065",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$4065",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 4201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1285:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1285:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:20:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 4204,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1284:22:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4105,
                  "id": 4205,
                  "nodeType": "Return",
                  "src": "1278:28:10"
                }
              ]
            },
            "baseFunctions": [
              5056
            ],
            "functionSelector": "319e9090",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "464:6:10",
            "overrides": {
              "id": 4102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "531:8:10"
            },
            "parameters": {
              "id": 4101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4098,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "484:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "476:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4100,
                  "mutability": "mutable",
                  "name": "validatorLocked",
                  "nameLocation": "502:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "497:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:53:10"
            },
            "returnParameters": {
              "id": 4105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4207,
                  "src": "548:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:9:10"
            },
            "scope": 4208,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4071,
              "name": "IStakingPoolFactory",
              "nameLocations": [
                "230:19:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5057,
              "src": "230:19:10"
            },
            "id": 4072,
            "nodeType": "InheritanceSpecifier",
            "src": "230:19:10"
          },
          {
            "baseName": {
              "id": 4073,
              "name": "FrensBase",
              "nameLocations": [
                "251:9:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 836,
              "src": "251:9:10"
            },
            "id": 4074,
            "nodeType": "InheritanceSpecifier",
            "src": "251:9:10"
          }
        ],
        "canonicalName": "StakingPoolFactory",
        "contractDependencies": [
          4065
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4208,
          836,
          5057
        ],
        "name": "StakingPoolFactory",
        "nameLocation": "208:18:10",
        "scope": 4209,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 10
}