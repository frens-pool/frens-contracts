{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IFrensStorage",
          "name": "_frensStorage",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "Create",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "validatorLocked",
          "type": "bool"
        }
      ],
      "name": "create",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60803461008557601f61288d38819003918201601f19168301916001600160401b0383118484101761008a5780849260209460405283398101031261008557516001600160a01b038116810361008557600080546001600160a81b03191660089290921b610100600160a81b03169190911760011790556040516127ec90816100a18239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c908163319e90901461005a57506354fd4d501461003857600080fd5b3461005657816003193601126100565760ff60209254169051908152f35b5080fd5b8383346100565780600319360112610056576004356001600160a01b038181169182900361033d57602435908115159485830361033a578054966122f98082019082821067ffffffffffffffff83111761032657879183916104be83398781528560209b60081c168b82015203019082f095861561031a57828716966101208751918a8301906a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b169283602b820152601f81526101188161036b565b519020610470565b61015187518a8101906e636f6e74726163742e65786973747360881b825283602f8201526023815261011881610387565b8651898101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b835260308201526024815261017f81610387565b51902092825460081c1692833b15610316579060448392838951968794859363abfdcced60e01b8552600485015260248401525af190811561030b5750927fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e92859287956102fc575b50156102825781516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102719161023c81602284015b03601f1981018352826103a3565b51902083519061024b8261036b565b60158252746177616974696e6756616c696461746f72496e666f60581b8a8301526103c5565b81519033825287820152a251908152f35b81516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102f7916102c6816022840161022e565b5190208351906102d58261036b565b6011825270616363657074696e674465706f7369747360781b8a8301526103c5565b610271565b61030590610341565b886101e8565b8551903d90823e3d90fd5b8280fd5b508451903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b80fd5b8380fd5b67ffffffffffffffff811161035557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761035557604052565b6060810190811067ffffffffffffffff82111761035557604052565b90601f8019910116810190811067ffffffffffffffff82111761035557604052565b600080549192909160081c6001600160a01b031690813b15610316579282916040519485926306e8995560e41b8452600484015260406024840152805190816044850152845b82811061045557505083606484838383839684010152601f801991011681010301925af1908115610449575061043e5750565b61044790610341565b565b604051903d90823e3d90fd5b602081830181015160648a840101528796508895500161040b565b60009060018060a01b03825460081c1690813b1561031657829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610449575061043e575056fe608060408181523462000196578082620022f980380380916200002382856200019b565b83398101031262000196576200003982620001bf565b6020928301516001600160a01b03808216949185900362000196576200005f33620001d4565b600180546001600160a01b0319908116871790915584516f636f6e74726163742e6164647265737360801b8185019081526d4672656e73506f6f6c536861726560901b6030830152601e82528187019792949192906001600160401b038911848a1017620001805760248984938193828c52875190206321f8a72160e01b835260448801525afa918215620001755760009262000131575b50506200011094955016906002541617600255620001d4565b6000805460ff60a01b1916600160a01b179055516120dd90816200021c8239f35b813d83116200016d575b62000147818a6200019b565b810103126200016a575062000161620001109495620001bf565b859438620000f7565b80fd5b503d6200013b565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200018057604052565b51906001600160a01b03821682036200019657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c908163168a482214610dfc575080631865c57d14610dde5780632def662014610d62578063378de45b14610d1b5780633a4b66f114610cf6578063441a3e7014610af857806345b58fe414610a9e5780634ad02ef114610a375780634b2b4e361461091057806354fd4d50146108ed578063678e300a146108cd578063715018a61461086f5780638620891c1461069f5780638da5cb5b14610677578063cfb5a5f81461064e578063e2664e49146105f8578063e4fc6b6d146105df578063e920eec0146105a7578063f2fde38b146104df5763f9faa10403610012578260031936011261041f5761013061011a61206f565b61012a610125610fac565b612077565b14610fd9565b34156104a7578051916020926101886801bc16d674ec8000006101818684019361017c8161015e308861101e565b0395610172601f1997888101855284610f6e565b34925190206110cd565b61104c565b111561106f565b825190848201671d1bdad95b8b9a5960c21b92838252600881526101ab81610f36565b5190206001546001600160a01b03939188918516803b1561041f576044839289519485938492632b6cd4f760e21b84528b840152600160248401525af1801561048e57906102179291610498575b5085518781019182526008815261020f81610f36565b5190206110cd565b90868551878101906d19195c1bdcda5d0b985b5bdd5b9d60921b825284602e820152602e815261024681610f52565b5190208460015416803b1561041f576044839289519485938492637152429d60e11b84528b8401523460248401525af1801561048e57610475575b5090869392916102b386518881016102a98261029d308461101e565b03858101845283610f6e565b3491519020611146565b85516a1a591ccb9a5b8b9c1bdbdb60aa1b8882019081523060601b6001600160601b031916600b820152916102f49082601f85015b03908101835282610f6e565b519020826001541690813b15610471578591604483928951948593849263785f002b60e11b84528a8401528760248401525af180156104675790859161044f575b50508451868101916a1c1bdbdb0b999bdc8b9a5960aa1b8352602b820152602b815261036081610f52565b519020816001541690813b1561044b578491604483928851948593849263ca446dd960e01b8452898401523060248401525af180156104415790849161042d575b50506002541690813b1561041f57829160248392865194859384926335313c2160e11b845233908401525af180156104235761040b575b50507f1ed12c9855bd60407f7650e01c62ee4f0f40744b5b17983eec349a2b4e89981a918151903482523390820152a180f35b61041490610f0c565b61041f5782386103d8565b8280fd5b83513d84823e3d90fd5b61043690610f0c565b61041f5782386103a1565b85513d86823e3d90fd5b8480fd5b61045890610f0c565b610463578338610335565b8380fd5b86513d87823e3d90fd5b8580fd5b61048490979194939297610f0c565b9590919238610281565b86513d8a823e3d90fd5b6104a190610f0c565b386101f9565b906020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b503461041f57602036600319011261041f576001600160a01b038235818116939084900361044b57845491821692610518338514611227565b84156105555750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b83346105dc576105d96105b936610ea2565b956105d460018060a09894989795971b038a54163314611227565b611808565b80f35b80fd5b83346105dc57806003193601126105dc576105d9611c92565b83823461064a578160031936011261064a5761061e60018060a01b038354163314611227565b8180808047818115610641575b3390f115610637575080f35b51903d90823e3d90fd5b506108fc61062b565b5080fd5b5082346105dc5760203660031901126105dc5750610670602092479035611f47565b9051908152f35b83823461064a578160031936011261064a57905490516001600160a01b039091168152602090f35b5091906020908160031936011261041f5780359060018060a01b036024848260025416885192838092634f558e7960e01b825288888301525afa908115610865578691610838575b5015610801576107228651858101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b815261071a81610f52565b5190206111cd565b309116036107c957506102a96105d9939461073e61011a61206f565b6107ad8151936107806801bc16d674ec80000061018161077989890189610765308361101e565b039961020f601f199b8c8101835282610f6e565b349061104c565b825190868201906d19195c1bdcda5d0b985b5bdd5b9d60921b8252602e830152602e82526102a982610f52565b5192830191836107bd308561101e565b03908101845283610f6e565b845162461bcd60e51b815290810183905260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b855162461bcd60e51b815280830185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b6108589150853d871161085e575b6108508183610f6e565b810190611196565b386106e7565b503d610846565b87513d88823e3d90fd5b83346105dc57806003193601126105dc57805481906001600160a01b0381169061089a338314611227565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346105dc5760203660031901126105dc575061067060209235611fec565b83823461064a578160031936011261064a5760ff6020925460a01c169051908152f35b503461041f5761091f36610ea2565b9261093a60018060a09998999594951b038b54163314611227565b875194610993602087018761097730836021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b039761098b601f19998a8101835282610f6e565b5190206113a1565b15610a1c575050505050906109c26109d19285516109ba6020820192826102e83086611272565b519020611304565b60208151910120923691611298565b60208151910120036109e75750506105d9611512565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b939750935093610a2f9750949094611808565b6105d9611512565b83823461064a578160031936011261064a5780610a87610a9a925160208101907376616c696461746f722e7075626c69632e6b657960601b82523060601b6034820152602881526109ba81610f52565b9051918291602083526020830190610e4a565b0390f35b83823461064a578160031936011261064a57610ab8611e11565b815192839260208080860192818752855180945286019401925b828110610ae157505050500390f35b835185528695509381019392810192600101610ad2565b50903461041f578160031936011261041f57803560243591610b1861206f565b610b236101256114f0565b14610cb35760025484516331a9108f60e11b8152828101849052602093916001600160a01b03919085908290602490829086165afa908115610ca9578891610c7c575b50163303610c4a5784519184610ba18585016d19195c1bdcda5d0b985b5bdd5b9d60921b9586825285602e820152602e815261020f81610f52565b10610c10575083610bfd81889695610bdb8897889788978c5190858201928352602e820152602e8152610bd381610f52565b519020611c4d565b885190810190610bd381610bef308561101e565b03601f198101835282610f6e565b818115610641573390f115610637575080f35b855162461bcd60e51b815290810184905260146024820152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b5060649184519162461bcd60e51b8352820152600d60248201526c3737ba103a34329037bbb732b960991b6044820152fd5b610c9c9150853d8711610ca2575b610c948183610f6e565b8101906111ae565b38610b66565b503d610c8a565b87513d8a823e3d90fd5b606490602085519162461bcd60e51b8352820152601b60248201527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152fd5b83346105dc57806003193601126105dc57610a2f60018060a01b038254163314611227565b5082346105dc5760203660031901126105dc57506106706020928251848101916d19195c1bdcda5d0b985b5bdd5b9d60921b835235602e820152602e815261020f81610f52565b83823461064a578160031936011261064a576105d990610d8c60018060a01b038454163314611227565b60644711610dd1575b80516020810190610daa81610bef30856114c2565b519020905190610db982610f36565b6006825265195e1a5d195960d21b60208301526117b2565b610dd9611c92565b610d95565b83823461064a578160031936011261064a57610a9a90610a87612015565b8285346105dc57806003193601126105dc57506106708260208094019061020f81610bef308561101e565b60005b838110610e3a5750506000910152565b8181015183820152602001610e2a565b90602091610e6381518092818552858086019101610e27565b601f01601f1916010190565b9181601f84011215610e9d5782359167ffffffffffffffff8311610e9d5760208381860195010111610e9d57565b600080fd5b906080600319830112610e9d5767ffffffffffffffff600435818111610e9d5783610ecf91600401610e6f565b93909392602435838111610e9d5782610eea91600401610e6f565b93909392604435918211610e9d57610f0491600401610e6f565b909160643590565b67ffffffffffffffff8111610f2057604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610f2057604052565b6060810190811067ffffffffffffffff821117610f2057604052565b90601f8019910116810190811067ffffffffffffffff821117610f2057604052565b67ffffffffffffffff8111610f2057601f01601f191660200190565b60405190610fb982610f36565b6011825270616363657074696e674465706f7369747360781b6020830152565b15610fe057565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b9190820180921161105957565b634e487b7160e01b600052601160045260246000fd5b1561107657565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561113a5760009161110c575090565b906020823d8211611132575b8161112560209383610f6e565b810103126105dc57505190565b3d9150611118565b6040513d6000823e3d90fd5b6001546001600160a01b031691823b15610e9d576044600092836040519586948593632b6cd4f760e21b8552600485015260248401525af1801561113a5761118b5750565b61119490610f0c565b565b90816020910312610e9d57518015158103610e9d5790565b90816020910312610e9d57516001600160a01b0381168103610e9d5790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561113a5760009161120c575090565b611224915060203d8111610ca257610c948183610f6e565b90565b1561122e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b9291926112a482610f90565b916112b26040519384610f6e565b829481845281830111610e9d578281602093846000960137010152565b909291926112dc81610f90565b916112ea6040519384610f6e565b829482845282820111610e9d576020611194930190610e27565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa91821561139457819261134557505090565b909291503d8084833e6113588183610f6e565b8101906020818303126104635780519067ffffffffffffffff821161044b570181601f82011215610463576112249293506020815191016112cf565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa90811561113a576000916113e0575090565b611224915060203d811161085e576108508183610f6e565b156113ff57565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b602a91757769746864726177616c5f63726564656e7469616c7360501b82526001600160601b03199060601b1660168201520190565b601d91687369676e617475726560b81b82526001600160601b03199060601b1660098201520190565b6025917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82526001600160601b03199060601b1660118201520190565b6022916d636f6e74726163742e737461746560901b82526001600160601b03199060601b16600e8201520190565b604051906114fd82610f36565b60068252651cdd185ad95960d21b6020830152565b6801bc16d674ec8000009081471061177c5761154061152f61206f565b61153a610125610fac565b146113f8565b60408051602061156b818301836115573083611272565b03936109ba601f1995868101835282610f6e565b61158e8451838101906109ba816115823085611432565b03878101835282610f6e565b926115b28551848101906109ba816115a63085611468565b03858101835282610f6e565b968551848101906115c7816115a63085611491565b5190206001548751635376ab1f60e11b8152600481019290925290926001600160a01b039186908590602490829086165afa93841561177157600094611742575b5061168361165d8951888101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b60398201526028815261071a81610f52565b91895161167289820192826102e830866114c2565b51902061167d6114f0565b906117b2565b1694853b15610e9d576000936116d1936116e06116be938a519c8d97889687966304512a2360e31b8852608060048901526084880190610e4a565b6003199384888303016024890152610e4a565b91858303016044860152610e4a565b9060648301520391865af1948515611737577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611728575b5082519182523390820152a1565b61173190610f0c565b3861171a565b83513d6000823e3d90fd5b90938682813d831161176a575b6117598183610f6e565b810103126105dc5750519238611608565b503d61174f565b88513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b6001546001600160a01b031691823b15610e9d576117f792600092836040518096819582946306e8995560e41b84526004840152604060248401526044830190610e4a565b03925af1801561113a5761118b5750565b93909592949194600160f81b30019586301161105957604097885160209889820190815289825261183882610f36565b611843368686611298565b8a81519101209151902003611b7f576118878951898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b60308201526024815261098b81610f52565b15611a765761189461206f565b895161189f81610f36565b60158152746177616974696e6756616c696461746f72496e666f60581b8a8201526118c990612077565b146118d3906113f8565b885196888801886118e43083611272565b0398601f19998a810182526118f99082610f6e565b51902091369061190892611298565b61191191611bc3565b875187810190806119223084611432565b0388810182526119329082610f6e565b51902091369061194192611298565b61194a91611bc3565b8551858101908061195b3084611468565b03868101825261196b9082610f6e565b51902091369061197a92611298565b61198391611bc3565b835183810190806119943084611491565b0384810182526119a49082610f6e565b519020906119b191611c08565b825182810191816119c230856114c2565b0390810182526119d29082610f6e565b5190206119dd610fac565b6119e6916117b2565b81516c1d985b1a59185d1bdc8b9cd95d609a1b9181019182523060601b6001600160601b031916600d830152611a1f8160218401610bef565b5190206001546001600160a01b03169190823b15610e9d57600092604484928451958693849263abfdcced60e01b84526004840152600160248401525af1908115611a6c575061118b5750565b513d6000823e3d90fd5b611a8196959661206f565b611a89610fac565b611a9290612077565b14611a9c906113f8565b88519588870187611aad3083611272565b0397601f19988981018252611ac29082610f6e565b519020913690611ad192611298565b611ada91611bc3565b87518781019080611aeb3084611432565b038781018252611afb9082610f6e565b519020913690611b0a92611298565b611b1391611bc3565b85518581019080611b243084611468565b038581018252611b349082610f6e565b519020913690611b4392611298565b611b4c91611bc3565b83518381019181611b5d3085611491565b039081018252611b6d9082610f6e565b51902090611b7a91611c08565b6119e6565b885162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b6001546001600160a01b031691823b15610e9d576117f79260009283604051809681958294630b8a342160e21b84526004840152604060248401526044830190610e4a565b6001546001600160a01b031691823b15610e9d5760446000928360405195869485936309d23b6160e31b8552600485015260248401525af1801561113a5761118b5750565b6001546001600160a01b031691823b15610e9d57604460009283604051958694859363ebb9d8c960e01b8552600485015260248401525af1801561113a5761118b5750565b611c9a61206f565b611ca56101256114f0565b03611dcc57476064811115611d8857611cbc611e11565b60005b8151811015611d83576020808260051b8401015160018060a01b03908160025416926024816040958651928380926331a9108f60e11b82528760048301525afa918215611d785793600094938594938a86959486958693611d55575b5050611d279192611f47565b9183918315611d4b575b1690f115611a6c5750600019811461105957600101611cbf565b6108fc9250611d31565b611d2793509081611d7192903d10610ca257610c948183610f6e565b9138611d1b565b85513d6000823e3d90fd5b505050565b606460405162461bcd60e51b815260206004820152602060248201527f6d696e696d756d206f66203130302077656920746f20646973747269627574656044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b6040516a1a591ccb9a5b8b9c1bdbdb60aa1b60208083019182523060601b6001600160601b031916602b84015291611e4c81603f8101610bef565b5190206001546040516378267eb560e11b81526004810192909252600092908390839060249082906001600160a01b03165afa928315611f3b578093611e93575b50505090565b909192503d8082853e611ea68185610f6e565b83019082848303126105dc57835167ffffffffffffffff9485821161041f570182601f8201121561064a578051948511611f27578460051b9160405195611eef86850188610f6e565b865284808701938301019384116105dc57508301905b828210611f185750505050388080611e8d565b81518152908301908301611f05565b634e487b7160e01b82526041600452602482fd5b604051903d90823e3d90fd5b611f799060405160208101916d19195c1bdcda5d0b985b5bdd5b9d60921b8352602e820152602e815261020f81610f52565b611f92604051602081019061020f81610bef308561101e565b918115611fe457818102918183041490151715611059578115611fce57046001811115611fc85760001981019081116110595790565b50600090565b634e487b7160e01b600052601260045260246000fd5b505050600090565b611ff461206f565b611fff610125610fac565b0361200a5750600090565b611224904790611f47565b604051602081019061202b81610bef30856114c2565b519020600154604051634c373c8d60e11b815260048101929092526000908190839060249082906001600160a01b03165afa91821561139457819261134557505090565b612077612015565b6040516120a1602082816120948183019687815193849201610e27565b8101038084520182610f6e565b5190209056fea26469706673582212208e9543c933cc7455da5e96cac86c67df23fe661df4297fda800a9b8356397de564736f6c63430008110033a2646970667358221220b029dbe0f3e304bb6a5acdb4a1c759e0a3c566aab23917dcfbf5f9c81dc3ec8064736f6c63430008110033",
    "sourceMap": "199:1116:9:-:0;;;;;;;;;;;;;-1:-1:-1;;199:1116:9;;;;-1:-1:-1;;;;;199:1116:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:1116:9;;;;;;-1:-1:-1;199:1116:9;;-1:-1:-1;;;;;;199:1116:9;;;;;;-1:-1:-1;;;;;199:1116:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;199:1116:9;;;;;;-1:-1:-1;199:1116:9;;;;;-1:-1:-1;199:1116:9",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040818152600436101561001457600080fd5b600091823560e01c908163319e90901461005a57506354fd4d501461003857600080fd5b3461005657816003193601126100565760ff60209254169051908152f35b5080fd5b8383346100565780600319360112610056576004356001600160a01b038181169182900361033d57602435908115159485830361033a578054966122f98082019082821067ffffffffffffffff83111761032657879183916104be83398781528560209b60081c168b82015203019082f095861561031a57828716966101208751918a8301906a706f6f6c2e65786973747360a81b82526bffffffffffffffffffffffff199060601b169283602b820152601f81526101188161036b565b519020610470565b61015187518a8101906e636f6e74726163742e65786973747360881b825283602f8201526023815261011881610387565b8651898101916f1d985b1a59185d1bdc8b9b1bd8dad95960821b835260308201526024815261017f81610387565b51902092825460081c1692833b15610316579060448392838951968794859363abfdcced60e01b8552600485015260248401525af190811561030b5750927fb224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e92859287956102fc575b50156102825781516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102719161023c81602284015b03601f1981018352826103a3565b51902083519061024b8261036b565b60158252746177616974696e6756616c696461746f72496e666f60581b8a8301526103c5565b81519033825287820152a251908152f35b81516d636f6e74726163742e737461746560901b888201908152606086901b6bffffffffffffffffffffffff1916600e8201526102f7916102c6816022840161022e565b5190208351906102d58261036b565b6011825270616363657074696e674465706f7369747360781b8a8301526103c5565b610271565b61030590610341565b886101e8565b8551903d90823e3d90fd5b8280fd5b508451903d90823e3d90fd5b634e487b7160e01b84526041600452602484fd5b80fd5b8380fd5b67ffffffffffffffff811161035557604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761035557604052565b6060810190811067ffffffffffffffff82111761035557604052565b90601f8019910116810190811067ffffffffffffffff82111761035557604052565b600080549192909160081c6001600160a01b031690813b15610316579282916040519485926306e8995560e41b8452600484015260406024840152805190816044850152845b82811061045557505083606484838383839684010152601f801991011681010301925af1908115610449575061043e5750565b61044790610341565b565b604051903d90823e3d90fd5b602081830181015160648a840101528796508895500161040b565b60009060018060a01b03825460081c1690813b1561031657829160448392604051958693849263abfdcced60e01b84526004840152600160248401525af1908115610449575061043e575056fe608060408181523462000196578082620022f980380380916200002382856200019b565b83398101031262000196576200003982620001bf565b6020928301516001600160a01b03808216949185900362000196576200005f33620001d4565b600180546001600160a01b0319908116871790915584516f636f6e74726163742e6164647265737360801b8185019081526d4672656e73506f6f6c536861726560901b6030830152601e82528187019792949192906001600160401b038911848a1017620001805760248984938193828c52875190206321f8a72160e01b835260448801525afa918215620001755760009262000131575b50506200011094955016906002541617600255620001d4565b6000805460ff60a01b1916600160a01b179055516120dd90816200021c8239f35b813d83116200016d575b62000147818a6200019b565b810103126200016a575062000161620001109495620001bf565b859438620000f7565b80fd5b503d6200013b565b86513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200018057604052565b51906001600160a01b03821682036200019657565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe608060408181526004908136101561001f575b505050361561001d57005b005b600092833560e01c908163168a482214610dfc575080631865c57d14610dde5780632def662014610d62578063378de45b14610d1b5780633a4b66f114610cf6578063441a3e7014610af857806345b58fe414610a9e5780634ad02ef114610a375780634b2b4e361461091057806354fd4d50146108ed578063678e300a146108cd578063715018a61461086f5780638620891c1461069f5780638da5cb5b14610677578063cfb5a5f81461064e578063e2664e49146105f8578063e4fc6b6d146105df578063e920eec0146105a7578063f2fde38b146104df5763f9faa10403610012578260031936011261041f5761013061011a61206f565b61012a610125610fac565b612077565b14610fd9565b34156104a7578051916020926101886801bc16d674ec8000006101818684019361017c8161015e308861101e565b0395610172601f1997888101855284610f6e565b34925190206110cd565b61104c565b111561106f565b825190848201671d1bdad95b8b9a5960c21b92838252600881526101ab81610f36565b5190206001546001600160a01b03939188918516803b1561041f576044839289519485938492632b6cd4f760e21b84528b840152600160248401525af1801561048e57906102179291610498575b5085518781019182526008815261020f81610f36565b5190206110cd565b90868551878101906d19195c1bdcda5d0b985b5bdd5b9d60921b825284602e820152602e815261024681610f52565b5190208460015416803b1561041f576044839289519485938492637152429d60e11b84528b8401523460248401525af1801561048e57610475575b5090869392916102b386518881016102a98261029d308461101e565b03858101845283610f6e565b3491519020611146565b85516a1a591ccb9a5b8b9c1bdbdb60aa1b8882019081523060601b6001600160601b031916600b820152916102f49082601f85015b03908101835282610f6e565b519020826001541690813b15610471578591604483928951948593849263785f002b60e11b84528a8401528760248401525af180156104675790859161044f575b50508451868101916a1c1bdbdb0b999bdc8b9a5960aa1b8352602b820152602b815261036081610f52565b519020816001541690813b1561044b578491604483928851948593849263ca446dd960e01b8452898401523060248401525af180156104415790849161042d575b50506002541690813b1561041f57829160248392865194859384926335313c2160e11b845233908401525af180156104235761040b575b50507f1ed12c9855bd60407f7650e01c62ee4f0f40744b5b17983eec349a2b4e89981a918151903482523390820152a180f35b61041490610f0c565b61041f5782386103d8565b8280fd5b83513d84823e3d90fd5b61043690610f0c565b61041f5782386103a1565b85513d86823e3d90fd5b8480fd5b61045890610f0c565b610463578338610335565b8380fd5b86513d87823e3d90fd5b8580fd5b61048490979194939297610f0c565b9590919238610281565b86513d8a823e3d90fd5b6104a190610f0c565b386101f9565b906020606492519162461bcd60e51b8352820152601260248201527136bab9ba103232b837b9b4ba1032ba3432b960711b6044820152fd5b503461041f57602036600319011261041f576001600160a01b038235818116939084900361044b57845491821692610518338514611227565b84156105555750506001600160a01b031916821783557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b83346105dc576105d96105b936610ea2565b956105d460018060a09894989795971b038a54163314611227565b611808565b80f35b80fd5b83346105dc57806003193601126105dc576105d9611c92565b83823461064a578160031936011261064a5761061e60018060a01b038354163314611227565b8180808047818115610641575b3390f115610637575080f35b51903d90823e3d90fd5b506108fc61062b565b5080fd5b5082346105dc5760203660031901126105dc5750610670602092479035611f47565b9051908152f35b83823461064a578160031936011261064a57905490516001600160a01b039091168152602090f35b5091906020908160031936011261041f5780359060018060a01b036024848260025416885192838092634f558e7960e01b825288888301525afa908115610865578691610838575b5015610801576107228651858101906a1c1bdbdb0b999bdc8b9a5960aa1b825285602b820152602b815261071a81610f52565b5190206111cd565b309116036107c957506102a96105d9939461073e61011a61206f565b6107ad8151936107806801bc16d674ec80000061018161077989890189610765308361101e565b039961020f601f199b8c8101835282610f6e565b349061104c565b825190868201906d19195c1bdcda5d0b985b5bdd5b9d60921b8252602e830152602e82526102a982610f52565b5192830191836107bd308561101e565b03908101845283610f6e565b845162461bcd60e51b815290810183905260126024820152711ddc9bdb99c81cdd185ada5b99c81c1bdbdb60721b6044820152606490fd5b855162461bcd60e51b815280830185905260116024820152701a5908191bd95cc81b9bdd08195e1a5cdd607a1b6044820152606490fd5b6108589150853d871161085e575b6108508183610f6e565b810190611196565b386106e7565b503d610846565b87513d88823e3d90fd5b83346105dc57806003193601126105dc57805481906001600160a01b0381169061089a338314611227565b6001600160a01b03191682557f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5082346105dc5760203660031901126105dc575061067060209235611fec565b83823461064a578160031936011261064a5760ff6020925460a01c169051908152f35b503461041f5761091f36610ea2565b9261093a60018060a09998999594951b038b54163314611227565b875194610993602087018761097730836021916c1d985b1a59185d1bdc8b9cd95d609a1b82526001600160601b03199060601b16600d8201520190565b039761098b601f19998a8101835282610f6e565b5190206113a1565b15610a1c575050505050906109c26109d19285516109ba6020820192826102e83086611272565b519020611304565b60208151910120923691611298565b60208151910120036109e75750506105d9611512565b906020606492519162461bcd60e51b8352820152600f60248201526e0e0eac496caf240dad2e6dac2e8c6d608b1b6044820152fd5b939750935093610a2f9750949094611808565b6105d9611512565b83823461064a578160031936011261064a5780610a87610a9a925160208101907376616c696461746f722e7075626c69632e6b657960601b82523060601b6034820152602881526109ba81610f52565b9051918291602083526020830190610e4a565b0390f35b83823461064a578160031936011261064a57610ab8611e11565b815192839260208080860192818752855180945286019401925b828110610ae157505050500390f35b835185528695509381019392810192600101610ad2565b50903461041f578160031936011261041f57803560243591610b1861206f565b610b236101256114f0565b14610cb35760025484516331a9108f60e11b8152828101849052602093916001600160a01b03919085908290602490829086165afa908115610ca9578891610c7c575b50163303610c4a5784519184610ba18585016d19195c1bdcda5d0b985b5bdd5b9d60921b9586825285602e820152602e815261020f81610f52565b10610c10575083610bfd81889695610bdb8897889788978c5190858201928352602e820152602e8152610bd381610f52565b519020611c4d565b885190810190610bd381610bef308561101e565b03601f198101835282610f6e565b818115610641573390f115610637575080f35b855162461bcd60e51b815290810184905260146024820152731b9bdd08195b9bdd59da0819195c1bdcda5d195960621b6044820152606490fd5b5060649184519162461bcd60e51b8352820152600d60248201526c3737ba103a34329037bbb732b960991b6044820152fd5b610c9c9150853d8711610ca2575b610c948183610f6e565b8101906111ae565b38610b66565b503d610c8a565b87513d8a823e3d90fd5b606490602085519162461bcd60e51b8352820152601b60248201527f63616e6e6f74207769746864726177206f6e6365207374616b656400000000006044820152fd5b83346105dc57806003193601126105dc57610a2f60018060a01b038254163314611227565b5082346105dc5760203660031901126105dc57506106706020928251848101916d19195c1bdcda5d0b985b5bdd5b9d60921b835235602e820152602e815261020f81610f52565b83823461064a578160031936011261064a576105d990610d8c60018060a01b038454163314611227565b60644711610dd1575b80516020810190610daa81610bef30856114c2565b519020905190610db982610f36565b6006825265195e1a5d195960d21b60208301526117b2565b610dd9611c92565b610d95565b83823461064a578160031936011261064a57610a9a90610a87612015565b8285346105dc57806003193601126105dc57506106708260208094019061020f81610bef308561101e565b60005b838110610e3a5750506000910152565b8181015183820152602001610e2a565b90602091610e6381518092818552858086019101610e27565b601f01601f1916010190565b9181601f84011215610e9d5782359167ffffffffffffffff8311610e9d5760208381860195010111610e9d57565b600080fd5b906080600319830112610e9d5767ffffffffffffffff600435818111610e9d5783610ecf91600401610e6f565b93909392602435838111610e9d5782610eea91600401610e6f565b93909392604435918211610e9d57610f0491600401610e6f565b909160643590565b67ffffffffffffffff8111610f2057604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610f2057604052565b6060810190811067ffffffffffffffff821117610f2057604052565b90601f8019910116810190811067ffffffffffffffff821117610f2057604052565b67ffffffffffffffff8111610f2057601f01601f191660200190565b60405190610fb982610f36565b6011825270616363657074696e674465706f7369747360781b6020830152565b15610fe057565b60405162461bcd60e51b81526020600482015260166024820152756e6f7420616363657074696e67206465706f7369747360501b6044820152606490fd5b6022916d746f74616c2e6465706f7369747360901b82526001600160601b03199060601b16600e8201520190565b9190820180921161105957565b634e487b7160e01b600052601160045260246000fd5b1561107657565b60405162461bcd60e51b815260206004820152602960248201527f746f74616c206465706f736974732063616e6e6f74206265206d6f72652074686044820152680c2dc406664408ae8d60bb1b6064820152608490fd5b60015460405163bd02d0f560e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561113a5760009161110c575090565b906020823d8211611132575b8161112560209383610f6e565b810103126105dc57505190565b3d9150611118565b6040513d6000823e3d90fd5b6001546001600160a01b031691823b15610e9d576044600092836040519586948593632b6cd4f760e21b8552600485015260248401525af1801561113a5761118b5750565b61119490610f0c565b565b90816020910312610e9d57518015158103610e9d5790565b90816020910312610e9d57516001600160a01b0381168103610e9d5790565b6001546040516321f8a72160e01b81526004810192909252602090829060249082906001600160a01b03165afa90811561113a5760009161120c575090565b611224915060203d8111610ca257610c948183610f6e565b90565b1561122e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b601a91657075624b657960d01b82526001600160601b03199060601b1660068201520190565b9291926112a482610f90565b916112b26040519384610f6e565b829481845281830111610e9d578281602093846000960137010152565b909291926112dc81610f90565b916112ea6040519384610f6e565b829482845282820111610e9d576020611194930190610e27565b600154604051630180634360e71b815260048101929092526000908190839060249082906001600160a01b03165afa91821561139457819261134557505090565b909291503d8084833e6113588183610f6e565b8101906020818303126104635780519067ffffffffffffffff821161044b570181601f82011215610463576112249293506020815191016112cf565b50604051903d90823e3d90fd5b600154604051633d70e7e560e11b81526004810192909252602090829060249082906001600160a01b03165afa90811561113a576000916113e0575090565b611224915060203d811161085e576108508183610f6e565b156113ff57565b60405162461bcd60e51b815260206004820152600b60248201526a77726f6e6720737461746560a81b6044820152606490fd5b602a91757769746864726177616c5f63726564656e7469616c7360501b82526001600160601b03199060601b1660168201520190565b601d91687369676e617475726560b81b82526001600160601b03199060601b1660098201520190565b6025917019195c1bdcda5d17d9185d1857dc9bdbdd607a1b82526001600160601b03199060601b1660118201520190565b6022916d636f6e74726163742e737461746560901b82526001600160601b03199060601b16600e8201520190565b604051906114fd82610f36565b60068252651cdd185ad95960d21b6020830152565b6801bc16d674ec8000009081471061177c5761154061152f61206f565b61153a610125610fac565b146113f8565b60408051602061156b818301836115573083611272565b03936109ba601f1995868101835282610f6e565b61158e8451838101906109ba816115823085611432565b03878101835282610f6e565b926115b28551848101906109ba816115a63085611468565b03858101835282610f6e565b968551848101906115c7816115a63085611491565b5190206001548751635376ab1f60e11b8152600481019290925290926001600160a01b039186908590602490829086165afa93841561177157600094611742575b5061168361165d8951888101907f65787465726e616c2e636f6e74726163742e616464726573730000000000000082526e11195c1bdcda5d10dbdb9d1c9858dd608a1b60398201526028815261071a81610f52565b91895161167289820192826102e830866114c2565b51902061167d6114f0565b906117b2565b1694853b15610e9d576000936116d1936116e06116be938a519c8d97889687966304512a2360e31b8852608060048901526084880190610e4a565b6003199384888303016024890152610e4a565b91858303016044860152610e4a565b9060648301520391865af1948515611737577f72b356fd889b9abd3530accd2c9f4aecbce67d70757181f9f862ac91464ce1929495611728575b5082519182523390820152a1565b61173190610f0c565b3861171a565b83513d6000823e3d90fd5b90938682813d831161176a575b6117598183610f6e565b810103126105dc5750519238611608565b503d61174f565b88513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152600e60248201526d0dcdee840cadcdeeaced040cae8d60931b6044820152606490fd5b6001546001600160a01b031691823b15610e9d576117f792600092836040518096819582946306e8995560e41b84526004840152604060248401526044830190610e4a565b03925af1801561113a5761118b5750565b93909592949194600160f81b30019586301161105957604097885160209889820190815289825261183882610f36565b611843368686611298565b8a81519101209151902003611b7f576118878951898101906f1d985b1a59185d1bdc8b9b1bd8dad95960821b82523060601b60308201526024815261098b81610f52565b15611a765761189461206f565b895161189f81610f36565b60158152746177616974696e6756616c696461746f72496e666f60581b8a8201526118c990612077565b146118d3906113f8565b885196888801886118e43083611272565b0398601f19998a810182526118f99082610f6e565b51902091369061190892611298565b61191191611bc3565b875187810190806119223084611432565b0388810182526119329082610f6e565b51902091369061194192611298565b61194a91611bc3565b8551858101908061195b3084611468565b03868101825261196b9082610f6e565b51902091369061197a92611298565b61198391611bc3565b835183810190806119943084611491565b0384810182526119a49082610f6e565b519020906119b191611c08565b825182810191816119c230856114c2565b0390810182526119d29082610f6e565b5190206119dd610fac565b6119e6916117b2565b81516c1d985b1a59185d1bdc8b9cd95d609a1b9181019182523060601b6001600160601b031916600d830152611a1f8160218401610bef565b5190206001546001600160a01b03169190823b15610e9d57600092604484928451958693849263abfdcced60e01b84526004840152600160248401525af1908115611a6c575061118b5750565b513d6000823e3d90fd5b611a8196959661206f565b611a89610fac565b611a9290612077565b14611a9c906113f8565b88519588870187611aad3083611272565b0397601f19988981018252611ac29082610f6e565b519020913690611ad192611298565b611ada91611bc3565b87518781019080611aeb3084611432565b038781018252611afb9082610f6e565b519020913690611b0a92611298565b611b1391611bc3565b85518581019080611b243084611468565b038581018252611b349082610f6e565b519020913690611b4392611298565b611b4c91611bc3565b83518381019181611b5d3085611491565b039081018252611b6d9082610f6e565b51902090611b7a91611c08565b6119e6565b885162461bcd60e51b815260048101899052601e60248201527f7769746864726177616c2063726564656e7469616c206d69736d6174636800006044820152606490fd5b6001546001600160a01b031691823b15610e9d576117f79260009283604051809681958294630b8a342160e21b84526004840152604060248401526044830190610e4a565b6001546001600160a01b031691823b15610e9d5760446000928360405195869485936309d23b6160e31b8552600485015260248401525af1801561113a5761118b5750565b6001546001600160a01b031691823b15610e9d57604460009283604051958694859363ebb9d8c960e01b8552600485015260248401525af1801561113a5761118b5750565b611c9a61206f565b611ca56101256114f0565b03611dcc57476064811115611d8857611cbc611e11565b60005b8151811015611d83576020808260051b8401015160018060a01b03908160025416926024816040958651928380926331a9108f60e11b82528760048301525afa918215611d785793600094938594938a86959486958693611d55575b5050611d279192611f47565b9183918315611d4b575b1690f115611a6c5750600019811461105957600101611cbf565b6108fc9250611d31565b611d2793509081611d7192903d10610ca257610c948183610f6e565b9138611d1b565b85513d6000823e3d90fd5b505050565b606460405162461bcd60e51b815260206004820152602060248201527f6d696e696d756d206f66203130302077656920746f20646973747269627574656044820152fd5b60405162461bcd60e51b815260206004820152601c60248201527f757365207769746864726177207768656e206e6f74207374616b6564000000006044820152606490fd5b6040516a1a591ccb9a5b8b9c1bdbdb60aa1b60208083019182523060601b6001600160601b031916602b84015291611e4c81603f8101610bef565b5190206001546040516378267eb560e11b81526004810192909252600092908390839060249082906001600160a01b03165afa928315611f3b578093611e93575b50505090565b909192503d8082853e611ea68185610f6e565b83019082848303126105dc57835167ffffffffffffffff9485821161041f570182601f8201121561064a578051948511611f27578460051b9160405195611eef86850188610f6e565b865284808701938301019384116105dc57508301905b828210611f185750505050388080611e8d565b81518152908301908301611f05565b634e487b7160e01b82526041600452602482fd5b604051903d90823e3d90fd5b611f799060405160208101916d19195c1bdcda5d0b985b5bdd5b9d60921b8352602e820152602e815261020f81610f52565b611f92604051602081019061020f81610bef308561101e565b918115611fe457818102918183041490151715611059578115611fce57046001811115611fc85760001981019081116110595790565b50600090565b634e487b7160e01b600052601260045260246000fd5b505050600090565b611ff461206f565b611fff610125610fac565b0361200a5750600090565b611224904790611f47565b604051602081019061202b81610bef30856114c2565b519020600154604051634c373c8d60e11b815260048101929092526000908190839060249082906001600160a01b03165afa91821561139457819261134557505090565b612077612015565b6040516120a1602082816120948183019687815193849201610e27565b8101038084520182610f6e565b5190209056fea26469706673582212208e9543c933cc7455da5e96cac86c67df23fe661df4297fda800a9b8356397de564736f6c63430008110033a2646970667358221220b029dbe0f3e304bb6a5acdb4a1c759e0a3c566aab23917dcfbf5f9c81dc3ec8064736f6c63430008110033",
    "sourceMap": "199:1116:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;199:1116:9;;;;;;;;;;;;;;;;;;;;;;;589:37;;;;;;;;;;;;;;;;;;;;;;199:1116;;;;;;;;;;;;;589:37;;;;;;;;;;199:1116;;;;706:4;199:1116;;650:53;;;;199:1116;-1:-1:-1;;;199:1116:9;;;;;;;;;;;;;;650:53;;;;;;:::i;:::-;199:1116;640:64;;706:4;:::i;:::-;845;199:1116;;785:57;;;199:1116;-1:-1:-1;;;199:1116:9;;;;;;;785:57;;;;;;:::i;845:4::-;199:1116;;874:58;;;199:1116;-1:-1:-1;;;199:1116:9;;;;;;;874:58;;;;;:::i;:::-;199:1116;864:69;;199:1116;;;;;;6422:34:2;;;;;;199:1116:9;;;;;;;;;;;;;;;6422:34:2;;199:1116:9;6422:34:2;;199:1116:9;;;;;6422:34:2;;;;;;;;;1224:48:9;6422:34:2;;;;;;;199:1116:9;-1:-1:-1;957:257:9;;;199:1116;;-1:-1:-1;;;1004:56:9;;;199:1116;;;;;;;-1:-1:-1;;199:1116:9;;;;;984:103;;1004:56;199:1116;;;;1004:56;;650:53;;1004:56;;;;;;:::i;:::-;199:1116;994:67;;199:1116;;;;;;:::i;:::-;;;;-1:-1:-1;;;199:1116:9;;;;984:103;:::i;:::-;199:1116;;1253:10;;199:1116;;;;;;1224:48;199:1116;;;;;957:257;199:1116;;-1:-1:-1;;;1128:56:9;;;199:1116;;;;;;;-1:-1:-1;;199:1116:9;;;;;1108:99;;1128:56;199:1116;;;;1128:56;199:1116;1128:56;199:1116;1118:67;;199:1116;;;;;;:::i;:::-;;;;-1:-1:-1;;;199:1116:9;;;;1108:99;:::i;:::-;957:257;;6422:34:2;;;;:::i;:::-;;;;;199:1116:9;;;;;;;;;;6422:34:2;199:1116:9;;;589:37;199:1116;;;;;;;;;;;589:37;-1:-1:-1;;;199:1116:9;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;650:53;;;199:1116;;;;;;;;;;;;;;;;:::o;6150:105:2:-;6216:12;199:1116:9;;6150:105:2;;6216:12;;199:1116:9;;-1:-1:-1;;;;;199:1116:9;;6216:36:2;;;;;199:1116:9;;;;;;;;;;;6216:36:2;;;;;199:1116:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:53;;;199:1116;;;;;6216:36:2;;;;;;;;;;;;;6150:105;:::o;6216:36::-;;;;:::i;:::-;6150:105::o;6216:36::-;199:1116:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;199:1116:9;;-1:-1:-1;199:1116:9;;;6367:92:2;6422:12;199:1116:9;;;;;;;;;;;6422:34:2;;;;;;199:1116:9;;;;;;;;;;;;;;;6422:34:2;;;;;199:1116:9;;;;;;6422:34:2;;;;;;;;;;6367:92;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "create(address,bool)": "319e9090",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IFrensStorage\",\"name\":\"_frensStorage\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Create\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"validatorLocked\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolFactory.sol\":\"StakingPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x3995c07e43f1dcafb6d6d0de1533d9715810c44b2fccf175894b9d6754dfaa1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae616797d06f58b06250d381cf34e97b060d6a6a64950a15a20e9a34460094e3\",\"dweb:/ipfs/QmYxjqWgJ3x1PHkqtZDy4gSZDEUADeAB6EGt5Z8xbJs9L8\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f\",\"dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2\",\"dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278\",\"dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IFrensStorage",
              "name": "_frensStorage",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "contractAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Create",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner_",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "validatorLocked",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/StakingPoolFactory.sol": "StakingPoolFactory"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x3995c07e43f1dcafb6d6d0de1533d9715810c44b2fccf175894b9d6754dfaa1f",
        "urls": [
          "bzz-raw://ae616797d06f58b06250d381cf34e97b060d6a6a64950a15a20e9a34460094e3",
          "dweb:/ipfs/QmYxjqWgJ3x1PHkqtZDy4gSZDEUADeAB6EGt5Z8xbJs9L8"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9",
        "urls": [
          "bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f",
          "dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6",
        "urls": [
          "bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2",
          "dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3b064293270744fdbc1e8b6758057b1bd58586d057ad8301c758c87ddd8c814a",
        "urls": [
          "bzz-raw://5d9c8677d5590368650dfe52c8ea080f38031f438c753d660346aa10c8137278",
          "dweb:/ipfs/QmYLjERPBnwuFUWchiggTyVxPnYXuFwwgGz8PXF8P8PRjs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/StakingPoolFactory.sol",
    "id": 3877,
    "exportedSymbols": {
      "Context": [
        29729
      ],
      "FrensBase": [
        836
      ],
      "IDepositContract": [
        3971
      ],
      "IERC165": [
        29968
      ],
      "IERC721": [
        28996
      ],
      "IERC721Enumerable": [
        29383
      ],
      "IFrensPoolShare": [
        4193
      ],
      "IFrensStorage": [
        4399
      ],
      "IStakingPool": [
        4702
      ],
      "IStakingPoolFactory": [
        4714
      ],
      "Ownable": [
        28046
      ],
      "StakingPool": [
        3733
      ],
      "StakingPoolFactory": [
        3876
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1284:9",
    "nodes": [
      {
        "id": 3735,
        "nodeType": "PragmaDirective",
        "src": "32:31:9",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 3736,
        "nodeType": "ImportDirective",
        "src": "97:27:9",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "./StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3877,
        "sourceUnit": 3734,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3737,
        "nodeType": "ImportDirective",
        "src": "125:25:9",
        "nodes": [],
        "absolutePath": "contracts/FrensBase.sol",
        "file": "./FrensBase.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3877,
        "sourceUnit": 837,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3738,
        "nodeType": "ImportDirective",
        "src": "151:46:9",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "./interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3877,
        "sourceUnit": 4715,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3876,
        "nodeType": "ContractDefinition",
        "src": "199:1116:9",
        "nodes": [
          {
            "id": 3750,
            "nodeType": "EventDefinition",
            "src": "266:94:9",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "b224da6575b2c2ffd42454faedb236f7dbe5f92a0c96bb99c0273dbe98464c7e",
            "name": "Create",
            "nameLocation": "272:6:9",
            "parameters": {
              "id": 3749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3744,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "300:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "284:31:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3746,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "329:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "321:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3745,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "321:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3748,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "350:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3750,
                  "src": "342:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "342:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "278:81:9"
            }
          },
          {
            "id": 3764,
            "nodeType": "FunctionDefinition",
            "src": "364:87:9",
            "nodes": [],
            "body": {
              "id": 3763,
              "nodeType": "Block",
              "src": "429:22:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3759,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "435:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 3760,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "445:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "435:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "435:11:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3756,
                    "name": "_frensStorage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3753,
                    "src": "415:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$4399",
                      "typeString": "contract IFrensStorage"
                    }
                  }
                ],
                "id": 3757,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3755,
                  "name": "FrensBase",
                  "nameLocations": [
                    "405:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 836,
                  "src": "405:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "405:24:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3753,
                  "mutability": "mutable",
                  "name": "_frensStorage",
                  "nameLocation": "390:13:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3764,
                  "src": "376:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFrensStorage_$4399",
                    "typeString": "contract IFrensStorage"
                  },
                  "typeName": {
                    "id": 3752,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3751,
                      "name": "IFrensStorage",
                      "nameLocations": [
                        "376:13:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4399,
                      "src": "376:13:9"
                    },
                    "referencedDeclaration": 4399,
                    "src": "376:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFrensStorage_$4399",
                      "typeString": "contract IFrensStorage"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "375:29:9"
            },
            "returnParameters": {
              "id": 3758,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "429:0:9"
            },
            "scope": 3876,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3875,
            "nodeType": "FunctionDefinition",
            "src": "455:856:9",
            "nodes": [],
            "body": {
              "id": 3874,
              "nodeType": "Block",
              "src": "557:754:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    3776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3776,
                      "mutability": "mutable",
                      "name": "stakingPool",
                      "nameLocation": "575:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 3874,
                      "src": "563:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$3733",
                        "typeString": "contract StakingPool"
                      },
                      "typeName": {
                        "id": 3775,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3774,
                          "name": "StakingPool",
                          "nameLocations": [
                            "563:11:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3733,
                          "src": "563:11:9"
                        },
                        "referencedDeclaration": 3733,
                        "src": "563:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3733",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3783,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 3780,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3766,
                        "src": "605:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3781,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 257,
                        "src": "613:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFrensStorage_$4399",
                          "typeString": "contract IFrensStorage"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IFrensStorage_$4399",
                          "typeString": "contract IFrensStorage"
                        }
                      ],
                      "id": 3779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "589:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_IFrensStorage_$4399_$returns$_t_contract$_StakingPool_$3733_$",
                        "typeString": "function (address,contract IFrensStorage) returns (contract StakingPool)"
                      },
                      "typeName": {
                        "id": 3778,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3777,
                          "name": "StakingPool",
                          "nameLocations": [
                            "593:11:9"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3733,
                          "src": "593:11:9"
                        },
                        "referencedDeclaration": 3733,
                        "src": "593:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$3733",
                          "typeString": "contract StakingPool"
                        }
                      }
                    },
                    "id": 3782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "563:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "706f6f6c2e657869737473",
                                "id": 3788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "667:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_2e7aaece09fa4791cde3a855fe5360cc9e92113156f25db4328faea689f82419",
                                  "typeString": "literal_string \"pool.exists\""
                                },
                                "value": "pool.exists"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 3791,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3776,
                                    "src": "690:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 3790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "682:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3789,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "682:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "682:20:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_2e7aaece09fa4791cde3a855fe5360cc9e92113156f25db4328faea689f82419",
                                  "typeString": "literal_string \"pool.exists\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3786,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "650:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "654:12:9",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "650:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "650:53:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3785,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "640:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "640:64:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 3795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "706:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3784,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "632:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 3796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "632:79:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3797,
                  "nodeType": "ExpressionStatement",
                  "src": "632:79:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "636f6e74726163742e657869737473",
                                "id": 3802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "802:17:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0bee25abf9dd4d7db1b6a26ed35c16c69cd61a59f46569898d3d99df8a574317",
                                  "typeString": "literal_string \"contract.exists\""
                                },
                                "value": "contract.exists"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 3805,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3776,
                                    "src": "829:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 3804,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "821:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3803,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "821:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "821:20:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0bee25abf9dd4d7db1b6a26ed35c16c69cd61a59f46569898d3d99df8a574317",
                                  "typeString": "literal_string \"contract.exists\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3800,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "785:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3801,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "789:12:9",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "785:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "785:57:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3799,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "775:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "775:68:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 3809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "845:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3798,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "767:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 3810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "767:83:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3811,
                  "nodeType": "ExpressionStatement",
                  "src": "767:83:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "76616c696461746f722e6c6f636b6564",
                                "id": 3816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "891:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_abd7ea9415d7628743a805e41423332e230d8f0ad72e4fa8e7415d9adbd80fc3",
                                  "typeString": "literal_string \"validator.locked\""
                                },
                                "value": "validator.locked"
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 3819,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 3776,
                                    "src": "919:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$3733",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 3818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "911:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3817,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "911:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "911:20:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_abd7ea9415d7628743a805e41423332e230d8f0ad72e4fa8e7415d9adbd80fc3",
                                  "typeString": "literal_string \"validator.locked\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 3814,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "874:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 3815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "878:12:9",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "874:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 3821,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "874:58:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 3813,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "864:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 3822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:69:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 3823,
                        "name": "validatorLocked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3768,
                        "src": "935:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3812,
                      "name": "setBool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "856:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 3824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "856:95:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3825,
                  "nodeType": "ExpressionStatement",
                  "src": "856:95:9"
                },
                {
                  "condition": {
                    "id": 3826,
                    "name": "validatorLocked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3768,
                    "src": "960:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3856,
                    "nodeType": "Block",
                    "src": "1100:114:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "636f6e74726163742e7374617465",
                                      "id": 3846,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1145:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      "value": "contract.state"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 3849,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3776,
                                          "src": "1171:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$3733",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$3733",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 3848,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1163:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3847,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1163:7:9",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3850,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1163:20:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3844,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1128:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3845,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1132:12:9",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1128:16:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3851,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1128:56:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3843,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1118:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1118:67:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "616363657074696e674465706f73697473",
                              "id": 3853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1187:19:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb40db457b263a056d9662810bc3d59355192492c2fc1274da04fbb78484172b",
                                "typeString": "literal_string \"acceptingDeposits\""
                              },
                              "value": "acceptingDeposits"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb40db457b263a056d9662810bc3d59355192492c2fc1274da04fbb78484172b",
                                "typeString": "literal_string \"acceptingDeposits\""
                              }
                            ],
                            "id": 3842,
                            "name": "setString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "1108:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,string memory)"
                            }
                          },
                          "id": 3854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1108:99:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3855,
                        "nodeType": "ExpressionStatement",
                        "src": "1108:99:9"
                      }
                    ]
                  },
                  "id": 3857,
                  "nodeType": "IfStatement",
                  "src": "957:257:9",
                  "trueBody": {
                    "id": 3841,
                    "nodeType": "Block",
                    "src": "976:118:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "636f6e74726163742e7374617465",
                                      "id": 3831,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1021:16:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      "value": "contract.state"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 3834,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3776,
                                          "src": "1047:11:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$3733",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$3733",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 3833,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1039:7:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 3832,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1039:7:9",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 3835,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1039:20:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_e5a4007858c0fd4b5efd38b40d7ab93fa4610a1338a507e5a142b6e8844878ef",
                                        "typeString": "literal_string \"contract.state\""
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 3829,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1004:3:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 3830,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1008:12:9",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "1004:16:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 3836,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1004:56:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 3828,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "994:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 3837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "994:67:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "6177616974696e6756616c696461746f72496e666f",
                              "id": 3838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1063:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7cfdf6f805bf7a834dd5e8169d1f6bc72c63f63c126de09f1ba91782abcfa23d",
                                "typeString": "literal_string \"awaitingValidatorInfo\""
                              },
                              "value": "awaitingValidatorInfo"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7cfdf6f805bf7a834dd5e8169d1f6bc72c63f63c126de09f1ba91782abcfa23d",
                                "typeString": "literal_string \"awaitingValidatorInfo\""
                              }
                            ],
                            "id": 3827,
                            "name": "setString",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 616,
                            "src": "984:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bytes32,string memory)"
                            }
                          },
                          "id": 3839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:103:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3840,
                        "nodeType": "ExpressionStatement",
                        "src": "984:103:9"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3861,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3776,
                            "src": "1239:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$3733",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$3733",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 3860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1231:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3859,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1231:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1231:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3863,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1253:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1257:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1253:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3865,
                        "name": "owner_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3766,
                        "src": "1265:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3858,
                      "name": "Create",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3750,
                      "src": "1224:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address)"
                      }
                    },
                    "id": 3866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1224:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3867,
                  "nodeType": "EmitStatement",
                  "src": "1219:53:9"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 3870,
                            "name": "stakingPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3776,
                            "src": "1293:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPool_$3733",
                              "typeString": "contract StakingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPool_$3733",
                              "typeString": "contract StakingPool"
                            }
                          ],
                          "id": 3869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1285:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1285:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1285:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 3872,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1284:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3773,
                  "id": 3873,
                  "nodeType": "Return",
                  "src": "1278:28:9"
                }
              ]
            },
            "baseFunctions": [
              4713
            ],
            "functionSelector": "319e9090",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create",
            "nameLocation": "464:6:9",
            "overrides": {
              "id": 3770,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "531:8:9"
            },
            "parameters": {
              "id": 3769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3766,
                  "mutability": "mutable",
                  "name": "owner_",
                  "nameLocation": "484:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3875,
                  "src": "476:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "476:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3768,
                  "mutability": "mutable",
                  "name": "validatorLocked",
                  "nameLocation": "502:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 3875,
                  "src": "497:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3767,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "497:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:53:9"
            },
            "returnParameters": {
              "id": 3773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3772,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3875,
                  "src": "548:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "548:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "547:9:9"
            },
            "scope": 3876,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3739,
              "name": "IStakingPoolFactory",
              "nameLocations": [
                "230:19:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4714,
              "src": "230:19:9"
            },
            "id": 3740,
            "nodeType": "InheritanceSpecifier",
            "src": "230:19:9"
          },
          {
            "baseName": {
              "id": 3741,
              "name": "FrensBase",
              "nameLocations": [
                "251:9:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 836,
              "src": "251:9:9"
            },
            "id": 3742,
            "nodeType": "InheritanceSpecifier",
            "src": "251:9:9"
          }
        ],
        "canonicalName": "StakingPoolFactory",
        "contractDependencies": [
          3733
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3876,
          836,
          4714
        ],
        "name": "StakingPoolFactory",
        "nameLocation": "208:18:9",
        "scope": 3877,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 9
}