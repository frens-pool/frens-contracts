{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryProxy",
      "outputs": [
        {
          "internalType": "contract FactoryProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensClaim",
      "outputs": [
        {
          "internalType": "contract FrensClaim",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensInitialiser",
      "outputs": [
        {
          "internalType": "contract FrensInitialiser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "contract IStakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBadWithdrawalCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testDistribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        },
        {
          "internalType": "uint72",
          "name": "y",
          "type": "uint72"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "681:12160:48:-:0;;;;;;1594:4:24;681:12160:48;;;;;;;;;1818:42;1236;681:12160;;;;;;;;;1228:51;681:12160;;;1228:51;681:12160;1426:42;681:12160;1426:42;681:12160;;;1426:42;681:12160;1502:42;681:12160;1502:42;681:12160;;;1502:42;681:12160;;1586:25;681:12160;;;1586:25;681:12160;1645:42;681:12160;1645:42;681:12160;;;1645:42;681:12160;1732:42;681:12160;1724:51;681:12160;;;1724:51;681:12160;1810:51;681:12160;;;1810:51;681:12160;;1883:101;681:12160;;:::i;:::-;;;;;;;;;-1:-1:-1;;681:12160:48;1883:101;681:12160;;;;;;-1:-1:-1;;;;;;;;;;;681:12160:48;-1:-1:-1;;;681:12160:48;;2021:69;681:12160;;;;;;;:::i;:::-;;;;;;-1:-1:-1;681:12160:48;;2021:69;681:12160;2021:69;681:12160;;;;;;;;2114:197;681:12160;;:::i;:::-;;;;;;;-1:-1:-1;681:12160:48;2114:197;681:12160;;;;;;;;;;;;;;;;;;2345:66;;681:12160;;;;;;;;;;;2114:197;681:12160;;;;;;;;;;;;;;;;;;;;;;;2021:69;681:12160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1883:101;681:12160;;;;;;-1:-1:-1;;;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "681:12160:48:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1693:82;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1108:32;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;12601:9;681:12160;;;-1:-1:-1;;;;;681:12160:48;12601:9;;681:12160;;12601:9;:::i;:::-;681:12160;12619:11;681:12160;;;12684:17;681:12160;12619:83;;;;;;681:12160;;;;;;;;12619:83;681:12160;;;12619:83;;;;681:12160;12619:83;;;:::i;:::-;;;;;;;;;;;;;;681:12160;;;-1:-1:-1;;;;;;;;;;;12710:30:48;;;;;681:12160;;;;;;;;;;;;;12710:30;;681:12160;;12710:30;;681:12160;;;;;;-1:-1:-1;;;681:12160:48;;;;12710:30;;;;;;;;;;;681:12160;;;12619:11;681:12160;;;12684:17;681:12160;12748:83;;;;;;681:12160;;;;;;12748:83;;;;;;;;681:12160;12748:83;;;:::i;:::-;;;;;;;;;;;681:12160;;12748:83;;;;:::i;:::-;681:12160;;12748:83;681:12160;12748:83;681:12160;;;;;;;;;12748:83;681:12160;;;;12710:30;;;;:::i;:::-;681:12160;;12710:30;;;;681:12160;;;;12710:30;681:12160;;;;;;;;;12619:83;;;;:::i;:::-;681:12160;;12619:83;;;;681:12160;;;;;;;;;;;;;1146:28;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1195:84;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1781:80;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;-1:-1:-1;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;10226:9;681:12160;-1:-1:-1;;;;;681:12160:48;;10226:9;;681:12160;;10226:9;:::i;:::-;10244:11;681:12160;;;;;;10309:17;681:12160;10244:83;;;;;;681:12160;;-1:-1:-1;;;10244:83:48;;681:12160;;;;;;;;;;;10244:83;;681:12160;10244:83;;;:::i;:::-;;;;;;;;;;;681:12160;10400:20;;;681:12160;;;;;;;;;;;;;;;;;10458:20;;681:12160;;;;;;;;;;10504:6;;;;;;:17;;;681:12160;10501:1782;;;681:12160;;10532:11;681:12160;10537:5;681:12160;;10532:11;:::i;:::-;681:12160;;;;10553:48;;;;;681:12160;;;;;;;;;;10553:48;;;;;;;;;;;;;;;10501:1782;681:12160;;10611:9;681:12160;10616:3;681:12160;;10611:9;:::i;:::-;681:12160;;;;10630:46;;;;;681:12160;;;;;10630:46;;;;;;;;;;;;;;;10501:1782;681:12160;;10696:9;681:12160;10226:9;681:12160;;10696:9;:::i;:::-;681:12160;;;;;10716:19;;;;;681:12160;;;;;;;;;;;;;10716:19;;;;;;;;;;10501:1782;681:12160;;;10537:5;681:12160;;10765:22;681:12160;;10616:3;681:12160;;10815:20;681:12160;;;;;10874:28;10864:38;10874:28;;10864:38;;:::i;:::-;681:12160;;;;;;;;;;;;;;;;;;;;;;;10978:28;10967:53;10978:28;10968:38;10978:28;;10968:38;;:::i;:::-;10967:53;:::i;:::-;11030:32;;;;;;10501:1782;11030:32;;;;681:12160;;;11072:35;;;;;681:12160;;;;;;;;;;;;;11072:35;;;;;;;;;;10501:1782;11120:15;;;;11514:21;11120:15;;681:12160;11700:52;11120:15;;11117:34;;10501:1782;681:12160;11164:13;;11161:29;;10501:1782;11422:56;11228:25;;;;:::i;:::-;681:12160;10537:5;681:12160;;11278:22;11422:56;:::i;:::-;11514:21;:::i;:::-;681:12160;10616:3;681:12160;;11558:20;11700:52;:::i;:::-;681:12160;;11161:29;11179:11;;-1:-1:-1;11161:29:48;;11117:34;11137:14;;-1:-1:-1;11117:34:48;;11072:35;;;;;;;;:::i;:::-;681:12160;;11072:35;;;;;;681:12160;;;;11072:35;681:12160;;;11030:32;681:12160;;;;;;;;;;;11030:32;;;;;681:12160;1671:64:24;;;681:12160:48;;;;;;;;10716:19;;;;:::i;:::-;681:12160;;10716:19;;;;10630:46;;;;:::i;:::-;681:12160;;10630:46;;;;;681:12160;;;10553:48;;;;:::i;:::-;681:12160;;10553:48;;;;681:12160;;;;10501:1782;11767:516;;;;;-1:-1:-1;11767:516:48;;;;;;681:12160;;;-1:-1:-1;;;;;;;;;;;11788:37:48;;;;;681:12160;;;;;;;;11788:37;;;;;;681:12160;11788:37;;;:::i;:::-;;;;;;;;;;;;;;11767:516;681:12160;;11835:16;681:12160;11845:5;681:12160;;11835:16;:::i;:::-;681:12160;;11861:37;;;;;681:12160;;;;;;;;;;;;11861:37;;;;;;;;;;11767:516;;681:12160;;11788:37;;;;:::i;:::-;681:12160;;11788:37;;;;;681:12160;;;;;;;;;11788:37;681:12160;;;11767:516;681:12160;;;;;;11923:11;681:12160;11928:5;681:12160;;11923:11;:::i;:::-;681:12160;;;;11944:48;;;;;;681:12160;;;;;;;;;;;;11944:48;;;;;;;;;;;;;;;11767:516;681:12160;;12002:9;681:12160;12007:3;681:12160;;12002:9;:::i;:::-;681:12160;;;;12021:46;;;;;681:12160;;;;;12021:46;;;;;;;;;;;;;;;;;;11767:516;681:12160;;12087:9;681:12160;10226:9;681:12160;;12087:9;:::i;:::-;681:12160;;;;12107:19;;;;;681:12160;;;;;;;;;;;;;12107:19;;;;;;;;;;;;;11767:516;681:12160;;;;;;;;;12136:32;;;;;11767:516;12136:32;;;;-1:-1:-1;;;;;;;;;;;12178:51:48;;;;;681:12160;;;;;;;;;;;;;12178:51;;681:12160;;12178:51;;681:12160;;;;;;;;;;;12178:51;;;;;;;;;;;11767:516;681:12160;;;;12239:35;;;;;681:12160;;;;;;;;;;;;;12239:35;;;;;;;;;;11767:516;;681:12160;;12239:35;681:12160;;12178:51;;;;:::i;:::-;681:12160;;12178:51;;;;12136:32;;;;;12107:19;;;;:::i;:::-;681:12160;;12107:19;;;;12021:46;;;;:::i;:::-;681:12160;;12021:46;;;;;681:12160;;;11944:48;;;;:::i;:::-;681:12160;;11944:48;;;;;681:12160;;;;;;;;;10504:17;10514:7;10518:3;10514:7;;10504:17;;681:12160;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;681:12160:48;;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;681:12160:48;10244:83;;;;:::i;:::-;681:12160;;10244:83;;;;681:12160;;;;;;;;;;;;;;;;;802:38;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;846:52;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;980:44;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;5462:11;681:12160;;;-1:-1:-1;;;5462:19:48;;681:12160;5462:19;;-1:-1:-1;;;;;681:12160:48;5462:19;;681:12160;;;;;;;;5462:19;;;;;;;;;;;681:12160;;;5524:9;681:12160;;;;3678:6:24;;;3674:212;;681:12160:48;;;3674:212:24;-1:-1:-1;;;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;3705:44:24;681:12160:48;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;3768:34:24;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;3821:34:24;;;;;:::i;:::-;3674:212;;;681:12160:48;;;5462:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;681:12160;;;;;;;;;;;;;726:24;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;-1:-1:-1;;681:12160:48;;;;;;:::i;:::-;;;;;;;;;;;7809:9;681:12160;7809:9;;-1:-1:-1;;;;;681:12160:48;7809:9;:::i;:::-;7827:11;681:12160;7892:17;681:12160;;;-1:-1:-1;;;;;681:12160:48;7827:83;;;;;681:12160;;-1:-1:-1;;;7827:83:48;;681:12160;;;;;;;;;;;7827:83;;681:12160;7827:83;;;:::i;:::-;;;;;;;;;;;681:12160;;;;;;;;;7921:6;;:15;;;681:12160;7921:38;;;681:12160;7918:1062;;;-1:-1:-1;7980:5:48;681:12160;7970:16;;-1:-1:-1;;;;;681:12160:48;7970:16;:::i;:::-;7827:11;681:12160;;;-1:-1:-1;;;;;681:12160:48;7996:37;;;;;681:12160;;;;;;;;;;;;7996:37;;681:12160;;;7996:37;;;;;;;;;7918:1062;-1:-1:-1;;8053:14:48;681:12160;7980:5;681:12160;;;-1:-1:-1;;;8053:44:48;;-1:-1:-1;;;;;681:12160:48;;;;8053:44;;681:12160;;;;1671:64:24;;;681:12160:48;;;;;;;;;;;8053:44;;;;;;;;;;;7918:1062;8118:7;;;;;;:::i;:::-;7827:11;681:12160;;;-1:-1:-1;;;8151:32:48;;681:12160;8151:32;;1671:64:24;;;681:12160:48;;;;;;;;;-1:-1:-1;;;;;681:12160:48;8151:32;;;;;;;;;;7918:1062;8193:19;681:12160;;;;;8193:19;:::i;:::-;7827:11;681:12160;;;-1:-1:-1;;;;;681:12160:48;8222:27;;;;;681:12160;;-1:-1:-1;;;8222:27:48;;681:12160;8222:27;;1671:64:24;;;681:12160:48;;;;;;;;;;;;;;;;;;;;8222:27;;;;;;;;;;7918:1062;-1:-1:-1;;7827:11:48;681:12160;;;-1:-1:-1;;;8274:32:48;;681:12160;8274:32;;1671:64:24;;;;681:12160:48;;;;;;;;-1:-1:-1;;;;;681:12160:48;8274:32;;;;;;;;;;;7918:1062;681:12160;8368:7;681:12160;;8327:17;681:12160;;;;;;8327:17;:::i;:::-;8368:7;:::i;8274:32::-;;;;681:12160;8274:32;;681:12160;8274:32;;;;;;681:12160;8274:32;;;:::i;:::-;;;681:12160;;;;;;8368:7;8274:32;;;;;-1:-1:-1;8274:32:48;;8222:27;;;;:::i;:::-;681:12160;;8222:27;;;;8151:32;;681:12160;8151:32;;681:12160;8151:32;;;;;;681:12160;8151:32;;;:::i;:::-;;;681:12160;;;;8193:19;681:12160;;8151:32;;;;;-1:-1:-1;8151:32:48;;8053:44;;;;681:12160;8053:44;;681:12160;8053:44;;;;;;681:12160;8053:44;;;:::i;:::-;;;681:12160;;;;;8053:44;;;;;;;-1:-1:-1;8053:44:48;;7996:37;;;;:::i;:::-;681:12160;;7996:37;;;;7918:1062;681:12160;;;;;;-1:-1:-1;;;;;;;;;;;8412:37:48;;;;;681:12160;;;;;;;;8412:37;;;;;;681:12160;8412:37;;;:::i;:::-;;;;;;;;;;;;;;8391:589;-1:-1:-1;;8469:5:48;681:12160;8459:16;;-1:-1:-1;;;;;681:12160:48;8459:16;:::i;:::-;7827:11;681:12160;-1:-1:-1;;;;;681:12160:48;;8485:37;;;;;681:12160;;;;;;;;;;;;;8485:37;;681:12160;8485:37;;;;;;;;;8391:589;;681:12160;;8412:37;;;;:::i;:::-;681:12160;;8412:37;;;;8391:589;8550:8;681:12160;;;8540:18;8550:8;;;-1:-1:-1;;;;;;;;;;;8570:60:48;;;;;681:12160;;;;;;;;8570:60;;;;;;681:12160;8570:60;;;:::i;8537:443::-;8738:5;681:12160;8728:16;;-1:-1:-1;;;;;681:12160:48;8728:16;:::i;:::-;7827:11;681:12160;-1:-1:-1;;;;;681:12160:48;;8754:37;;;;;681:12160;;;;;;;;;;;;;8754:37;;681:12160;8754:37;;;;;;;;;8537:443;-1:-1:-1;8811:14:48;681:12160;8738:5;681:12160;;;-1:-1:-1;;;8811:44:48;;-1:-1:-1;;;;;681:12160:48;;;;8811:44;;681:12160;;;;1671:64:24;;;681:12160:48;;;;;;;;;;8811:44;;;;;;;;;;;8537:443;8876:7;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;8895:39:48;;;;;681:12160;;;;;;;;;;;;;8895:39;;681:12160;;8895:39;;681:12160;;;;;;-1:-1:-1;;;681:12160:48;;;;8895:39;;;;;;;;;;;8537:443;-1:-1:-1;;7827:11:48;681:12160;-1:-1:-1;;;;;681:12160:48;8944:27;;;;;681:12160;;-1:-1:-1;;;8944:27:48;;681:12160;8944:27;;1671:64:24;;;;681:12160:48;;;;;;;;;;;;;;;;;;;8944:27;;;;;;;;;;8537:443;;681:12160;;8895:39;;;;:::i;:::-;681:12160;;8895:39;;;;;681:12160;;;;;;;;;8811:44;;;;681:12160;8811:44;;;;;;;;;681:12160;8811:44;;;:::i;:::-;;;681:12160;;;;;;;8811:44;;;;;;-1:-1:-1;8811:44:48;;8754:37;;;;:::i;:::-;681:12160;;8754:37;;;;7921:38;681:12160;7951:8;681:12160;;;7940:19;;7921:38;;:15;681:12160;;;;7931:5;;7921:15;;7827:83;;;;:::i;:::-;681:12160;;7827:83;;;;681:12160;;;;;;;;;;;;;;;12353:9;681:12160;-1:-1:-1;;;;;681:12160:48;;12353:9;;681:12160;;12353:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;12371:49:48;;;;;;681:12160;;;;;12371:49;;681:12160;;;;;;12371:49;;681:12160;12371:49;;681:12160;;;;;;;;;;;12371:49;;;;;;;;;;;681:12160;;;12428:11;681:12160;;12506:17;681:12160;12428:96;;;;;;681:12160;;;;;;12428:96;;681:12160;;12428:96;;681:12160;;12450:6;681:12160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;681:12160:48;;;;;;;;;;12428:11;681:12160;;-1:-1:-1;;;681:12160:48;;;;;;;;;;12495:9;681:12160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:24;12428:96:48;;;;;;;;;;681:12160;;;12495:9;681:12160;;;;;-1:-1:-1;681:12160:48;;;;;;;;;;-1:-1:-1;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;681:12160:48;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;681:12160:48;;-1:-1:-1;681:12160:48;;-1:-1:-1;681:12160:48;;-1:-1:-1;681:12160:48;;;;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;681:12160:48;;;;;;;;;;;;12450:6;681:12160;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;-1:-1:-1;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;681:12160:48;;;;;;;;12371:49;;;;:::i;:::-;681:12160;;12371:49;;;;681:12160;;;;;;;;;;;;;942:32;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1618:69;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1066:36;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;5617:41:48;;;;;;681:12160;;-1:-1:-1;;;5617:41:48;;;681:12160;;5617:41;;681:12160;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;5617:41;;;;;;;;;681:12160;-1:-1:-1;5671:5:48;681:12160;-1:-1:-1;;;;;681:12160:48;;5666:11;;681:12160;;5666:11;:::i;:::-;5685;681:12160;;;;;;;;5685:37;;;;;;681:12160;;;;;;;;;;5685:37;;;;;;;;;;;;;;;681:12160;;;5754:9;681:12160;5754:9;681:12160;;5754:9;:::i;:::-;681:12160;;;;5837:17;681:12160;5772:83;;;;;;681:12160;;-1:-1:-1;;;5772:83:48;;681:12160;;;;;;;;;;;5772:83;;681:12160;5772:83;;;:::i;:::-;;;;;;;;;;;;;;681:12160;5866:5;;;;;;:22;;;681:12160;5863:674;;;681:12160;;;5899:16;681:12160;5671:5;681:12160;;5899:16;:::i;:::-;681:12160;;;;5925:37;;;;;;681:12160;;;;;;;5925:37;;;;;;;;;;;;;;;5863:674;681:12160;;;5982:14;681:12160;;;;5671:5;681:12160;;;;;;;;;;;;5982:44;;681:12160;5982:44;;681:12160;;;;;1671:64:24;5982:44:48;;;;;;;;;;;5863:674;6047:7;;;;;;:::i;:::-;681:12160;;;;;;;;;;;;;;;;6080:32;;681:12160;6080:32;;1671:64:24;6080:32:48;;;;;;;;;;;5863:674;6122:19;;681:12160;6122:19;;;;;;:::i;:::-;681:12160;;;;;;;;;;;6165:30;;;;;;;;;;;;;5863:674;6205:19;;;;;:::i;6165:30::-;;;;;;;;;;;;;;;;:::i;:::-;;;681:12160;;;;6205:19;681:12160;;6165:30;;;;;;;;;6080:32;;;;;;;;;;;;;;;;;:::i;:::-;;;681:12160;;;;;;;6080:32;;;;;;;;681:12160;;;;;;;;;5982:44;;;;;;;;;;;;;;;;:::i;:::-;;;681:12160;;;;;5982:44;;;;;;;;5925:37;;;;:::i;:::-;681:12160;;5925:37;;;;5863:674;6239:298;;;;;;;;;;6242:6;;;6260:37;;;;;681:12160;;;;6260:37;;;;;;;;;681:12160;6260:37;;;:::i;:::-;;;;;;;;;;;;;;6239:298;681:12160;;6307:16;681:12160;5671:5;681:12160;;6307:16;:::i;:::-;681:12160;;6333:37;;;;;681:12160;;;;;6333:37;;;;;;;;;;;;;;;6239:298;;681:12160;;6260:37;;;;:::i;:::-;681:12160;;6260:37;;;;6239:298;6395:60;;;;;681:12160;;;;6395:60;;;;;;;;;681:12160;6395:60;;;:::i;5866:22::-;5875:13;5880:8;5875:13;;;5866:22;;5772:83;;;;:::i;:::-;681:12160;;5772:83;;;;5685:37;;;;:::i;:::-;681:12160;;5685:37;;;;5617:41;;;;:::i;:::-;681:12160;;5617:41;;;;681:12160;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;9059:11;681:12160;;9142:5;681:12160;-1:-1:-1;;;;;681:12160:48;;;9051:28;;681:12160;9137:11;;681:12160;;9137:11;:::i;:::-;681:12160;-1:-1:-1;;;;;;;;;;;9156:41:48;;;;;681:12160;;-1:-1:-1;;;9156:41:48;;681:12160;;9156:41;;681:12160;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;;9156:41;;;;;;;;681:12160;;;;;;;9205:56;;;;;681:12160;;;;;;9205:56;;;;9238:20;;681:12160;9238:20;;9205:56;;;;;;;;;;;;;681:12160;;;9577:9;681:12160;9577:9;681:12160;;9577:9;:::i;:::-;681:12160;;;;9660:17;681:12160;9595:83;;;;;;681:12160;;-1:-1:-1;;;9595:83:48;;681:12160;;;;;;;;;;;9595:83;;681:12160;9595:83;;;:::i;:::-;;;;;;;;;;;;;;681:12160;;;9686:11;681:12160;9142:5;681:12160;;9686:11;:::i;:::-;681:12160;;;;9705:56;;;;;;681:12160;;;;;;;9705:56;;;;;;;;;;;;;;;681:12160;;;;;;;;;;;9817:28;681:12160;;;;;;9817:28;;;:::i;:::-;681:12160;9893:15;681:12160;;;;;;;;;;;;9893:35;;;;;;;;;;;;;;;681:12160;1671:64:24;681:12160:48;1671:64:24;;681:12160:48;;9883:46;681:12160;9942:9;681:12160;9577:9;681:12160;;9942:9;:::i;:::-;681:12160;;;;9960:19;;;;;681:12160;;;;;;;;;;;;;9960:19;;;;;;;;;;;;;;681:12160;;;10012:28;681:12160;;;10012:28;;;:::i;:::-;9893:15;681:12160;;;;;;10071:35;;;;;;;;;;;;7918:5:27;10071:35:48;;;;;681:12160;1671:64:24;681:12160:48;1671:64:24;;681:12160:48;;10061:46;:68;7918:5:27;;:::i;10071:35:48:-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;9960:19;;;;;;:::i;:::-;681:12160;;9960:19;;;;;9893:35;;;;;;;;;;;;;:::i;:::-;;;;681:12160;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;681:12160:48;9705:56;;;;:::i;:::-;681:12160;;9705:56;;;;9595:83;;;;:::i;:::-;681:12160;;9595:83;;;;9205:56;;;;:::i;:::-;681:12160;;9205:56;;;;9156:41;;;;:::i;:::-;681:12160;;9156:41;;;;681:12160;;;;;;;;;;;;;756:40;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;904:32;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1390:78;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1474:70;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;1030:30;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;2488:18;;;;;;;;-1:-1:-1;;;;;2488:18:48;;;;;;;;;;;;;;;;;;;681:12160;;;;;;2473:33;681:12160;;-1:-1:-1;;;;;681:12160:48;;;;;2473:33;681:12160;;;2550:30;;;;;;;;;;-1:-1:-1;;;;;2550:30:48;;;;;;;681:12160;2550:30;;;;;;;681:12160;;;;2550:30;;;;;;;;;681:12160;;;;;;;2535:45;681:12160;;-1:-1:-1;;;;;681:12160:48;;;;;2535:45;681:12160;;;-1:-1:-1;;;;;681:12160:48;;2633:50;681:12160;;;2633:50;681:12160;;;;;;2473:33;681:12160;;;;2737:34;;;;;;;;;;-1:-1:-1;;;;;2737:34:48;;;;;;;;681:12160;2737:34;;;;681:12160;;2737:34;;;;;;;;;681:12160;;;;;;-1:-1:-1;;;;;681:12160:48;;2718:53;681:12160;;;2718:53;681:12160;-1:-1:-1;;;;;;;;;;;2850:38:48;;;;681:12160;;-1:-1:-1;;;2850:38:48;;2867:4;681:12160;2850:38;;681:12160;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2850:38:48;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;-1:-1:-1;;;;;681:12160:48;2896:75;;;;;681:12160;;;;;;;;;;;;;2896:75;;;681:12160;2896:75;;681:12160;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;2896:75;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;-1:-1:-1;;;;;681:12160:48;2979:67;;;;;681:12160;;;;;;;;;;;;;2979:67;;;681:12160;2979:67;;681:12160;;;;;;2979:67;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;3122:18;681:12160;-1:-1:-1;;;;;681:12160:48;;;;;3085:71;;;;;681:12160;;;;;;;;;;;;;;;3085:71;;681:12160;3085:71;;681:12160;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;3085:71;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;3237:7;681:12160;-1:-1:-1;;;;;681:12160:48;;;;;3200:64;;;;;681:12160;;;;;;;;;;;;;;;3200:64;;681:12160;3200:64;;681:12160;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;3200:64;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;3333:10;681:12160;-1:-1:-1;;;;;681:12160:48;;;;;3296:55;;;;;681:12160;;;;;;;;;;;;;;;3296:55;;681:12160;3296:55;;681:12160;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;3296:55;;;;;;;;681:12160;;;;;;;;2473:33;681:12160;;;;;3404:32;;;;;-1:-1:-1;;;;;3404:32:48;;;;;;;;;;;;;;;;681:12160;;3404:32;;;;;;;;;;;;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;-1:-1:-1;;;;;;681:12160:48;;;;;;2718:53;681:12160;;;;;;3476:71;;;;;681:12160;;;-1:-1:-1;;;3476:71:48;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;3476:71;;681:12160;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;3476:71;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;3555:66;;;;;681:12160;;;;;;;;;;;;;;;3555:66;;681:12160;3555:66;;681:12160;;;;;;3555:66;;;;;;;;681:12160;;;;;;;;2473:33;681:12160;;;;;3673:36;;;;;-1:-1:-1;;;;;3673:36:48;;;;;;;;;;;;;;;;681:12160;;3673:36;;;;;;;;;;;;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;-1:-1:-1;;;;;;681:12160:48;;;;;;2718:53;681:12160;;;;;;3744:79;;;;;681:12160;;;-1:-1:-1;;;3744:79:48;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;3744:79;;681:12160;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;3744:79;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;3831:69;;;;;681:12160;;;;;;;;;;;;;;;3831:69;;681:12160;3831:69;;681:12160;;;;;;3831:69;;;;;;;;681:12160;;;;;;;;2473:33;681:12160;;;;;3943:28;;;;;-1:-1:-1;;;;;3943:28:48;;;;;;;;;;;;;;;;681:12160;;3943:28;;;;;;;;;;;;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;-1:-1:-1;;;;;;681:12160:48;;;;;;2718:53;681:12160;;;;;;4005:63;;;;;681:12160;;;-1:-1:-1;;;4005:63:48;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;4005:63;;681:12160;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;4005:63;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;4076:61;;;;;681:12160;;;;;;;;;;;;;;;4076:61;;681:12160;4076:61;;681:12160;;;;;;4076:61;;;;;;;;681:12160;;;;;;;;2473:33;681:12160;;;;;4189:33;;;;;-1:-1:-1;;;;;4189:33:48;;;;;;;;;;;;;;;;681:12160;;4189:33;;;;;;;;;;;;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;-1:-1:-1;;;;;;681:12160:48;;;;;;2718:53;681:12160;;;;;;4260:73;;;;;681:12160;;;-1:-1:-1;;;4260:73:48;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;4260:73;;681:12160;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;4260:73;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;4341:67;;;;;681:12160;;;;;;;;;;;;;;;4341:67;;681:12160;4341:67;;681:12160;;;;;;4341:67;;;;;;;;681:12160;;;;;;;;2473:33;681:12160;;;;;4465:40;;;;;-1:-1:-1;;;;;4465:40:48;;;;;;;;;;;;;;;;681:12160;;4465:40;;;;;;;;;;;;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;-1:-1:-1;;;;;;681:12160:48;;;;;;2718:53;681:12160;;;;;;4541:87;;;;;681:12160;;;-1:-1:-1;;;4541:87:48;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;4541:87;;681:12160;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;4541:87;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;4636:74;;;;;681:12160;;;;;;;;;;;;;;;4636:74;;681:12160;4636:74;;681:12160;;;;;;4636:74;;;;;;;;681:12160;;;;;;;;2473:33;681:12160;;;;;4747:26;;;;;-1:-1:-1;;;;;4747:26:48;;;;;;;;;;;;;;;;681:12160;;4747:26;;;;;;;;;;;;;4736:37;681:12160;;-1:-1:-1;;;;;681:12160:48;;;-1:-1:-1;;;;;;681:12160:48;;;;;;2718:53;681:12160;;;;;;4804:59;;;;;681:12160;;;-1:-1:-1;;;4804:59:48;;681:12160;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;4804:59;;681:12160;;;;;4736:37;681:12160;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;;;4804:59;;;;;;;;681:12160;-1:-1:-1;2718:53:48;681:12160;4736:37;681:12160;-1:-1:-1;;;;;681:12160:48;;;;;4871:60;;;;;681:12160;;;;;;;;;;;;;;;4871:60;;681:12160;4871:60;;681:12160;;;;;;4871:60;;;;;;;;681:12160;5013:38;;-1:-1:-1;;;;;;;;;;;5013:38:48;;;;681:12160;;-1:-1:-1;;;5013:38:48;;2867:4;681:12160;5013:38;;681:12160;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5013:38:48;;;;;;;;681:12160;-1:-1:-1;2473:33:48;681:12160;-1:-1:-1;;;;;681:12160:48;5059:32;;;;;681:12160;;;;;;;;;;;;;5059:32;;;;;;;;;;681:12160;-1:-1:-1;2633:50:48;681:12160;5181:9;681:12160;;;-1:-1:-1;;;5168:29:48;;-1:-1:-1;;;;;681:12160:48;;;;5168:29;;681:12160;;;;;;;;;;;;;;;;;;5168:29;;;;;;;;;;;681:12160;;;;;;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;5168:29;;;;681:12160;5168:29;681:12160;5168:29;;;;;;;:::i;:::-;;;;5059:32;;;;:::i;:::-;681:12160;;5059:32;;;;5013:38;;;;:::i;:::-;681:12160;;5013:38;;;;4871:60;;;;:::i;:::-;681:12160;;4871:60;;;;4804:59;;;;:::i;:::-;681:12160;;4804:59;;;;4747:26;-1:-1:-1;;;1671:64:24;;;681:12160:48;1671:64:24;681:12160:48;1671:64:24;;4636:74:48;;;;:::i;:::-;681:12160;;4636:74;;;;4541:87;;;;:::i;:::-;681:12160;;4541:87;;;;4341:67;;;;:::i;:::-;681:12160;;4341:67;;;;4260:73;;;;:::i;:::-;681:12160;;4260:73;;;;4076:61;;;;:::i;:::-;681:12160;;4076:61;;;;4005:63;;;;:::i;:::-;681:12160;;4005:63;;;;3831:69;;;;:::i;:::-;681:12160;;3831:69;;;;3744:79;;;;:::i;:::-;681:12160;;3744:79;;;;3555:66;;;;:::i;:::-;681:12160;;3555:66;;;;3476:71;;;;:::i;:::-;681:12160;;3476:71;;;;3296:55;;;;:::i;:::-;681:12160;;3296:55;;;;3200:64;;;;:::i;:::-;681:12160;;3200:64;;;;3085:71;;;;:::i;:::-;681:12160;;3085:71;;;;2979:67;;;;:::i;:::-;681:12160;;2979:67;;;;2896:75;;;;:::i;:::-;681:12160;;2896:75;;;;2850:38;;;;:::i;:::-;681:12160;;2850:38;;;;2737:34;-1:-1:-1;;;1671:64:24;;;681:12160:48;1671:64:24;;;;2550:30:48;-1:-1:-1;;;1671:64:24;;;681:12160:48;1671:64:24;;;;2488:18:48;-1:-1:-1;;;1671:64:24;;;681:12160:48;1671:64:24;;;;681:12160:48;;;;;;;-1:-1:-1;;681:12160:48;;;;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;;;;6634:9;681:12160;-1:-1:-1;;;;;681:12160:48;6634:9;;681:12160;;6634:9;:::i;:::-;6652:11;681:12160;;;;;6717:17;681:12160;6652:83;;;;;681:12160;;6652:83;681:12160;;;;;;;;;;;;6652:83;;681:12160;6652:83;;;:::i;:::-;;;;;;;;;;;681:12160;6746:5;;;;;;:38;;;681:12160;6743:973;;;681:12160;;6795:16;681:12160;6805:5;681:12160;;6795:16;:::i;:::-;681:12160;;;;;6821:37;;;;;681:12160;;;;;;;;;;;;;6821:37;;;;;;;;;;6743:973;681:12160;;;6878:14;681:12160;;;;6805:5;681:12160;;;;;;;;;;;6878:44;;681:12160;6878:44;;681:12160;;;;;1671:64:24;681:12160:48;;;6878:44;;;;;;;;;;;;;;6743:973;6943:7;;;;;;:::i;:::-;681:12160;;;;;;;;;;;;;;6976:32;;;;;681:12160;6976:32;;1671:64:24;6976:32:48;;;;;;;;;;6743:973;7018:19;;;;;:::i;:::-;681:12160;;;;7047:38;;;;;;;681:12160;;;;;;;;;;;;;7047:38;;;681:12160;7047:38;;1671:64:24;7047:38:48;;;;;;;;;;;6743:973;681:12160;;;;;;;7110:32;;;;;;;681:12160;7110:32;;1671:64:24;7110:32:48;;;;;;;;;;;6743:973;7163:17;;7204:7;7163:17;;;;:::i;7110:32::-;;;;;;;;;;;;;;;;;:::i;:::-;;;681:12160;;;;;;;7163:17;7110:32;;;;;;;7047:38;;;;;;;:::i;:::-;681:12160;;7047:38;;;;;;681:12160;;;;6976:32;;;;;;;;;;;;;;;:::i;:::-;;;681:12160;;;;7018:19;681:12160;;6976:32;;;;;;;;681:12160;;;;;;;;;6878:44;;;;;;;;;;;;;;;;;:::i;:::-;;;681:12160;;;;;6878:44;;;;;;;;;;681:12160;;;;;;;;;6821:37;;;;:::i;:::-;681:12160;;6821:37;;;;6743:973;7227:489;;;;;;;;7230:6;;;681:12160;;-1:-1:-1;;;;;;;;;;;7248:37:48;;;;;681:12160;;;;;;;;7248:37;;;;;;681:12160;7248:37;;;:::i;7227:489::-;681:12160;;;;7462:16;681:12160;7472:5;681:12160;;7462:16;:::i;:::-;681:12160;;;;7488:37;;;;;681:12160;;;;;;;;;;;;7488:37;;;;;;;;;;;;;7227:489;681:12160;;;7545:14;681:12160;;;;;7472:5;681:12160;;;;;;;;;;;;7545:44;;681:12160;7545:44;;681:12160;;;;;1671:64:24;7545:44:48;;;;;;;;;;;7227:489;681:12160;-1:-1:-1;;;;;;;;;;;7599:60:48;;;;;681:12160;;;;;;;;7599:60;;;;;;681:12160;7599:60;;;:::i;:::-;;;;;;;;;;;;;;7227:489;681:12160;;;;7669:38;;;;;;681:12160;;;;;;;;;;;;7669:38;;681:12160;7669:38;;1671:64:24;7669:38:48;;;;;;;;7227:489;;681:12160;;7599:60;;;;:::i;:::-;681:12160;;7599:60;;;;7545:44;;;;;681:12160;7545:44;;;;;;;;;681:12160;7545:44;;;:::i;:::-;;;681:12160;;;;;;;7545:44;;;;;;;-1:-1:-1;7545:44:48;;7488:37;;;;:::i;:::-;681:12160;;7488:37;;;;6746:38;6755:17;6776:8;6755:17;;;;:::i;:::-;:29;;6746:38;;6652:83;;;;;;;:::i;:::-;;;;;681:12160;;;;;;;;;;;:::o;1671:64:24:-;-1:-1:-1;;;;;1671:64:24;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:24;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;;-1:-1:-1;;1671:64:24;;;;:::o;:::-;;;;;;;;;;:::i;:::-;681:12160:48;1671:64:24;681:12160:48;;1671:64:24;;;:::i;:::-;;;;-1:-1:-1;1671:64:24;;;;:::o;:::-;;;:::o;1819:584::-;1873:7;681:12160:48;;;;;;;;;;;;;;;1896:14:24:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:24;;1980:374;;2367:19;;;:::o;1980:374::-;681:12160:48;;;;;2196:43:24;;;681:12160:48;;;;1671:64:24;;;681:12160:48;1671:64:24;;;681:12160:48;2196:43:24;;681:12160:48;1671:64:24;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;;;;2086:175;;1671:64;;;;;;681:12160:48;1671:64:24;2086:175;;;1671:64;;;;;;;;;;;;;;;;:::i;:::-;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;2196:43;1671:64;;;2312:27;;1671:64;;;;2196:43;2312:27;1671:64;681:12160:48;;;;1671:64:24;;;;2297:42;2367:19;:::o;681:12160:48:-;;;;;;;;;;-1:-1:-1;;;;;681:12160:48;;;;;;;:::o;2410:424:24:-;-1:-1:-1;;;;;;;;;;;2939:104:24;;2445:359;;2410:424;681:12160:48;;;;2928:1:24;681:12160:48;;;2928:1:24;681:12160:48;2410:424:24:o;2445:359::-;681:12160:48;;2645:67:24;;;;681:12160:48;;;;1671:64:24;;;681:12160:48;;;1671:64:24;2705:4;681:12160:48;;;1671:64:24;681:12160:48;2645:67:24;;681:12160:48;1671:64:24;;;;;;-1:-1:-1;;;;;1671:64:24;;;;;-1:-1:-1;1671:64:24;2534:196;;1671:64;;;;681:12160:48;1671:64:24;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;681:12160:48;;;;;;-1:-1:-1;6674:6:48;681:12160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;681:12160:48;;;;;;;6682:22;681:12160;-1:-1:-1;;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;681:12160:48;6706:9;681:12160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:24;681:12160:48:o;:::-;;;;;6706:9;-1:-1:-1;681:12160:48;;;-1:-1:-1;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;681:12160:48;;;;;;;;;;;;;6682:22;-1:-1:-1;681:12160:48;;;;-1:-1:-1;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;681:12160:48;;;;;;;;;;;;;;;;;-1:-1:-1;681:12160:48;;-1:-1:-1;681:12160:48;;;;;;;;;;;;;;6674:6;-1:-1:-1;681:12160:48;;;;-1:-1:-1;681:12160:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;:::o;3255:157:24:-;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;3345:30:24;;;:::i;:::-;3255:157::o;5202:262::-;5259:6;;;5255:203;;5202:262;;:::o;5255:203::-;681:12160:48;;;;-1:-1:-1;;;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;5286:41:24;681:12160:48;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;1671:64:24;5346:31;;;;;;;;681:12160:48;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;1671:64:24;5396:31;;;;;:::i;1449:98:27:-;-1:-1:-1;;;;;;;;;;;1495:22:27;;;;;681:12160:48;;-1:-1:-1;;;1495:22:27;;-1:-1:-1;;;;;681:12160:48;;;1495:22:27;;;681:12160:48;;;-1:-1:-1;;;681:12160:48;;;1671:64:24;1495:22:27;;;681:12160:48;;;1495:22:27;;;;;;;;;;1449:98;1527:13;;;;;;681:12160:48;;;;;;;;;;;;;;;1527:13:27;;1495:22;1527:13;;681:12160:48;1527:13:27;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;681:12160:48;;1449:98:27;:::o;1495:22::-;;;;;;;:::i;:::-;;;;;1998:108;-1:-1:-1;;;;;;;;;;;2049:22:27;;;;;681:12160:48;;-1:-1:-1;;;2049:22:27;;-1:-1:-1;;;;;681:12160:48;;;2049:22:27;;;681:12160:48;;;-1:-1:-1;;;681:12160:48;;;1671:64:24;2049:22:27;;;681:12160:48;;;2049:22:27;;;;;;;;;;1998:108;2081:18;;;;;;681:12160:48;;;;;;;;;;;;;;;2081:18:27;;2049:22;2081:18;;681:12160:48;2081:18:27;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;681:12160:48;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;681:12160:48;;;;;;;;;;;;;;;;;;:::i;:::-;;1671:64:24;681:12160:48;;1671:64:24;;;:::i;:::-;681:12160:48;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;10679:516:27:-;;37288:5;;;;;;37308;;;;:::i;:::-;37288:45;;11476:1:48;10853:16:27;;10849:340;;10679:516;;;:::o;10849:340::-;681:12160:48;;;;;;;-1:-1:-1;;;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;10890:53:27;681:12160:48;;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;1671:64:24;10962:32:27;;;;;;;;;681:12160:48;;;;;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;;;;;;;1671:64:24;11013:32:27;;;681:12160:48;;;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;11476:1;681:12160;;;1671:64:24;11064:39:27;681:12160:48;;;;;;;;;;-1:-1:-1;;;681:12160:48;;;;;;1671:64:24;11122:36:27;;;:::i;37288:45::-;37328:5;;;;:::i;:::-;37288:45;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "factoryProxy()": "7509c39b",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensClaim()": "d20c8819",
    "frensInitialiser()": "32551a60",
    "frensMetaHelper()": "bc48e947",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "proxy()": "ec556889",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPoolFactory()": "a1b8adcb",
    "testAddToDeposit(uint64,uint64)": "020f12da",
    "testBadWithdrawalCred()": "8adcff77",
    "testDeposit(uint72)": "4ccd89c4",
    "testDistribute(uint32,uint32)": "c07d2f57",
    "testLock()": "e96d88e0",
    "testOwner()": "9e535c69",
    "testStake()": "3a1143da",
    "testWithdraw(uint72,uint72)": "90f805d9",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryProxy\",\"outputs\":[{\"internalType\":\"contract FactoryProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensClaim\",\"outputs\":[{\"internalType\":\"contract FrensClaim\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensInitialiser\",\"outputs\":[{\"internalType\":\"contract FrensInitialiser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract IStakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBadWithdrawalCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"y\",\"type\":\"uint72\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/StakingPoolLockedTest.t.sol\":\"StakingPoolLockedTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101\",\"dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh\"]},\"contracts/FrensArt.sol\":{\"keccak256\":\"0x89c83fcc67b58f84994419a40b2cdf83dd959884b5bef6e2e3295602a09b2786\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa3369ef38ec034290ffe088f1a55c510eea2c62ea7ad1839e1409d503b65051\",\"dweb:/ipfs/QmSGjgXPsM518PKk6YPw6ScrhfY9vDxLWQwDYSHuCkKx1u\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/FrensClaim.sol\":{\"keccak256\":\"0x39da8b2575ef01a327c8e865084dfc14df8e5c8b45e970c785ada1a8f630bfad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8894c8d6fe36378b4c417ae843da2a5b1197645e52056de041610499f9f0f19c\",\"dweb:/ipfs/QmXnaWedZmMeN2QvxfdY2HR11nEtg6Hb3exQFVxVLSfUWs\"]},\"contracts/FrensInitialiser.sol\":{\"keccak256\":\"0xc127523697a2bb3e8ad630cfd534a9a19a1fac21650354b6a3152f2448ae8493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3698ae7dc1d1be141357fed44b2a7a13de2adacc167e60f35274841bacde55a\",\"dweb:/ipfs/QmZSRjLRY2Z6j4DvXrFPFoYXWAPoNH9cE3AhA2uFeGCgat\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0xd74d839540472d3d3d767529545e4266ef06c121bebe74d91f50c360578d1980\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7afbaeaa32e44503bcff89c96988d82a8d78b8fc4016c8b4059080e99b5ee17\",\"dweb:/ipfs/QmSmpAVdwd5AKY5CjcJ9Sf6Uu9gTCejwxkqU4gXiQmqn7y\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0x9699164113c018c2bc4a4c2e5458cef07f4f893eddcdfe9533f79198dc4706e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fb02cf258ca1edadf0b6a1fcd10aba7d88c5943ab34882ed4d79bf1a7452473\",\"dweb:/ipfs/QmUYuHmfbVZzjZaoeJ8GZtiwZQf91jiNf3NJ2rV51P7Hwk\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x6296051548f7acd9390649339fb081b77bc3992d7ea3afb699ff881a05156617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://478b16b08d94d1fd1f05d69ed2901a8936b8ba6d68456e2a59efc85b06f8e055\",\"dweb:/ipfs/Qmc2UEzMxMrfqvu6qgGAkPdqeY4xbJkxwwtTn6YiNUK1a8\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709\",\"dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x725290ab2be4c81377611a6e2280b90c0937e8ac5e3e0d29d1f4e94a7e34b840\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59d595f26fbdb570f1429a71477ba165cbaeed2ac3f2672b2bf5184286dbe406\",\"dweb:/ipfs/QmfMFBmxfRpcRoFDN4q8qW5drmjEJ9sf9ugENeiwyXz7Hq\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f\",\"dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3\"]},\"contracts/ToColor.sol\":{\"keccak256\":\"0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359\",\"dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655\",\"dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0x75d3316c4d09445565c75dc8015730bee8e6bcb6b3de5f85cce5b07ffc06a9d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beaaceb02740b5094e65cc023987a63fe871faab2a75812f6e463bff199810be\",\"dweb:/ipfs/QmWFqTW8wEB7LpSbVrftHoGTCia9qfXPymt7mLjbi2CwcS\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2\",\"dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009\",\"dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/ISSVRegistry.sol\":{\"keccak256\":\"0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4\",\"dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3d6e17dab3ea38ff89421d8b543c695eaa749d29bcf6dd02230f2d8af0258707\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce0706e5be0e074c5f87e886214ea1a20d4502e7d592cb9924f282b3b51f965c\",\"dweb:/ipfs/QmP3aKmV8nFU4yARbGsCM4MHS9haq7QzH88EYPmkKjEkpS\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/StakingPoolLockedTest.t.sol\":{\"keccak256\":\"0x336383605b5e3c0ed004eee13dd815afe4d6f247c515cbd0c506900d62ea458f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0f630248da429f6733342fe9b7ddb7ff5ceeaa73d06185fd8e997417f06789e9\",\"dweb:/ipfs/QmaEwSHiHCVN6EpVeoJf5h9hEaqkF3CjFaV2MNjBwokL5H\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryProxy",
          "outputs": [
            {
              "internalType": "contract FactoryProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensClaim",
          "outputs": [
            {
              "internalType": "contract FrensClaim",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensInitialiser",
          "outputs": [
            {
              "internalType": "contract FrensInitialiser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxy",
          "outputs": [
            {
              "internalType": "contract IStakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBadWithdrawalCred"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDistribute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testLock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            },
            {
              "internalType": "uint72",
              "name": "y",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/StakingPoolLockedTest.t.sol": "StakingPoolLockedTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2",
        "urls": [
          "bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101",
          "dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh"
        ],
        "license": "MIT"
      },
      "contracts/FrensArt.sol": {
        "keccak256": "0x89c83fcc67b58f84994419a40b2cdf83dd959884b5bef6e2e3295602a09b2786",
        "urls": [
          "bzz-raw://fa3369ef38ec034290ffe088f1a55c510eea2c62ea7ad1839e1409d503b65051",
          "dweb:/ipfs/QmSGjgXPsM518PKk6YPw6ScrhfY9vDxLWQwDYSHuCkKx1u"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/FrensClaim.sol": {
        "keccak256": "0x39da8b2575ef01a327c8e865084dfc14df8e5c8b45e970c785ada1a8f630bfad",
        "urls": [
          "bzz-raw://8894c8d6fe36378b4c417ae843da2a5b1197645e52056de041610499f9f0f19c",
          "dweb:/ipfs/QmXnaWedZmMeN2QvxfdY2HR11nEtg6Hb3exQFVxVLSfUWs"
        ],
        "license": "MIT"
      },
      "contracts/FrensInitialiser.sol": {
        "keccak256": "0xc127523697a2bb3e8ad630cfd534a9a19a1fac21650354b6a3152f2448ae8493",
        "urls": [
          "bzz-raw://f3698ae7dc1d1be141357fed44b2a7a13de2adacc167e60f35274841bacde55a",
          "dweb:/ipfs/QmZSRjLRY2Z6j4DvXrFPFoYXWAPoNH9cE3AhA2uFeGCgat"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0xd74d839540472d3d3d767529545e4266ef06c121bebe74d91f50c360578d1980",
        "urls": [
          "bzz-raw://f7afbaeaa32e44503bcff89c96988d82a8d78b8fc4016c8b4059080e99b5ee17",
          "dweb:/ipfs/QmSmpAVdwd5AKY5CjcJ9Sf6Uu9gTCejwxkqU4gXiQmqn7y"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0x9699164113c018c2bc4a4c2e5458cef07f4f893eddcdfe9533f79198dc4706e8",
        "urls": [
          "bzz-raw://4fb02cf258ca1edadf0b6a1fcd10aba7d88c5943ab34882ed4d79bf1a7452473",
          "dweb:/ipfs/QmUYuHmfbVZzjZaoeJ8GZtiwZQf91jiNf3NJ2rV51P7Hwk"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x6296051548f7acd9390649339fb081b77bc3992d7ea3afb699ff881a05156617",
        "urls": [
          "bzz-raw://478b16b08d94d1fd1f05d69ed2901a8936b8ba6d68456e2a59efc85b06f8e055",
          "dweb:/ipfs/Qmc2UEzMxMrfqvu6qgGAkPdqeY4xbJkxwwtTn6YiNUK1a8"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf",
        "urls": [
          "bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709",
          "dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x725290ab2be4c81377611a6e2280b90c0937e8ac5e3e0d29d1f4e94a7e34b840",
        "urls": [
          "bzz-raw://59d595f26fbdb570f1429a71477ba165cbaeed2ac3f2672b2bf5184286dbe406",
          "dweb:/ipfs/QmfMFBmxfRpcRoFDN4q8qW5drmjEJ9sf9ugENeiwyXz7Hq"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x28a318900534ec01a36858ebc1b398fd1542ee3e5bba3e82960c465a8b3b90d9",
        "urls": [
          "bzz-raw://a0ffaf682d19d81ee1a4ba9ed835ad2d3551c3aa7530b68f8659411fd734560f",
          "dweb:/ipfs/QmTG3DdduruBBycKeyMn4QxctH1B3rXfULEAvZvPnSD6G3"
        ],
        "license": "MIT"
      },
      "contracts/ToColor.sol": {
        "keccak256": "0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd",
        "urls": [
          "bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359",
          "dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f",
        "urls": [
          "bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655",
          "dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0x75d3316c4d09445565c75dc8015730bee8e6bcb6b3de5f85cce5b07ffc06a9d3",
        "urls": [
          "bzz-raw://beaaceb02740b5094e65cc023987a63fe871faab2a75812f6e463bff199810be",
          "dweb:/ipfs/QmWFqTW8wEB7LpSbVrftHoGTCia9qfXPymt7mLjbi2CwcS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6",
        "urls": [
          "bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2",
          "dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c",
        "urls": [
          "bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009",
          "dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISSVRegistry.sol": {
        "keccak256": "0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f",
        "urls": [
          "bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4",
          "dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3d6e17dab3ea38ff89421d8b543c695eaa749d29bcf6dd02230f2d8af0258707",
        "urls": [
          "bzz-raw://ce0706e5be0e074c5f87e886214ea1a20d4502e7d592cb9924f282b3b51f965c",
          "dweb:/ipfs/QmP3aKmV8nFU4yARbGsCM4MHS9haq7QzH88EYPmkKjEkpS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/StakingPoolLockedTest.t.sol": {
        "keccak256": "0x336383605b5e3c0ed004eee13dd815afe4d6f247c515cbd0c506900d62ea458f",
        "urls": [
          "bzz-raw://0f630248da429f6733342fe9b7ddb7ff5ceeaa73d06185fd8e997417f06789e9",
          "dweb:/ipfs/QmaEwSHiHCVN6EpVeoJf5h9hEaqkF3CjFaV2MNjBwokL5H"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/StakingPoolLockedTest.t.sol",
    "id": 33959,
    "exportedSymbols": {
      "Address": [
        30120
      ],
      "Base64": [
        30496
      ],
      "Context": [
        30142
      ],
      "DSTest": [
        6914
      ],
      "ERC165": [
        30369
      ],
      "ERC721": [
        29293
      ],
      "ERC721Enumerable": [
        29765
      ],
      "FactoryProxy": [
        58
      ],
      "FrensArt": [
        233
      ],
      "FrensBase": [
        824
      ],
      "FrensClaim": [
        898
      ],
      "FrensInitialiser": [
        1078
      ],
      "FrensMetaHelper": [
        1556
      ],
      "FrensPoolShare": [
        1738
      ],
      "FrensPoolShareTokenURI": [
        2101
      ],
      "FrensStorage": [
        2731
      ],
      "IDepositContract": [
        4357
      ],
      "IENS": [
        4494
      ],
      "IERC165": [
        30381
      ],
      "IERC721": [
        29409
      ],
      "IERC721Enumerable": [
        29796
      ],
      "IERC721Metadata": [
        29823
      ],
      "IERC721Receiver": [
        29427
      ],
      "IFrensArt": [
        4504
      ],
      "IFrensClaim": [
        4515
      ],
      "IFrensMetaHelper": [
        4558
      ],
      "IFrensPoolShare": [
        4597
      ],
      "IFrensPoolShareTokenURI": [
        4607
      ],
      "IFrensStorage": [
        4803
      ],
      "IReverseResolver": [
        4813
      ],
      "ISSVRegistry": [
        5015
      ],
      "IStakingPool": [
        5115
      ],
      "IStakingPoolFactory": [
        5127
      ],
      "Ownable": [
        28459
      ],
      "Script": [
        7177
      ],
      "StakingPool": [
        4119
      ],
      "StakingPoolFactory": [
        4262
      ],
      "StakingPoolLockedTest": [
        33958
      ],
      "StdStorage": [
        10205
      ],
      "Strings": [
        30345
      ],
      "Test": [
        10107
      ],
      "ToColor": [
        4338
      ],
      "Vm": [
        12226
      ],
      "console": [
        20290
      ],
      "console2": [
        28354
      ],
      "stdError": [
        10177
      ],
      "stdJson": [
        7537
      ],
      "stdMath": [
        11446
      ],
      "stdStorage": [
        11307
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:12803:48",
    "nodes": [
      {
        "id": 32637,
        "nodeType": "PragmaDirective",
        "src": "39:24:48",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 32638,
        "nodeType": "ImportDirective",
        "src": "65:28:48",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 11447,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32639,
        "nodeType": "ImportDirective",
        "src": "113:38:48",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 234,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32640,
        "nodeType": "ImportDirective",
        "src": "152:46:48",
        "nodes": [],
        "absolutePath": "contracts/FrensInitialiser.sol",
        "file": "../../contracts/FrensInitialiser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 1079,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32641,
        "nodeType": "ImportDirective",
        "src": "199:45:48",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 1557,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32642,
        "nodeType": "ImportDirective",
        "src": "245:52:48",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 2102,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32643,
        "nodeType": "ImportDirective",
        "src": "298:42:48",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 2732,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32644,
        "nodeType": "ImportDirective",
        "src": "341:42:48",
        "nodes": [],
        "absolutePath": "contracts/FactoryProxy.sol",
        "file": "../../contracts/FactoryProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 59,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32645,
        "nodeType": "ImportDirective",
        "src": "384:41:48",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 4120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32646,
        "nodeType": "ImportDirective",
        "src": "426:48:48",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 4263,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32647,
        "nodeType": "ImportDirective",
        "src": "475:40:48",
        "nodes": [],
        "absolutePath": "contracts/FrensClaim.sol",
        "file": "../../contracts/FrensClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 899,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32648,
        "nodeType": "ImportDirective",
        "src": "516:44:48",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 1739,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32649,
        "nodeType": "ImportDirective",
        "src": "561:60:48",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 5128,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32650,
        "nodeType": "ImportDirective",
        "src": "622:57:48",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33959,
        "sourceUnit": 4358,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33958,
        "nodeType": "ContractDefinition",
        "src": "681:12160:48",
        "nodes": [
          {
            "id": 32655,
            "nodeType": "VariableDeclaration",
            "src": "726:24:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "742:8:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$233",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 32654,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32653,
                "name": "FrensArt",
                "nameLocations": [
                  "726:8:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 233,
                "src": "726:8:48"
              },
              "referencedDeclaration": 233,
              "src": "726:8:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$233",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32658,
            "nodeType": "VariableDeclaration",
            "src": "756:40:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "32551a60",
            "mutability": "mutable",
            "name": "frensInitialiser",
            "nameLocation": "780:16:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
              "typeString": "contract FrensInitialiser"
            },
            "typeName": {
              "id": 32657,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32656,
                "name": "FrensInitialiser",
                "nameLocations": [
                  "756:16:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1078,
                "src": "756:16:48"
              },
              "referencedDeclaration": 1078,
              "src": "756:16:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                "typeString": "contract FrensInitialiser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32661,
            "nodeType": "VariableDeclaration",
            "src": "802:38:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "825:15:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 32660,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32659,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "802:15:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1556,
                "src": "802:15:48"
              },
              "referencedDeclaration": 1556,
              "src": "802:15:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32664,
            "nodeType": "VariableDeclaration",
            "src": "846:52:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "876:22:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 32663,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32662,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "846:22:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2101,
                "src": "846:22:48"
              },
              "referencedDeclaration": 2101,
              "src": "846:22:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32667,
            "nodeType": "VariableDeclaration",
            "src": "904:32:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "924:12:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$2731",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 32666,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32665,
                "name": "FrensStorage",
                "nameLocations": [
                  "904:12:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2731,
                "src": "904:12:48"
              },
              "referencedDeclaration": 2731,
              "src": "904:12:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$2731",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32670,
            "nodeType": "VariableDeclaration",
            "src": "942:32:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "7509c39b",
            "mutability": "mutable",
            "name": "factoryProxy",
            "nameLocation": "962:12:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryProxy_$58",
              "typeString": "contract FactoryProxy"
            },
            "typeName": {
              "id": 32669,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32668,
                "name": "FactoryProxy",
                "nameLocations": [
                  "942:12:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58,
                "src": "942:12:48"
              },
              "referencedDeclaration": 58,
              "src": "942:12:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                "typeString": "contract FactoryProxy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32673,
            "nodeType": "VariableDeclaration",
            "src": "980:44:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1006:18:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 32672,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32671,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "980:18:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4262,
                "src": "980:18:48"
              },
              "referencedDeclaration": 4262,
              "src": "980:18:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32676,
            "nodeType": "VariableDeclaration",
            "src": "1030:30:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1049:11:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$4119",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 32675,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32674,
                "name": "StakingPool",
                "nameLocations": [
                  "1030:11:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4119,
                "src": "1030:11:48"
              },
              "referencedDeclaration": 4119,
              "src": "1030:11:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$4119",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32679,
            "nodeType": "VariableDeclaration",
            "src": "1066:36:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1088:14:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 32678,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32677,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1066:14:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1738,
                "src": "1066:14:48"
              },
              "referencedDeclaration": 1738,
              "src": "1066:14:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32682,
            "nodeType": "VariableDeclaration",
            "src": "1108:32:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec556889",
            "mutability": "mutable",
            "name": "proxy",
            "nameLocation": "1135:5:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingPoolFactory_$5127",
              "typeString": "contract IStakingPoolFactory"
            },
            "typeName": {
              "id": 32681,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32680,
                "name": "IStakingPoolFactory",
                "nameLocations": [
                  "1108:19:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5127,
                "src": "1108:19:48"
              },
              "referencedDeclaration": 5127,
              "src": "1108:19:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingPoolFactory_$5127",
                "typeString": "contract IStakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32685,
            "nodeType": "VariableDeclaration",
            "src": "1146:28:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "d20c8819",
            "mutability": "mutable",
            "name": "frensClaim",
            "nameLocation": "1164:10:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensClaim_$898",
              "typeString": "contract FrensClaim"
            },
            "typeName": {
              "id": 32684,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32683,
                "name": "FrensClaim",
                "nameLocations": [
                  "1146:10:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 898,
                "src": "1146:10:48"
              },
              "referencedDeclaration": 898,
              "src": "1146:10:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensClaim_$898",
                "typeString": "contract FrensClaim"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32691,
            "nodeType": "VariableDeclaration",
            "src": "1195:84:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1218:7:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32686,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1195:15:48",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 32689,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1236:42:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32688,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1228:8:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32687,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1228:8:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32690,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1228:51:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32694,
            "nodeType": "VariableDeclaration",
            "src": "1390:78:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1405:18:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32692,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1390:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 32693,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1426:42:48",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 32697,
            "nodeType": "VariableDeclaration",
            "src": "1474:70:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1489:10:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32695,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1474:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 32696,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1502:42:48",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 32703,
            "nodeType": "VariableDeclaration",
            "src": "1551:60:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1568:15:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$4357",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 32699,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32698,
                "name": "IDepositContract",
                "nameLocations": [
                  "1551:16:48"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4357,
                "src": "1551:16:48"
              },
              "referencedDeclaration": 4357,
              "src": "1551:16:48",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$4357",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 32701,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 32691,
                  "src": "1603:7:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 32700,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4357,
                "src": "1586:16:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$4357_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 32702,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1586:25:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$4357",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32706,
            "nodeType": "VariableDeclaration",
            "src": "1618:69:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1633:9:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 32704,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1618:7:48",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 32705,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1645:42:48",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 32712,
            "nodeType": "VariableDeclaration",
            "src": "1693:82:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1716:5:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32707,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1693:15:48",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 32710,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1732:42:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32709,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1724:8:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32708,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1724:8:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32711,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1724:51:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32718,
            "nodeType": "VariableDeclaration",
            "src": "1781:80:48",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1804:3:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 32713,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1781:15:48",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 32716,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1818:42:48",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 32715,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1810:8:48",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 32714,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1810:8:48",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 32717,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1810:51:48",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32721,
            "nodeType": "VariableDeclaration",
            "src": "1868:116:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1874:6:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32719,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1868:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7",
              "id": 32720,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1883:101:48",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bdfcfb749742c3093aa9581e8ef2ad1af416ff72460d5243d448d690ad5323e3",
                "typeString": "literal_string hex\"b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32724,
            "nodeType": "VariableDeclaration",
            "src": "1990:100:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "1996:22:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32722,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1990:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c",
              "id": 32723,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2021:69:48",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5d67e6bdff9aea033a87277a58dc16c10570179f0e67537385b6a1ef5aafe5d7",
                "typeString": "literal_string hex\"010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32727,
            "nodeType": "VariableDeclaration",
            "src": "2096:215:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2102:9:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 32725,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2096:5:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3",
              "id": 32726,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2114:197:48",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92410a21b5a1c3f6142a52b50473f8a72585ecd3f6161746c16dd03094aaf9d4",
                "typeString": "literal_string hex\"b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 32730,
            "nodeType": "VariableDeclaration",
            "src": "2317:94:48",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2325:17:48",
            "scope": 33958,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 32728,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2317:7:48",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834333632613038353937613136373037623466396364653838616132653964353164313737373562363734393037323630373263653838393731323864346332",
              "id": 32729,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2345:66:48",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30479219748484076069933062356768087265247727824042884735859412202213029237954_by_1",
                "typeString": "int_const 3047...(69 digits omitted)...7954"
              },
              "value": "0x4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c2"
            },
            "visibility": "internal"
          },
          {
            "id": 33023,
            "nodeType": "FunctionDefinition",
            "src": "2418:2975:48",
            "nodes": [],
            "body": {
              "id": 33022,
              "nodeType": "Block",
              "src": "2442:2951:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32733,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32667,
                      "src": "2473:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$2731",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 32736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2488:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$2731_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 32735,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32734,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2492:12:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2731,
                            "src": "2492:12:48"
                          },
                          "referencedDeclaration": 2731,
                          "src": "2492:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 32737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2488:18:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$2731",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2473:33:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$2731",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 32739,
                  "nodeType": "ExpressionStatement",
                  "src": "2473:33:48"
                },
                {
                  "expression": {
                    "id": 32746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32740,
                      "name": "factoryProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32670,
                      "src": "2535:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32744,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "2567:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2550:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FactoryProxy_$58_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FactoryProxy)"
                        },
                        "typeName": {
                          "id": 32742,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32741,
                            "name": "FactoryProxy",
                            "nameLocations": [
                              "2554:12:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 58,
                            "src": "2554:12:48"
                          },
                          "referencedDeclaration": 58,
                          "src": "2554:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FactoryProxy_$58",
                            "typeString": "contract FactoryProxy"
                          }
                        }
                      },
                      "id": 32745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2550:30:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "src": "2535:45:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryProxy_$58",
                      "typeString": "contract FactoryProxy"
                    }
                  },
                  "id": 32747,
                  "nodeType": "ExpressionStatement",
                  "src": "2535:45:48"
                },
                {
                  "expression": {
                    "id": 32755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32748,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32682,
                      "src": "2633:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5127",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 32752,
                              "name": "factoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32670,
                              "src": "2669:12:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            ],
                            "id": 32751,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2661:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 32750,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2661:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 32753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2661:21:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32749,
                        "name": "IStakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5127,
                        "src": "2641:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakingPoolFactory_$5127_$",
                          "typeString": "type(contract IStakingPoolFactory)"
                        }
                      },
                      "id": 32754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2641:42:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5127",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "src": "2633:50:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPoolFactory_$5127",
                      "typeString": "contract IStakingPoolFactory"
                    }
                  },
                  "id": 32756,
                  "nodeType": "ExpressionStatement",
                  "src": "2633:50:48"
                },
                {
                  "expression": {
                    "id": 32763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32757,
                      "name": "frensInitialiser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32658,
                      "src": "2718:16:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32761,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "2758:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2737:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FrensInitialiser_$1078_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensInitialiser)"
                        },
                        "typeName": {
                          "id": 32759,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32758,
                            "name": "FrensInitialiser",
                            "nameLocations": [
                              "2741:16:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1078,
                            "src": "2741:16:48"
                          },
                          "referencedDeclaration": 1078,
                          "src": "2741:16:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                            "typeString": "contract FrensInitialiser"
                          }
                        }
                      },
                      "id": 32762,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2737:34:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "src": "2718:53:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                      "typeString": "contract FrensInitialiser"
                    }
                  },
                  "id": 32764,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:53:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32770,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2867:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 32769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2859:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32768,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2859:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2859:13:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32774,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2882:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 32773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2874:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32772,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2874:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2874:13:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32765,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "2850:2:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12226",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2853:5:48",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11683,
                      "src": "2850:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 32776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:38:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32777,
                  "nodeType": "ExpressionStatement",
                  "src": "2850:38:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32783,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32658,
                            "src": "2933:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 32782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2925:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32781,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2925:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2925:25:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73496e697469616c69736572",
                        "id": 32785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2952:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        },
                        "value": "FrensInitialiser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        }
                      ],
                      "expression": {
                        "id": 32778,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "2896:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32780,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2913:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "2896:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2896:75:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32787,
                  "nodeType": "ExpressionStatement",
                  "src": "2896:75:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32793,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32658,
                            "src": "3022:16:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 32792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3014:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3014:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3014:25:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 32795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3041:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32788,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "2979:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2996:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "2979:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:67:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32797,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:67:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32801,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32694,
                        "src": "3122:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5353565265676973747279",
                        "id": 32802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3142:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        },
                        "value": "SSVRegistry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        }
                      ],
                      "expression": {
                        "id": 32798,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3085:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3102:19:48",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1039,
                      "src": "3085:36:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3085:71:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32804,
                  "nodeType": "ExpressionStatement",
                  "src": "3085:71:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32808,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32691,
                        "src": "3237:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "4465706f736974436f6e7472616374",
                        "id": 32809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3246:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        },
                        "value": "DepositContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        }
                      ],
                      "expression": {
                        "id": 32805,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3200:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3217:19:48",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1039,
                      "src": "3200:36:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3200:64:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32811,
                  "nodeType": "ExpressionStatement",
                  "src": "3200:64:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 32815,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32697,
                        "src": "3333:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "454e53",
                        "id": 32816,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3345:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        },
                        "value": "ENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        }
                      ],
                      "expression": {
                        "id": 32812,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3296:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3313:19:48",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1039,
                      "src": "3296:36:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:55:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32818,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:55:48"
                },
                {
                  "expression": {
                    "id": 32825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32819,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32679,
                      "src": "3387:14:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32823,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "3423:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3404:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FrensPoolShare_$1738_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 32821,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32820,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3408:14:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1738,
                            "src": "3408:14:48"
                          },
                          "referencedDeclaration": 1738,
                          "src": "3408:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 32824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3404:32:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3387:49:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 32826,
                  "nodeType": "ExpressionStatement",
                  "src": "3387:49:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32832,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32679,
                            "src": "3513:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 32831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3505:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3505:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3505:23:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265",
                        "id": 32834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3530:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        },
                        "value": "FrensPoolShare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        }
                      ],
                      "expression": {
                        "id": 32827,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3476:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3493:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "3476:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3476:71:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32836,
                  "nodeType": "ExpressionStatement",
                  "src": "3476:71:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32842,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32679,
                            "src": "3598:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 32841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3590:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32840,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3590:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3590:23:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3615:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32837,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3555:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3572:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "3555:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3555:66:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32846,
                  "nodeType": "ExpressionStatement",
                  "src": "3555:66:48"
                },
                {
                  "expression": {
                    "id": 32853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32847,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32673,
                      "src": "3652:18:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32851,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "3696:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3673:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_StakingPoolFactory_$4262_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 32849,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32848,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3677:18:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4262,
                            "src": "3677:18:48"
                          },
                          "referencedDeclaration": 4262,
                          "src": "3677:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 32852,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3673:36:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3652:57:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 32854,
                  "nodeType": "ExpressionStatement",
                  "src": "3652:57:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32860,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32673,
                            "src": "3781:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 32859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3773:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32858,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3773:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3773:27:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67506f6f6c466163746f7279",
                        "id": 32862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3802:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        },
                        "value": "StakingPoolFactory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        }
                      ],
                      "expression": {
                        "id": 32855,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3744:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32857,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3761:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "3744:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3744:79:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32864,
                  "nodeType": "ExpressionStatement",
                  "src": "3744:79:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32870,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32673,
                            "src": "3874:18:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4262",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 32869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3866:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32868,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3866:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3866:27:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 32872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3895:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32865,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "3831:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3848:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "3831:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3831:69:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32874,
                  "nodeType": "ExpressionStatement",
                  "src": "3831:69:48"
                },
                {
                  "expression": {
                    "id": 32881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32875,
                      "name": "frensClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32685,
                      "src": "3930:10:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$898",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32879,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "3958:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3943:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FrensClaim_$898_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensClaim)"
                        },
                        "typeName": {
                          "id": 32877,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32876,
                            "name": "FrensClaim",
                            "nameLocations": [
                              "3947:10:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 898,
                            "src": "3947:10:48"
                          },
                          "referencedDeclaration": 898,
                          "src": "3947:10:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensClaim_$898",
                            "typeString": "contract FrensClaim"
                          }
                        }
                      },
                      "id": 32880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3943:28:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$898",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "src": "3930:41:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensClaim_$898",
                      "typeString": "contract FrensClaim"
                    }
                  },
                  "id": 32882,
                  "nodeType": "ExpressionStatement",
                  "src": "3930:41:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32888,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32685,
                            "src": "4042:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$898",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$898",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 32887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4034:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32886,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4034:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4034:19:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73436c61696d",
                        "id": 32890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4055:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        },
                        "value": "FrensClaim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        }
                      ],
                      "expression": {
                        "id": 32883,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4005:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4022:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "4005:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4005:63:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32892,
                  "nodeType": "ExpressionStatement",
                  "src": "4005:63:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32898,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32685,
                            "src": "4119:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$898",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$898",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 32897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4111:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4111:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4111:19:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 32900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4132:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32893,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4076:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4093:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "4076:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4076:61:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32902,
                  "nodeType": "ExpressionStatement",
                  "src": "4076:61:48"
                },
                {
                  "expression": {
                    "id": 32909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32903,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32661,
                      "src": "4171:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32907,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "4209:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4189:19:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FrensMetaHelper_$1556_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 32905,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32904,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "4193:15:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1556,
                            "src": "4193:15:48"
                          },
                          "referencedDeclaration": 1556,
                          "src": "4193:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 32908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4189:33:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "4171:51:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 32910,
                  "nodeType": "ExpressionStatement",
                  "src": "4171:51:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32916,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32661,
                            "src": "4297:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 32915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4289:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32914,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4289:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4289:24:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d65746148656c706572",
                        "id": 32918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4315:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        },
                        "value": "FrensMetaHelper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        }
                      ],
                      "expression": {
                        "id": 32911,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4260:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4277:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "4260:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4260:73:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32920,
                  "nodeType": "ExpressionStatement",
                  "src": "4260:73:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32926,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32661,
                            "src": "4384:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1556",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 32925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4376:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32924,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4376:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4376:24:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4402:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32921,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4341:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4358:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "4341:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4341:67:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32930,
                  "nodeType": "ExpressionStatement",
                  "src": "4341:67:48"
                },
                {
                  "expression": {
                    "id": 32937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32931,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32664,
                      "src": "4440:22:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32935,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "4492:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4465:26:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FrensPoolShareTokenURI_$2101_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 32933,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32932,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4469:22:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2101,
                            "src": "4469:22:48"
                          },
                          "referencedDeclaration": 2101,
                          "src": "4469:22:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 32936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4465:40:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "4440:65:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 32938,
                  "nodeType": "ExpressionStatement",
                  "src": "4440:65:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32944,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32664,
                            "src": "4578:22:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 32943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4570:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32942,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4570:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4570:31:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                        "id": 32946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4603:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        },
                        "value": "FrensPoolShareTokenURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        }
                      ],
                      "expression": {
                        "id": 32939,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4541:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4558:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "4541:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4541:87:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32948,
                  "nodeType": "ExpressionStatement",
                  "src": "4541:87:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32954,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32664,
                            "src": "4679:22:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2101",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 32953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4671:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32952,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4671:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4671:31:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4704:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32949,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4636:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4653:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "4636:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:74:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32958,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:74:48"
                },
                {
                  "expression": {
                    "id": 32965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32959,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32655,
                      "src": "4736:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$233",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32963,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32667,
                          "src": "4760:12:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$2731",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 32962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4747:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$4803_$returns$_t_contract$_FrensArt_$233_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 32961,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 32960,
                            "name": "FrensArt",
                            "nameLocations": [
                              "4751:8:48"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 233,
                            "src": "4751:8:48"
                          },
                          "referencedDeclaration": 233,
                          "src": "4751:8:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$233",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 32964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4747:26:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$233",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "4736:37:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$233",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 32966,
                  "nodeType": "ExpressionStatement",
                  "src": "4736:37:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32972,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32655,
                            "src": "4841:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$233",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$233",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 32971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4833:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32970,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4833:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4833:17:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73417274",
                        "id": 32974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4852:10:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        },
                        "value": "FrensArt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        }
                      ],
                      "expression": {
                        "id": 32967,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4804:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4821:11:48",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 966,
                      "src": "4804:28:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 32975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:59:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32976,
                  "nodeType": "ExpressionStatement",
                  "src": "4804:59:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32982,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32655,
                            "src": "4914:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$233",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$233",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 32981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4906:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32980,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4906:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4906:17:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 32984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4925:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 32977,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32658,
                        "src": "4871:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1078",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 32979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4888:17:48",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 934,
                      "src": "4871:34:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 32985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4871:60:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32986,
                  "nodeType": "ExpressionStatement",
                  "src": "4871:60:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32992,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5030:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 32991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5022:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32990,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5022:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5022:13:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32996,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5045:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$33958",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 32995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5037:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5037:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5037:13:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 32987,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "5013:2:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12226",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 32989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5016:5:48",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11683,
                      "src": "5013:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 32998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5013:38:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32999,
                  "nodeType": "ExpressionStatement",
                  "src": "5013:38:48"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33000,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32667,
                        "src": "5059:12:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$2731",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 33002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5072:17:48",
                      "memberName": "setDeployedStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2297,
                      "src": "5059:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5059:32:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33004,
                  "nodeType": "ExpressionStatement",
                  "src": "5059:32:48"
                },
                {
                  "assignments": [
                    33006
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33006,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5160:4:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33022,
                      "src": "5152:12:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33005,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5152:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33012,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33009,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "5181:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5192:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33007,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32682,
                        "src": "5168:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$5127",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 33008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5174:6:48",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5126,
                      "src": "5168:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 33011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5168:29:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5151:46:48"
                },
                {
                  "expression": {
                    "id": 33020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33013,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32676,
                      "src": "5237:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4119",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33017,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33006,
                              "src": "5271:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5263:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 33015,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5263:8:48",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33018,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5263:13:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 33014,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4119,
                        "src": "5251:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$4119_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 33019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5251:26:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4119",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "5237:40:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4119",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 33021,
                  "nodeType": "ExpressionStatement",
                  "src": "5237:40:48"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2427:5:48",
            "parameters": {
              "id": 32731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2432:2:48"
            },
            "returnParameters": {
              "id": 32732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2442:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33041,
            "nodeType": "FunctionDefinition",
            "src": "5399:143:48",
            "nodes": [],
            "body": {
              "id": 33040,
              "nodeType": "Block",
              "src": "5427:115:48",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33027,
                      "mutability": "mutable",
                      "name": "stakingPoolOwner",
                      "nameLocation": "5443:16:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33040,
                      "src": "5435:24:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33026,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5435:7:48",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33031,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33028,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "5462:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5474:5:48",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4015,
                      "src": "5462:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5462:19:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5435:46:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33033,
                        "name": "stakingPoolOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33027,
                        "src": "5498:16:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33036,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32706,
                            "src": "5524:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5516:7:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5516:7:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5516:18:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33032,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8295,
                        8320,
                        8333,
                        8349,
                        8391,
                        8433,
                        8475,
                        8512,
                        8549,
                        8586,
                        5448,
                        5473,
                        5503,
                        5528,
                        5587,
                        5612,
                        5642,
                        5667,
                        6767,
                        6802
                      ],
                      "referencedDeclaration": 5448,
                      "src": "5489:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5489:46:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33039,
                  "nodeType": "ExpressionStatement",
                  "src": "5489:46:48"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "5408:9:48",
            "parameters": {
              "id": 33024,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5417:2:48"
            },
            "returnParameters": {
              "id": 33025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5427:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33174,
            "nodeType": "FunctionDefinition",
            "src": "5548:995:48",
            "nodes": [],
            "body": {
              "id": 33173,
              "nodeType": "Block",
              "src": "5586:957:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5633:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33046,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "5617:2:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12226",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5620:12:48",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11712,
                      "src": "5617:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5617:41:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33051,
                  "nodeType": "ExpressionStatement",
                  "src": "5617:41:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33053,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32712,
                        "src": "5671:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33052,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "5666:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5666:11:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33055,
                  "nodeType": "ExpressionStatement",
                  "src": "5666:11:48"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33056,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "5685:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5697:13:48",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2945,
                        "src": "5685:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 33059,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33043,
                          "src": "5718:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        }
                      ],
                      "src": "5685:35:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5685:37:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33062,
                  "nodeType": "ExpressionStatement",
                  "src": "5685:37:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33064,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "5754:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33063,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "5749:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5749:15:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33066,
                  "nodeType": "ExpressionStatement",
                  "src": "5749:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33070,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "5794:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33071,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "5802:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33072,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "5826:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33073,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "5837:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33067,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "5772:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5784:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "5772:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5772:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33075,
                  "nodeType": "ExpressionStatement",
                  "src": "5772:83:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33076,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "5866:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5870:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5866:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33079,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "5875:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 33080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5880:8:48",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "5875:13:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5866:22:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33132,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "6242:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6247:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6242:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33170,
                      "nodeType": "Block",
                      "src": "6385:152:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 33156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6411:43:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 33153,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "6395:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6398:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "6395:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6395:60:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33158,
                          "nodeType": "ExpressionStatement",
                          "src": "6395:60:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33160,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "6475:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33159,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "6465:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6465:16:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33162,
                          "nodeType": "ExpressionStatement",
                          "src": "6465:16:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33163,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "6491:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6503:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "6491:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33166,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "6524:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "6491:35:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6491:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33169,
                          "nodeType": "ExpressionStatement",
                          "src": "6491:37:48"
                        }
                      ]
                    },
                    "id": 33171,
                    "nodeType": "IfStatement",
                    "src": "6239:298:48",
                    "trueBody": {
                      "id": 33152,
                      "nodeType": "Block",
                      "src": "6250:129:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6276:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33135,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "6260:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6263:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "6260:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6260:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33140,
                          "nodeType": "ExpressionStatement",
                          "src": "6260:37:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33142,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "6317:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33141,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "6307:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6307:16:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33144,
                          "nodeType": "ExpressionStatement",
                          "src": "6307:16:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33145,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "6333:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6345:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "6333:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33149,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33148,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "6366:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "6333:35:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6333:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33151,
                          "nodeType": "ExpressionStatement",
                          "src": "6333:37:48"
                        }
                      ]
                    }
                  },
                  "id": 33172,
                  "nodeType": "IfStatement",
                  "src": "5863:674:48",
                  "trueBody": {
                    "id": 33131,
                    "nodeType": "Block",
                    "src": "5889:344:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33084,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "5909:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33083,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7733,
                              7754,
                              7778,
                              7802
                            ],
                            "referencedDeclaration": 7733,
                            "src": "5899:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5899:16:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33086,
                        "nodeType": "ExpressionStatement",
                        "src": "5899:16:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33087,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "5925:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5937:13:48",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2945,
                              "src": "5925:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33090,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "5958:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "5925:35:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5925:37:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33093,
                        "nodeType": "ExpressionStatement",
                        "src": "5925:37:48"
                      },
                      {
                        "assignments": [
                          33095
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33095,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "5977:2:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33131,
                            "src": "5972:7:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33094,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5972:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33101,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33098,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "6017:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6024:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33096,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32679,
                              "src": "5982:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5997:19:48",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29505,
                            "src": "5982:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5982:44:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5972:54:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33103,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33095,
                                "src": "6047:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 33104,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6053:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6047:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33102,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5397,
                              5418
                            ],
                            "referencedDeclaration": 5397,
                            "src": "6036:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6036:20:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33107,
                        "nodeType": "ExpressionStatement",
                        "src": "6036:20:48"
                      },
                      {
                        "assignments": [
                          33109
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33109,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "6071:6:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33131,
                            "src": "6066:11:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33108,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6066:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33114,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33112,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33095,
                              "src": "6109:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33110,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "6080:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6092:16:48",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3983,
                            "src": "6080:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6080:32:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6066:46:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33116,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "6131:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 33117,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33109,
                              "src": "6134:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33115,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8295,
                              8320,
                              8333,
                              8349,
                              8391,
                              8433,
                              8475,
                              8512,
                              8549,
                              8586,
                              5448,
                              5473,
                              5503,
                              5528,
                              5587,
                              5612,
                              5642,
                              5667,
                              6767,
                              6802
                            ],
                            "referencedDeclaration": 5642,
                            "src": "6122:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6122:19:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33119,
                        "nodeType": "ExpressionStatement",
                        "src": "6122:19:48"
                      },
                      {
                        "assignments": [
                          33121
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33121,
                            "mutability": "mutable",
                            "name": "totDep",
                            "nameLocation": "6156:6:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33131,
                            "src": "6151:11:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33120,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6151:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33125,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 33122,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "6165:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6177:16:48",
                            "memberName": "getTotalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4002,
                            "src": "6165:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 33124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6165:30:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6151:44:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33127,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "6214:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 33128,
                              "name": "totDep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33121,
                              "src": "6217:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33126,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8295,
                              8320,
                              8333,
                              8349,
                              8391,
                              8433,
                              8475,
                              8512,
                              8549,
                              8586,
                              5448,
                              5473,
                              5503,
                              5528,
                              5587,
                              5612,
                              5642,
                              5667,
                              6767,
                              6802
                            ],
                            "referencedDeclaration": 5642,
                            "src": "6205:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6205:19:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33130,
                        "nodeType": "ExpressionStatement",
                        "src": "6205:19:48"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4ccd89c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "5557:11:48",
            "parameters": {
              "id": 33044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33043,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "5576:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33174,
                  "src": "5569:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 33042,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "5569:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5568:10:48"
            },
            "returnParameters": {
              "id": 33045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5586:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33337,
            "nodeType": "FunctionDefinition",
            "src": "6549:1173:48",
            "nodes": [],
            "body": {
              "id": 33336,
              "nodeType": "Block",
              "src": "6602:1120:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33182,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "6634:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33181,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "6629:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6629:15:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33184,
                  "nodeType": "ExpressionStatement",
                  "src": "6629:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33188,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "6674:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33189,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "6682:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33190,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "6706:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33191,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "6717:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33185,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "6652:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6664:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "6652:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6652:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33193,
                  "nodeType": "ExpressionStatement",
                  "src": "6652:83:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 33196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33194,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33176,
                        "src": "6746:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6750:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6746:5:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 33199,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33176,
                              "src": "6760:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 33198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6755:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33197,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6755:4:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6755:7:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 33203,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33178,
                              "src": "6770:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 33202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6765:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33201,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6765:4:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6765:7:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6755:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 33206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6776:8:48",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "6755:29:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6746:38:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 33281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33279,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33176,
                        "src": "7230:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7235:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7230:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33333,
                      "nodeType": "Block",
                      "src": "7373:343:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33301,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "7472:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33300,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "7462:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7462:16:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33303,
                          "nodeType": "ExpressionStatement",
                          "src": "7462:16:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33304,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "7488:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7500:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "7488:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33307,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33176,
                                  "src": "7521:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "7488:35:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33309,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7488:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33310,
                          "nodeType": "ExpressionStatement",
                          "src": "7488:37:48"
                        },
                        {
                          "assignments": [
                            33312
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 33312,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "7540:2:48",
                              "nodeType": "VariableDeclaration",
                              "scope": 33333,
                              "src": "7535:7:48",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 33311,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7535:4:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 33318,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 33315,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "7580:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 33316,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7587:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 33313,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32679,
                                "src": "7545:14:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 33314,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7560:19:48",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29505,
                              "src": "7545:34:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 33317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7545:44:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7535:54:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 33322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7615:43:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 33319,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "7599:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7602:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "7599:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7599:60:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33324,
                          "nodeType": "ExpressionStatement",
                          "src": "7599:60:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33330,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33312,
                                "src": "7704:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 33325,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "7669:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7681:12:48",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3035,
                                "src": "7669:24:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 33329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33328,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33178,
                                  "src": "7701:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "7669:34:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 33331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7669:38:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33332,
                          "nodeType": "ExpressionStatement",
                          "src": "7669:38:48"
                        }
                      ]
                    },
                    "id": 33334,
                    "nodeType": "IfStatement",
                    "src": "7227:489:48",
                    "trueBody": {
                      "id": 33299,
                      "nodeType": "Block",
                      "src": "7238:129:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7264:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33282,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "7248:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33284,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7251:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "7248:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7248:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33287,
                          "nodeType": "ExpressionStatement",
                          "src": "7248:37:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33289,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "7305:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33288,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "7295:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33290,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7295:16:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33291,
                          "nodeType": "ExpressionStatement",
                          "src": "7295:16:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33292,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "7321:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7333:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "7321:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33295,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33176,
                                  "src": "7354:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "7321:35:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7321:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33298,
                          "nodeType": "ExpressionStatement",
                          "src": "7321:37:48"
                        }
                      ]
                    }
                  },
                  "id": 33335,
                  "nodeType": "IfStatement",
                  "src": "6743:973:48",
                  "trueBody": {
                    "id": 33278,
                    "nodeType": "Block",
                    "src": "6785:436:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33210,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "6805:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33209,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7733,
                              7754,
                              7778,
                              7802
                            ],
                            "referencedDeclaration": 7733,
                            "src": "6795:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6795:16:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33212,
                        "nodeType": "ExpressionStatement",
                        "src": "6795:16:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33213,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "6821:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6833:13:48",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2945,
                              "src": "6821:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33216,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33176,
                                "src": "6854:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "6821:35:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6821:37:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33219,
                        "nodeType": "ExpressionStatement",
                        "src": "6821:37:48"
                      },
                      {
                        "assignments": [
                          33221
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33221,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6873:2:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33278,
                            "src": "6868:7:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33220,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6868:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33227,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33224,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "6913:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6920:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33222,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32679,
                              "src": "6878:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6893:19:48",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29505,
                            "src": "6878:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6878:44:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6868:54:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33229,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33221,
                                "src": "6943:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 33230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6949:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6943:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33228,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5397,
                              5418
                            ],
                            "referencedDeclaration": 5397,
                            "src": "6932:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6932:20:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33233,
                        "nodeType": "ExpressionStatement",
                        "src": "6932:20:48"
                      },
                      {
                        "assignments": [
                          33235
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33235,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "6967:6:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33278,
                            "src": "6962:11:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33234,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6962:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33240,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33238,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33221,
                              "src": "7005:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33236,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "6976:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6988:16:48",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3983,
                            "src": "6976:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6976:32:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6962:46:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33242,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33176,
                              "src": "7027:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 33243,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33235,
                              "src": "7030:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33241,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8295,
                              8320,
                              8333,
                              8349,
                              8391,
                              8433,
                              8475,
                              8512,
                              8549,
                              8586,
                              5448,
                              5473,
                              5503,
                              5528,
                              5587,
                              5612,
                              5642,
                              5667,
                              6767,
                              6802
                            ],
                            "referencedDeclaration": 5642,
                            "src": "7018:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7018:19:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33245,
                        "nodeType": "ExpressionStatement",
                        "src": "7018:19:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33251,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33221,
                              "src": "7082:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 33246,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "7047:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7059:12:48",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3035,
                              "src": "7047:24:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 33250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33249,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33178,
                                "src": "7079:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7047:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 33252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7047:38:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33253,
                        "nodeType": "ExpressionStatement",
                        "src": "7047:38:48"
                      },
                      {
                        "assignments": [
                          33255
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33255,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "7100:7:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33278,
                            "src": "7095:12:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33254,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7095:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33260,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33258,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33221,
                              "src": "7139:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33256,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "7110:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7122:16:48",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3983,
                            "src": "7110:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7110:32:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7095:47:48"
                      },
                      {
                        "assignments": [
                          33262
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33262,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "7157:3:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33278,
                            "src": "7152:8:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33261,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7152:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33272,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 33265,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33176,
                                "src": "7168:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 33264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7163:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33263,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7163:4:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7163:7:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 33269,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33178,
                                "src": "7178:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 33268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7173:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33267,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7173:4:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7173:7:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7163:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7152:28:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33274,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33262,
                              "src": "7199:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33275,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33255,
                              "src": "7204:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33273,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8295,
                              8320,
                              8333,
                              8349,
                              8391,
                              8433,
                              8475,
                              8512,
                              8549,
                              8586,
                              5448,
                              5473,
                              5503,
                              5528,
                              5587,
                              5612,
                              5642,
                              5667,
                              6767,
                              6802
                            ],
                            "referencedDeclaration": 5642,
                            "src": "7190:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7190:22:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33277,
                        "nodeType": "ExpressionStatement",
                        "src": "7190:22:48"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "020f12da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDeposit",
            "nameLocation": "6558:16:48",
            "parameters": {
              "id": 33179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33176,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "6582:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33337,
                  "src": "6575:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33175,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33178,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "6592:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33337,
                  "src": "6585:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33177,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6585:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6574:20:48"
            },
            "returnParameters": {
              "id": 33180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6602:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33528,
            "nodeType": "FunctionDefinition",
            "src": "7728:1258:48",
            "nodes": [],
            "body": {
              "id": 33527,
              "nodeType": "Block",
              "src": "7777:1209:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33345,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "7809:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33344,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "7804:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:15:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33347,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33351,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "7849:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33352,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "7857:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33353,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "7881:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33354,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "7892:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33348,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "7827:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7839:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "7827:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7827:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33356,
                  "nodeType": "ExpressionStatement",
                  "src": "7827:83:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 33363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 33359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33357,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33339,
                          "src": "7921:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 33358,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33341,
                          "src": "7926:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "src": "7921:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 33362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33360,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33339,
                          "src": "7931:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7935:1:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7931:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "7921:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33366,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33339,
                            "src": "7945:1:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          ],
                          "id": 33365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7940:4:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33364,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "7940:4:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7940:7:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 33368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7951:8:48",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7940:19:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7921:38:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33440,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33339,
                        "src": "8394:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8399:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8394:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 33463,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33339,
                              "src": "8545:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "id": 33462,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8540:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33461,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8540:4:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8540:7:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 33465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8550:8:48",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        },
                        "src": "8540:18:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 33523,
                        "nodeType": "Block",
                        "src": "8718:262:48",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33486,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32712,
                                  "src": "8738:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33485,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  7733,
                                  7754,
                                  7778,
                                  7802
                                ],
                                "referencedDeclaration": 7733,
                                "src": "8728:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 33487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8728:16:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33488,
                            "nodeType": "ExpressionStatement",
                            "src": "8728:16:48"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 33489,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32676,
                                    "src": "8754:11:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4119",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8766:13:48",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2945,
                                  "src": "8754:25:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 33493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 33492,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33339,
                                    "src": "8787:1:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "8754:35:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8754:37:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33495,
                            "nodeType": "ExpressionStatement",
                            "src": "8754:37:48"
                          },
                          {
                            "assignments": [
                              33497
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 33497,
                                "mutability": "mutable",
                                "name": "id",
                                "nameLocation": "8806:2:48",
                                "nodeType": "VariableDeclaration",
                                "scope": 33523,
                                "src": "8801:7:48",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 33496,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8801:4:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 33503,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 33500,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32712,
                                  "src": "8846:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 33501,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8853:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 33498,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32679,
                                  "src": "8811:14:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 33499,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8826:19:48",
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29505,
                                "src": "8811:34:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 33502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8811:44:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "8801:54:48"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33507,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33505,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33497,
                                    "src": "8876:2:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 33506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8882:1:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "8876:7:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 33504,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  5397,
                                  5418
                                ],
                                "referencedDeclaration": 5397,
                                "src": "8865:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                  "typeString": "function (bool)"
                                }
                              },
                              "id": 33508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8865:20:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33509,
                            "nodeType": "ExpressionStatement",
                            "src": "8865:20:48"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f7420656e6f756768206465706f7369746564",
                                  "id": 33513,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8911:22:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  },
                                  "value": "not enough deposited"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  }
                                ],
                                "expression": {
                                  "id": 33510,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6945,
                                  "src": "8895:2:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$12226",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 33512,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8898:12:48",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11712,
                                "src": "8895:15:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 33514,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8895:39:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33515,
                            "nodeType": "ExpressionStatement",
                            "src": "8895:39:48"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33519,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33497,
                                  "src": "8965:2:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 33520,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33341,
                                  "src": "8969:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                ],
                                "expression": {
                                  "id": 33516,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "8944:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33518,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8956:8:48",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3531,
                                "src": "8944:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) external"
                                }
                              },
                              "id": 33521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8944:27:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33522,
                            "nodeType": "ExpressionStatement",
                            "src": "8944:27:48"
                          }
                        ]
                      },
                      "id": 33524,
                      "nodeType": "IfStatement",
                      "src": "8537:443:48",
                      "trueBody": {
                        "id": 33484,
                        "nodeType": "Block",
                        "src": "8560:152:48",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                  "id": 33470,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8586:43:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  },
                                  "value": "total deposits cannot be more than 32 Eth"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  }
                                ],
                                "expression": {
                                  "id": 33467,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6945,
                                  "src": "8570:2:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$12226",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 33469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8573:12:48",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11712,
                                "src": "8570:15:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 33471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8570:60:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33472,
                            "nodeType": "ExpressionStatement",
                            "src": "8570:60:48"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33474,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32712,
                                  "src": "8650:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33473,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  7733,
                                  7754,
                                  7778,
                                  7802
                                ],
                                "referencedDeclaration": 7733,
                                "src": "8640:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 33475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8640:16:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33476,
                            "nodeType": "ExpressionStatement",
                            "src": "8640:16:48"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 33477,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32676,
                                    "src": "8666:11:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4119",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33479,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8678:13:48",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2945,
                                  "src": "8666:25:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 33481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 33480,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33339,
                                    "src": "8699:1:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "8666:35:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8666:37:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33483,
                            "nodeType": "ExpressionStatement",
                            "src": "8666:37:48"
                          }
                        ]
                      }
                    },
                    "id": 33525,
                    "nodeType": "IfStatement",
                    "src": "8391:589:48",
                    "trueBody": {
                      "id": 33460,
                      "nodeType": "Block",
                      "src": "8402:129:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33446,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8428:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33443,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "8412:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8415:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "8412:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8412:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33448,
                          "nodeType": "ExpressionStatement",
                          "src": "8412:37:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33450,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "8469:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33449,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "8459:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8459:16:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33452,
                          "nodeType": "ExpressionStatement",
                          "src": "8459:16:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33453,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "8485:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33455,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8497:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "8485:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33456,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33339,
                                  "src": "8518:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "8485:35:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8485:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33459,
                          "nodeType": "ExpressionStatement",
                          "src": "8485:37:48"
                        }
                      ]
                    }
                  },
                  "id": 33526,
                  "nodeType": "IfStatement",
                  "src": "7918:1062:48",
                  "trueBody": {
                    "id": 33439,
                    "nodeType": "Block",
                    "src": "7960:425:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33372,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "7980:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33371,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7733,
                              7754,
                              7778,
                              7802
                            ],
                            "referencedDeclaration": 7733,
                            "src": "7970:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7970:16:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33374,
                        "nodeType": "ExpressionStatement",
                        "src": "7970:16:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33375,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "7996:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8008:13:48",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2945,
                              "src": "7996:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33378,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33339,
                                "src": "8029:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "7996:35:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7996:37:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33381,
                        "nodeType": "ExpressionStatement",
                        "src": "7996:37:48"
                      },
                      {
                        "assignments": [
                          33383
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33383,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8048:2:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33439,
                            "src": "8043:7:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33382,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8043:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33389,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33386,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "8088:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8095:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33384,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32679,
                              "src": "8053:14:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$1738",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8068:19:48",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29505,
                            "src": "8053:34:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8053:44:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8043:54:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33391,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33383,
                                "src": "8118:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 33392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8124:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8118:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33390,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5397,
                              5418
                            ],
                            "referencedDeclaration": 5397,
                            "src": "8107:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8107:20:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33395,
                        "nodeType": "ExpressionStatement",
                        "src": "8107:20:48"
                      },
                      {
                        "assignments": [
                          33397
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33397,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "8142:6:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33439,
                            "src": "8137:11:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33396,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8137:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33402,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33400,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33383,
                              "src": "8180:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33398,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "8151:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8163:16:48",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3983,
                            "src": "8151:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8151:32:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8137:46:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33404,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33339,
                              "src": "8202:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 33405,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33397,
                              "src": "8205:6:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33403,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8295,
                              8320,
                              8333,
                              8349,
                              8391,
                              8433,
                              8475,
                              8512,
                              8549,
                              8586,
                              5448,
                              5473,
                              5503,
                              5528,
                              5587,
                              5612,
                              5642,
                              5667,
                              6767,
                              6802
                            ],
                            "referencedDeclaration": 5642,
                            "src": "8193:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8193:19:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33407,
                        "nodeType": "ExpressionStatement",
                        "src": "8193:19:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33411,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33383,
                              "src": "8243:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33412,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33341,
                              "src": "8247:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "expression": {
                              "id": 33408,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "8222:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8234:8:48",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3531,
                            "src": "8222:20:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 33413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8222:27:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33414,
                        "nodeType": "ExpressionStatement",
                        "src": "8222:27:48"
                      },
                      {
                        "assignments": [
                          33416
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33416,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "8264:7:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33439,
                            "src": "8259:12:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33415,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8259:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33421,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33419,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33383,
                              "src": "8303:2:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33417,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "8274:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8286:16:48",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3983,
                            "src": "8274:28:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8274:32:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8259:47:48"
                      },
                      {
                        "assignments": [
                          33423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33423,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "8321:3:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33439,
                            "src": "8316:8:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33422,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8316:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33433,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 33426,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33339,
                                "src": "8332:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 33425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8327:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33424,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8327:4:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8327:7:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 33430,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33341,
                                "src": "8342:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 33429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8337:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33428,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8337:4:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8337:7:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8327:17:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8316:28:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33435,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33423,
                              "src": "8363:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33436,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33416,
                              "src": "8368:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33434,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8295,
                              8320,
                              8333,
                              8349,
                              8391,
                              8433,
                              8475,
                              8512,
                              8549,
                              8586,
                              5448,
                              5473,
                              5503,
                              5528,
                              5587,
                              5612,
                              5642,
                              5667,
                              6767,
                              6802
                            ],
                            "referencedDeclaration": 5642,
                            "src": "8354:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8354:22:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33438,
                        "nodeType": "ExpressionStatement",
                        "src": "8354:22:48"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "90f805d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "7737:12:48",
            "parameters": {
              "id": 33342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33339,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "7757:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33528,
                  "src": "7750:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 33338,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "7750:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33341,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "7767:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33528,
                  "src": "7760:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 33340,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "7760:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7749:20:48"
            },
            "returnParameters": {
              "id": 33343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7777:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33628,
            "nodeType": "FunctionDefinition",
            "src": "8992:1145:48",
            "nodes": [],
            "body": {
              "id": 33627,
              "nodeType": "Block",
              "src": "9020:1117:48",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33532
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33532,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "9034:14:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33627,
                      "src": "9029:19:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33531,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9029:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33538,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 33535,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "9059:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 33534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9051:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33533,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9051:7:48",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9051:20:48",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9072:7:48",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9051:28:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9029:50:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33540,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32712,
                        "src": "9142:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33539,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "9137:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9137:11:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33542,
                  "nodeType": "ExpressionStatement",
                  "src": "9137:11:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9172:24:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33543,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "9156:2:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12226",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9159:12:48",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11712,
                      "src": "9156:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9156:41:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33548,
                  "nodeType": "ExpressionStatement",
                  "src": "9156:41:48"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33549,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "9205:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9217:13:48",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2945,
                        "src": "9205:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9238:20:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "9205:54:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9205:56:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33555,
                  "nodeType": "ExpressionStatement",
                  "src": "9205:56:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33557,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "9577:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33556,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "9572:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9572:15:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33559,
                  "nodeType": "ExpressionStatement",
                  "src": "9572:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33563,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "9617:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33564,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "9625:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33565,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "9649:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33566,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "9660:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33560,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "9595:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33562,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9607:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "9595:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9595:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33568,
                  "nodeType": "ExpressionStatement",
                  "src": "9595:83:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33570,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32712,
                        "src": "9691:5:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33569,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "9686:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9686:11:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33572,
                  "nodeType": "ExpressionStatement",
                  "src": "9686:11:48"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33573,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32676,
                          "src": "9705:11:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9717:13:48",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2945,
                        "src": "9705:25:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9738:20:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "9705:54:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9705:56:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33579,
                  "nodeType": "ExpressionStatement",
                  "src": "9705:56:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33581,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33532,
                          "src": "9778:14:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9795:20:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "9778:37:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33586,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "9825:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9817:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33584,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9817:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9817:20:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9838:7:48",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "9817:28:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33580,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8295,
                        8320,
                        8333,
                        8349,
                        8391,
                        8433,
                        8475,
                        8512,
                        8549,
                        8586,
                        5448,
                        5473,
                        5503,
                        5528,
                        5587,
                        5612,
                        5642,
                        5667,
                        6767,
                        6802
                      ],
                      "referencedDeclaration": 5642,
                      "src": "9769:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9769:77:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33590,
                  "nodeType": "ExpressionStatement",
                  "src": "9769:77:48"
                },
                {
                  "assignments": [
                    33592
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33592,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "9862:18:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33627,
                      "src": "9854:26:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33591,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9854:7:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33598,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33594,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32703,
                            "src": "9893:15:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$4357",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 33595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9909:17:48",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4356,
                          "src": "9893:33:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 33596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9893:35:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33593,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "9883:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 33597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9883:46:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9854:75:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33600,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "9942:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33599,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "9937:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9937:15:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33602,
                  "nodeType": "ExpressionStatement",
                  "src": "9937:15:48"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33603,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "9960:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9972:5:48",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3233,
                      "src": "9960:17:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9960:19:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33607,
                  "nodeType": "ExpressionStatement",
                  "src": "9960:19:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33609,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33532,
                        "src": "9996:14:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33612,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "10020:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10012:7:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33610,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10012:7:48",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10012:20:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10033:7:48",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10012:28:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33608,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8295,
                        8320,
                        8333,
                        8349,
                        8391,
                        8433,
                        8475,
                        8512,
                        8549,
                        8586,
                        5448,
                        5473,
                        5503,
                        5528,
                        5587,
                        5612,
                        5642,
                        5667,
                        6767,
                        6802
                      ],
                      "referencedDeclaration": 5642,
                      "src": "9987:8:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9987:54:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33616,
                  "nodeType": "ExpressionStatement",
                  "src": "9987:54:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 33624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33619,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32703,
                                  "src": "10071:15:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$4357",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 33620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10087:17:48",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4356,
                                "src": "10071:33:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 33621,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10071:35:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 33618,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "10061:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 33622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10061:46:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 33623,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33592,
                          "src": "10111:18:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10061:68:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 33617,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8245,
                        8259
                      ],
                      "referencedDeclaration": 8245,
                      "src": "10049:11:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 33625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10049:81:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33626,
                  "nodeType": "ExpressionStatement",
                  "src": "10049:81:48"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "9001:9:48",
            "parameters": {
              "id": 33529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9010:2:48"
            },
            "returnParameters": {
              "id": 33530,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9020:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33902,
            "nodeType": "FunctionDefinition",
            "src": "10143:2146:48",
            "nodes": [],
            "body": {
              "id": 33901,
              "nodeType": "Block",
              "src": "10194:2095:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33636,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "10226:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33635,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7643,
                        7664,
                        7688,
                        7712
                      ],
                      "referencedDeclaration": 7643,
                      "src": "10221:4:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10221:15:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33638,
                  "nodeType": "ExpressionStatement",
                  "src": "10221:15:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33642,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "10266:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33643,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "10274:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33644,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "10298:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33645,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "10309:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33639,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "10244:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10256:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "10244:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10244:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33647,
                  "nodeType": "ExpressionStatement",
                  "src": "10244:83:48"
                },
                {
                  "assignments": [
                    33649
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33649,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "10340:9:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33901,
                      "src": "10335:14:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33648,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10335:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33651,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 33650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10352:10:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10335:27:48"
                },
                {
                  "assignments": [
                    33653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33653,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "10375:12:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33901,
                      "src": "10370:17:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33652,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10370:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33662,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33659,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33656,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33630,
                            "src": "10395:1:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 33655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10390:4:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33654,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10390:4:48",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10390:7:48",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 33658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10400:20:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "10390:30:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 33660,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33649,
                      "src": "10423:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10390:42:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10370:62:48"
                },
                {
                  "assignments": [
                    33664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33664,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "10445:10:48",
                      "nodeType": "VariableDeclaration",
                      "scope": 33901,
                      "src": "10440:15:48",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33663,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10440:4:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33668,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 33667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 33665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10458:20:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 33666,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33653,
                      "src": "10481:12:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10458:35:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10440:53:48"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33669,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33630,
                        "src": "10504:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10509:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10504:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33672,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33632,
                        "src": "10514:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 33673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10518:3:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "10514:7:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10504:17:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 33829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33827,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33630,
                        "src": "11770:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11775:1:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "11770:6:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33898,
                      "nodeType": "Block",
                      "src": "11913:370:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33849,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "11928:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33848,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7643,
                                7664,
                                7688,
                                7712
                              ],
                              "referencedDeclaration": 7643,
                              "src": "11923:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11923:11:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33851,
                          "nodeType": "ExpressionStatement",
                          "src": "11923:11:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33852,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "11944:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11956:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "11944:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33855,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33653,
                                  "src": "11977:12:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "11944:46:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11944:48:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33858,
                          "nodeType": "ExpressionStatement",
                          "src": "11944:48:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33860,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32718,
                                "src": "12007:3:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33859,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7643,
                                7664,
                                7688,
                                7712
                              ],
                              "referencedDeclaration": 7643,
                              "src": "12002:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12002:9:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33862,
                          "nodeType": "ExpressionStatement",
                          "src": "12002:9:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33863,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "12021:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12033:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "12021:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33866,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33664,
                                  "src": "12054:10:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "12021:44:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12021:46:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33869,
                          "nodeType": "ExpressionStatement",
                          "src": "12021:46:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33871,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32706,
                                "src": "12087:9:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 33870,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "12077:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12077:20:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33873,
                          "nodeType": "ExpressionStatement",
                          "src": "12077:20:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33874,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "12107:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12119:5:48",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3233,
                              "src": "12107:17:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 33877,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12107:19:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33878,
                          "nodeType": "ExpressionStatement",
                          "src": "12107:19:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33884,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33632,
                                "src": "12166:1:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 33881,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32676,
                                    "src": "12144:11:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4119",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4119",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 33880,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12136:8:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 33879,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12136:8:48",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 33882,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12136:20:48",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 33883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12157:8:48",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "12136:29:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 33885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12136:32:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33886,
                          "nodeType": "ExpressionStatement",
                          "src": "12136:32:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d696e696d756d206f66203130302077656920746f2064697374726962757465",
                                "id": 33890,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12194:34:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f00fb37f6a37183ae3803ed39ad837a119d5582659746e10b4b04d676b4b4ea",
                                  "typeString": "literal_string \"minimum of 100 wei to distribute\""
                                },
                                "value": "minimum of 100 wei to distribute"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0f00fb37f6a37183ae3803ed39ad837a119d5582659746e10b4b04d676b4b4ea",
                                  "typeString": "literal_string \"minimum of 100 wei to distribute\""
                                }
                              ],
                              "expression": {
                                "id": 33887,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "12178:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12181:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "12178:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33891,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12178:51:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33892,
                          "nodeType": "ExpressionStatement",
                          "src": "12178:51:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33893,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "12239:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12251:21:48",
                              "memberName": "distributeAndClaimAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3738,
                              "src": "12239:33:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 33896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12239:35:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33897,
                          "nodeType": "ExpressionStatement",
                          "src": "12239:35:48"
                        }
                      ]
                    },
                    "id": 33899,
                    "nodeType": "IfStatement",
                    "src": "11767:516:48",
                    "trueBody": {
                      "id": 33847,
                      "nodeType": "Block",
                      "src": "11778:129:48",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33833,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11804:20:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33830,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6945,
                                "src": "11788:2:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12226",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33832,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11791:12:48",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11712,
                              "src": "11788:15:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11788:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33835,
                          "nodeType": "ExpressionStatement",
                          "src": "11788:37:48"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33837,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "11845:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33836,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7733,
                                7754,
                                7778,
                                7802
                              ],
                              "referencedDeclaration": 7733,
                              "src": "11835:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11835:16:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33839,
                          "nodeType": "ExpressionStatement",
                          "src": "11835:16:48"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33840,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "11861:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33842,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11873:13:48",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2945,
                                "src": "11861:25:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33843,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33630,
                                  "src": "11894:1:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "11861:35:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11861:37:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33846,
                          "nodeType": "ExpressionStatement",
                          "src": "11861:37:48"
                        }
                      ]
                    }
                  },
                  "id": 33900,
                  "nodeType": "IfStatement",
                  "src": "10501:1782:48",
                  "trueBody": {
                    "id": 33826,
                    "nodeType": "Block",
                    "src": "10522:1239:48",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33677,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32712,
                              "src": "10537:5:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33676,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7643,
                              7664,
                              7688,
                              7712
                            ],
                            "referencedDeclaration": 7643,
                            "src": "10532:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10532:11:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33679,
                        "nodeType": "ExpressionStatement",
                        "src": "10532:11:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33680,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "10553:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10565:13:48",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2945,
                              "src": "10553:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33683,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33653,
                                "src": "10586:12:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "10553:46:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10553:48:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33686,
                        "nodeType": "ExpressionStatement",
                        "src": "10553:48:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33688,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32718,
                              "src": "10616:3:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33687,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7643,
                              7664,
                              7688,
                              7712
                            ],
                            "referencedDeclaration": 7643,
                            "src": "10611:4:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10611:9:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33690,
                        "nodeType": "ExpressionStatement",
                        "src": "10611:9:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33691,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32676,
                                "src": "10630:11:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4119",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33693,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10642:13:48",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2945,
                              "src": "10630:25:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33694,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33664,
                                "src": "10663:10:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "10630:44:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10630:46:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33697,
                        "nodeType": "ExpressionStatement",
                        "src": "10630:46:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33699,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32706,
                              "src": "10696:9:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33698,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7733,
                              7754,
                              7778,
                              7802
                            ],
                            "referencedDeclaration": 7733,
                            "src": "10686:9:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10686:20:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33701,
                        "nodeType": "ExpressionStatement",
                        "src": "10686:20:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 33702,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "10716:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33704,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10728:5:48",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3233,
                            "src": "10716:17:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 33705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10716:19:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33706,
                        "nodeType": "ExpressionStatement",
                        "src": "10716:19:48"
                      },
                      {
                        "assignments": [
                          33708
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33708,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "10750:12:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33826,
                            "src": "10745:17:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33707,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10745:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33714,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33711,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32712,
                                "src": "10773:5:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33710,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10765:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33709,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10765:7:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10765:14:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10780:7:48",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "10765:22:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10745:42:48"
                      },
                      {
                        "assignments": [
                          33716
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33716,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "10802:10:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33826,
                            "src": "10797:15:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33715,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10797:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33722,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33719,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 32718,
                                "src": "10823:3:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10815:7:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 33717,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10815:7:48",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10815:12:48",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 33721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10828:7:48",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "10815:20:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10797:38:48"
                      },
                      {
                        "assignments": [
                          33724
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33724,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "10850:10:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33826,
                            "src": "10845:15:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33723,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10845:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33740,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 33737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 33727,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33632,
                                        "src": "10869:1:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "id": 33726,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10864:4:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 33725,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10864:4:48",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33728,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10864:7:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 33731,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 32676,
                                          "src": "10882:11:48",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$4119",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 33730,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10874:7:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 33729,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10874:7:48",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 33732,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10874:20:48",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 33733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "10895:7:48",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "10874:28:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10864:38:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 33735,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10863:40:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 33736,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33653,
                              "src": "10906:12:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10863:55:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 33738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10921:20:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "10863:78:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10845:96:48"
                      },
                      {
                        "assignments": [
                          33742
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33742,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "10956:8:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33826,
                            "src": "10951:13:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33741,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10951:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33756,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 33752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 33745,
                                      "name": "y",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 33632,
                                      "src": "10973:1:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "id": 33744,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10968:4:48",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 33743,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10968:4:48",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 33746,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10968:7:48",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 33749,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 32676,
                                        "src": "10986:11:48",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                                          "typeString": "contract StakingPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                                          "typeString": "contract StakingPool"
                                        }
                                      ],
                                      "id": 33748,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10978:7:48",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 33747,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10978:7:48",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 33750,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10978:20:48",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 33751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10999:7:48",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "10978:28:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10968:38:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 33753,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10967:40:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 33754,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33724,
                            "src": "11010:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10967:53:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10951:69:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33762,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33632,
                              "src": "11060:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33759,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32676,
                                  "src": "11038:11:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4119",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 33758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11030:8:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 33757,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11030:8:48",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11030:20:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 33761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11051:8:48",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "11030:29:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 33763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11030:32:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33764,
                        "nodeType": "ExpressionStatement",
                        "src": "11030:32:48"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 33765,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32676,
                              "src": "11072:11:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4119",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11084:21:48",
                            "memberName": "distributeAndClaimAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3738,
                            "src": "11072:33:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 33768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11072:35:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33769,
                        "nodeType": "ExpressionStatement",
                        "src": "11072:35:48"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33770,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33724,
                            "src": "11120:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11134:1:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11120:15:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33777,
                        "nodeType": "IfStatement",
                        "src": "11117:34:48",
                        "trueBody": {
                          "expression": {
                            "id": 33775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33773,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33724,
                              "src": "11137:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33774,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11150:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11137:14:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33776,
                          "nodeType": "ExpressionStatement",
                          "src": "11137:14:48"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33778,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33742,
                            "src": "11164:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11176:1:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11164:13:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 33785,
                        "nodeType": "IfStatement",
                        "src": "11161:29:48",
                        "trueBody": {
                          "expression": {
                            "id": 33783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 33781,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33742,
                              "src": "11179:8:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 33782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11189:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11179:11:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 33784,
                          "nodeType": "ExpressionStatement",
                          "src": "11179:11:48"
                        }
                      },
                      {
                        "assignments": [
                          33787
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33787,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "11205:20:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33826,
                            "src": "11200:25:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33786,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11200:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33791,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33788,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33708,
                            "src": "11228:12:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33789,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33724,
                            "src": "11243:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11228:25:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11200:53:48"
                      },
                      {
                        "expression": {
                          "id": 33798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33792,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33708,
                            "src": "11263:12:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33795,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32712,
                                  "src": "11286:5:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11278:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33793,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11278:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11278:14:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11293:7:48",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "11278:22:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11263:37:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33799,
                        "nodeType": "ExpressionStatement",
                        "src": "11263:37:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33801,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33708,
                              "src": "11440:12:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33802,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33787,
                              "src": "11454:20:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11476:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 33800,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8655,
                              8691,
                              8741,
                              8777
                            ],
                            "referencedDeclaration": 8655,
                            "src": "11422:17:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 33804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11422:56:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33805,
                        "nodeType": "ExpressionStatement",
                        "src": "11422:56:48"
                      },
                      {
                        "assignments": [
                          33807
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33807,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "11493:18:48",
                            "nodeType": "VariableDeclaration",
                            "scope": 33826,
                            "src": "11488:23:48",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33806,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11488:4:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33811,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33808,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33716,
                            "src": "11514:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 33809,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33742,
                            "src": "11527:8:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11514:21:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11488:47:48"
                      },
                      {
                        "expression": {
                          "id": 33818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33812,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33716,
                            "src": "11545:10:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33815,
                                  "name": "bob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32718,
                                  "src": "11566:3:48",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11558:7:48",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 33813,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11558:7:48",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 33816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11558:12:48",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 33817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11571:7:48",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "11558:20:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11545:33:48",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 33819,
                        "nodeType": "ExpressionStatement",
                        "src": "11545:33:48"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33821,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33716,
                              "src": "11718:10:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33822,
                              "name": "bobBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33807,
                              "src": "11730:18:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 33823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11750:1:48",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 33820,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8655,
                              8691,
                              8741,
                              8777
                            ],
                            "referencedDeclaration": 8655,
                            "src": "11700:17:48",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 33824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11700:52:48",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33825,
                        "nodeType": "ExpressionStatement",
                        "src": "11700:52:48"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c07d2f57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDistribute",
            "nameLocation": "10152:14:48",
            "parameters": {
              "id": 33633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33630,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "10174:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33902,
                  "src": "10167:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33629,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10167:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33632,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "10184:1:48",
                  "nodeType": "VariableDeclaration",
                  "scope": 33902,
                  "src": "10177:8:48",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 33631,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10177:6:48",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10166:20:48"
            },
            "returnParameters": {
              "id": 33634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10194:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33925,
            "nodeType": "FunctionDefinition",
            "src": "12295:236:48",
            "nodes": [],
            "body": {
              "id": 33924,
              "nodeType": "Block",
              "src": "12335:196:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33906,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "12353:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33905,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7733,
                        7754,
                        7778,
                        7802
                      ],
                      "referencedDeclaration": 7733,
                      "src": "12343:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12343:20:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33908,
                  "nodeType": "ExpressionStatement",
                  "src": "12343:20:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 33912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12387:32:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 33909,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "12371:2:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12226",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33911,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12374:12:48",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11712,
                      "src": "12371:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12371:49:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33914,
                  "nodeType": "ExpressionStatement",
                  "src": "12371:49:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33918,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "12450:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 33919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12458:35:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 33920,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "12495:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33921,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "12506:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33915,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "12428:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12440:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "12428:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12428:96:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33923,
                  "nodeType": "ExpressionStatement",
                  "src": "12428:96:48"
                }
              ]
            },
            "functionSelector": "8adcff77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBadWithdrawalCred",
            "nameLocation": "12304:21:48",
            "parameters": {
              "id": 33903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12325:2:48"
            },
            "returnParameters": {
              "id": 33904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12335:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33957,
            "nodeType": "FunctionDefinition",
            "src": "12537:301:48",
            "nodes": [],
            "body": {
              "id": 33956,
              "nodeType": "Block",
              "src": "12564:274:48",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33929,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32706,
                        "src": "12601:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33928,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7733,
                        7754,
                        7778,
                        7802
                      ],
                      "referencedDeclaration": 7733,
                      "src": "12591:9:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12591:20:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33931,
                  "nodeType": "ExpressionStatement",
                  "src": "12591:20:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33935,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "12641:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33936,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "12649:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33937,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "12673:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33938,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "12684:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33932,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "12619:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12631:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "12619:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12619:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33940,
                  "nodeType": "ExpressionStatement",
                  "src": "12619:83:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77726f6e67207374617465",
                        "id": 33944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12726:13:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5707d4fbf04e9bc9ef481445136a118e0a93f13ffc5a45989669399492733b10",
                          "typeString": "literal_string \"wrong state\""
                        },
                        "value": "wrong state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5707d4fbf04e9bc9ef481445136a118e0a93f13ffc5a45989669399492733b10",
                          "typeString": "literal_string \"wrong state\""
                        }
                      ],
                      "expression": {
                        "id": 33941,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "12710:2:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12226",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12713:12:48",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11712,
                      "src": "12710:15:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12710:30:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33946,
                  "nodeType": "ExpressionStatement",
                  "src": "12710:30:48"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33950,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32721,
                        "src": "12770:6:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33951,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32724,
                        "src": "12778:22:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33952,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32727,
                        "src": "12802:9:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33953,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32730,
                        "src": "12813:17:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33947,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32676,
                        "src": "12748:11:48",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4119",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12760:9:48",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3399,
                      "src": "12748:21:48",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12748:83:48",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33955,
                  "nodeType": "ExpressionStatement",
                  "src": "12748:83:48"
                }
              ]
            },
            "functionSelector": "e96d88e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testLock",
            "nameLocation": "12546:8:48",
            "parameters": {
              "id": 33926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12554:2:48"
            },
            "returnParameters": {
              "id": 33927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12564:0:48"
            },
            "scope": 33958,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32651,
              "name": "Test",
              "nameLocations": [
                "715:4:48"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10107,
              "src": "715:4:48"
            },
            "id": 32652,
            "nodeType": "InheritanceSpecifier",
            "src": "715:4:48"
          }
        ],
        "canonicalName": "StakingPoolLockedTest",
        "contractDependencies": [
          58,
          233,
          898,
          1078,
          1556,
          1738,
          2101,
          2731,
          4262
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33958,
          10107,
          7177,
          6914
        ],
        "name": "StakingPoolLockedTest",
        "nameLocation": "690:21:48",
        "scope": 33959,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 48
}