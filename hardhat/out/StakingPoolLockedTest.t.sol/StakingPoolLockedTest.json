{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ENSAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depCont",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factoryProxy",
      "outputs": [
        {
          "internalType": "contract FactoryProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensArt",
      "outputs": [
        {
          "internalType": "contract FrensArt",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensClaim",
      "outputs": [
        {
          "internalType": "contract FrensClaim",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensInitialiser",
      "outputs": [
        {
          "internalType": "contract FrensInitialiser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensMetaHelper",
      "outputs": [
        {
          "internalType": "contract FrensMetaHelper",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolSetter",
      "outputs": [
        {
          "internalType": "contract FrensPoolSetter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShare",
      "outputs": [
        {
          "internalType": "contract FrensPoolShare",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensPoolShareTokenURI",
      "outputs": [
        {
          "internalType": "contract FrensPoolShareTokenURI",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frensStorage",
      "outputs": [
        {
          "internalType": "contract FrensStorage",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxy",
      "outputs": [
        {
          "internalType": "contract IStakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ssvRegistryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPool",
      "outputs": [
        {
          "internalType": "contract StakingPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakingPoolFactory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "x",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "y",
          "type": "uint64"
        }
      ],
      "name": "testAddToDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBadWithdrawalCred",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        }
      ],
      "name": "testDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "x",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "y",
          "type": "uint32"
        }
      ],
      "name": "testDistribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testLock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testStake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint72",
          "name": "x",
          "type": "uint72"
        },
        {
          "internalType": "uint72",
          "name": "y",
          "type": "uint72"
        }
      ],
      "name": "testWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "727:12474:50:-:0;;;;;;1594:4:26;727:12474:50;;;;;;;;;1908:42;1326;727:12474;;;;;;;;;1318:51;727:12474;;;1318:51;727:12474;1516:42;727:12474;1516:42;727:12474;;;1516:42;727:12474;1592:42;727:12474;1592:42;727:12474;;;1592:42;727:12474;;1676:25;727:12474;;;1676:25;727:12474;1735:42;727:12474;1735:42;727:12474;;;1735:42;727:12474;1822:42;727:12474;1814:51;727:12474;;;1814:51;727:12474;1900:51;727:12474;;;1900:51;727:12474;;1973:101;727:12474;;:::i;:::-;;;;;;;;;-1:-1:-1;;727:12474:50;1973:101;727:12474;;;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;-1:-1:-1;;;727:12474:50;;2111:69;727:12474;;;;;;;:::i;:::-;;;;;;-1:-1:-1;727:12474:50;;2111:69;727:12474;2111:69;727:12474;;;;;;;;2204:197;727:12474;;:::i;:::-;;;;;;;-1:-1:-1;727:12474:50;2204:197;727:12474;;;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;2435:66;;727:12474;;;;;;;;;;;2204:197;727:12474;;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;;2111:69;727:12474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:101;727:12474;;;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "727:12474:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1783:82;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1154:32;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;12961:9;727:12474;;;-1:-1:-1;;;;;727:12474:50;12961:9;;727:12474;;12961:9;:::i;:::-;727:12474;12979:11;727:12474;;;13044:17;727:12474;12979:83;;;;;;727:12474;;;;;;;;12979:83;727:12474;;;12979:83;;;;727:12474;12979:83;;;:::i;:::-;;;;;;;;;;;;;;727:12474;;;-1:-1:-1;;;;;;;;;;;13070:30:50;;;;;727:12474;;;;;;;;;;;;;13070:30;;727:12474;;13070:30;;727:12474;;;;;;-1:-1:-1;;;727:12474:50;;;;13070:30;;;;;;;;;;;727:12474;;;12979:11;727:12474;;;13044:17;727:12474;13108:83;;;;;;727:12474;;;;;;13108:83;;;;;;;;727:12474;13108:83;;;:::i;:::-;;;;;;;;;;;727:12474;;13108:83;;;;:::i;:::-;727:12474;;13108:83;727:12474;13108:83;727:12474;;;;;;;;;13108:83;727:12474;;;;13070:30;;;;:::i;:::-;727:12474;;13070:30;;;;727:12474;;;;13070:30;727:12474;;;;;;;;;12979:83;;;;:::i;:::-;727:12474;;12979:83;;;;727:12474;;;;;;;;;;;;;1192:28;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1285:84;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1871:80;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;-1:-1:-1;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;10586:9;727:12474;-1:-1:-1;;;;;727:12474:50;;10586:9;;727:12474;;10586:9;:::i;:::-;10604:11;727:12474;;;;;;10669:17;727:12474;10604:83;;;;;;727:12474;;-1:-1:-1;;;10604:83:50;;727:12474;;;;;;;;;;;10604:83;;727:12474;10604:83;;;:::i;:::-;;;;;;;;;;;727:12474;10760:20;;;727:12474;;;;;;;;;;;;;;;;;10818:20;;727:12474;;;;;;;;;;10864:6;;;;;;:17;;;727:12474;10861:1782;;;727:12474;;10892:11;727:12474;10897:5;727:12474;;10892:11;:::i;:::-;727:12474;;;;10913:48;;;;;727:12474;;;;;;;;;;10913:48;;;;;;;;;;;;;;;10861:1782;727:12474;;10971:9;727:12474;10976:3;727:12474;;10971:9;:::i;:::-;727:12474;;;;10990:46;;;;;727:12474;;;;;10990:46;;;;;;;;;;;;;;;10861:1782;727:12474;;11056:9;727:12474;10586:9;727:12474;;11056:9;:::i;:::-;727:12474;;;;;11076:19;;;;;727:12474;;;;;;;;;;;;;11076:19;;;;;;;;;;10861:1782;727:12474;;;10897:5;727:12474;;11125:22;727:12474;;10976:3;727:12474;;11175:20;727:12474;;;;;11234:28;11224:38;11234:28;;11224:38;;:::i;:::-;727:12474;;;;;;;;;;;;;;;;;;;;;;;11338:28;11327:53;11338:28;11328:38;11338:28;;11328:38;;:::i;:::-;11327:53;:::i;:::-;11390:32;;;;;;10861:1782;11390:32;;;;727:12474;;;11432:35;;;;;727:12474;;;;;;;;;;;;;11432:35;;;;;;;;;;10861:1782;11480:15;;;;11874:21;11480:15;;727:12474;12060:52;11480:15;;11477:34;;10861:1782;727:12474;11524:13;;11521:29;;10861:1782;11782:56;11588:25;;;;:::i;:::-;727:12474;10897:5;727:12474;;11638:22;11782:56;:::i;:::-;11874:21;:::i;:::-;727:12474;10976:3;727:12474;;11918:20;12060:52;:::i;:::-;727:12474;;11521:29;11539:11;;-1:-1:-1;11521:29:50;;11477:34;11497:14;;-1:-1:-1;11477:34:50;;11432:35;;;;;;;;:::i;:::-;727:12474;;11432:35;;;;;;727:12474;;;;11432:35;727:12474;;;11390:32;727:12474;;;;;;;;;;;11390:32;;;;;727:12474;1671:64:26;;;727:12474:50;;;;;;;;11076:19;;;;:::i;:::-;727:12474;;11076:19;;;;10990:46;;;;:::i;:::-;727:12474;;10990:46;;;;;727:12474;;;10913:48;;;;:::i;:::-;727:12474;;10913:48;;;;727:12474;;;;10861:1782;12127:516;;;;;-1:-1:-1;12127:516:50;;;;;;727:12474;;;-1:-1:-1;;;;;;;;;;;12148:37:50;;;;;727:12474;;;;;;;;12148:37;;;;;;727:12474;12148:37;;;:::i;:::-;;;;;;;;;;;;;;12127:516;727:12474;;12195:16;727:12474;12205:5;727:12474;;12195:16;:::i;:::-;727:12474;;12221:37;;;;;727:12474;;;;;;;;;;;;12221:37;;;;;;;;;;12127:516;;727:12474;;12148:37;;;;:::i;:::-;727:12474;;12148:37;;;;;727:12474;;;;;;;;;12148:37;727:12474;;;12127:516;727:12474;;;;;;12283:11;727:12474;12288:5;727:12474;;12283:11;:::i;:::-;727:12474;;;;12304:48;;;;;;727:12474;;;;;;;;;;;;12304:48;;;;;;;;;;;;;;;12127:516;727:12474;;12362:9;727:12474;12367:3;727:12474;;12362:9;:::i;:::-;727:12474;;;;12381:46;;;;;727:12474;;;;;12381:46;;;;;;;;;;;;;;;;;;12127:516;727:12474;;12447:9;727:12474;10586:9;727:12474;;12447:9;:::i;:::-;727:12474;;;;12467:19;;;;;727:12474;;;;;;;;;;;;;12467:19;;;;;;;;;;;;;12127:516;727:12474;;;;;;;;;12496:32;;;;;12127:516;12496:32;;;;-1:-1:-1;;;;;;;;;;;12538:51:50;;;;;727:12474;;;;;;;;;;;;;12538:51;;727:12474;;12538:51;;727:12474;;;;;;;;;;;12538:51;;;;;;;;;;;12127:516;727:12474;;;;12599:35;;;;;727:12474;;;;;;;;;;;;;12599:35;;;;;;;;;;12127:516;;727:12474;;12599:35;727:12474;;12538:51;;;;:::i;:::-;727:12474;;12538:51;;;;12496:32;;;;;12467:19;;;;:::i;:::-;727:12474;;12467:19;;;;12381:46;;;;:::i;:::-;727:12474;;12381:46;;;;;727:12474;;;12304:48;;;;:::i;:::-;727:12474;;12304:48;;;;;727:12474;;;;;;;;;10864:17;10874:7;10878:3;10874:7;;10864:17;;727:12474;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;727:12474:50;;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;727:12474:50;10604:83;;;;:::i;:::-;727:12474;;10604:83;;;;727:12474;;;;;;;;;;;;;;;;;848:38;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;892:52;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1026:44;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;5822:11;727:12474;;;-1:-1:-1;;;5822:19:50;;727:12474;5822:19;;-1:-1:-1;;;;;727:12474:50;5822:19;;727:12474;;;;;;;;5822:19;;;;;;;;;;;727:12474;;;5884:9;727:12474;;;;3678:6:26;;;3674:212;;727:12474:50;;;3674:212:26;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;3705:44:26;727:12474:50;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;3768:34:26;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;3821:34:26;;;;;:::i;:::-;3674:212;;;727:12474:50;;;5822:19;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;727:12474;;;;;;;;;;;;;772:24;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1226:38;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;-1:-1:-1;;727:12474:50;;;;;;:::i;:::-;;;;;;;;;;;8169:9;727:12474;8169:9;;-1:-1:-1;;;;;727:12474:50;8169:9;:::i;:::-;8187:11;727:12474;8252:17;727:12474;;;-1:-1:-1;;;;;727:12474:50;8187:83;;;;;727:12474;;-1:-1:-1;;;8187:83:50;;727:12474;;;;;;;;;;;8187:83;;727:12474;8187:83;;;:::i;:::-;;;;;;;;;;;727:12474;;;;;;;;;8281:6;;:15;;;727:12474;8281:38;;;727:12474;8278:1062;;;-1:-1:-1;8340:5:50;727:12474;8330:16;;-1:-1:-1;;;;;727:12474:50;8330:16;:::i;:::-;8187:11;727:12474;;;-1:-1:-1;;;;;727:12474:50;8356:37;;;;;727:12474;;;;;;;;;;;;8356:37;;727:12474;;;8356:37;;;;;;;;;8278:1062;-1:-1:-1;;8413:14:50;727:12474;8340:5;727:12474;;;-1:-1:-1;;;8413:44:50;;-1:-1:-1;;;;;727:12474:50;;;;8413:44;;727:12474;;;;1671:64:26;;;727:12474:50;;;;;;;;;;;8413:44;;;;;;;;;;;8278:1062;8478:7;;;;;;:::i;:::-;8187:11;727:12474;;;-1:-1:-1;;;8511:32:50;;727:12474;8511:32;;1671:64:26;;;727:12474:50;;;;;;;;;-1:-1:-1;;;;;727:12474:50;8511:32;;;;;;;;;;8278:1062;8553:19;727:12474;;;;;8553:19;:::i;:::-;8187:11;727:12474;;;-1:-1:-1;;;;;727:12474:50;8582:27;;;;;727:12474;;-1:-1:-1;;;8582:27:50;;727:12474;8582:27;;1671:64:26;;;727:12474:50;;;;;;;;;;;;;;;;;;;;8582:27;;;;;;;;;;8278:1062;-1:-1:-1;;8187:11:50;727:12474;;;-1:-1:-1;;;8634:32:50;;727:12474;8634:32;;1671:64:26;;;;727:12474:50;;;;;;;;-1:-1:-1;;;;;727:12474:50;8634:32;;;;;;;;;;;8278:1062;727:12474;8728:7;727:12474;;8687:17;727:12474;;;;;;8687:17;:::i;:::-;8728:7;:::i;8634:32::-;;;;727:12474;8634:32;;727:12474;8634:32;;;;;;727:12474;8634:32;;;:::i;:::-;;;727:12474;;;;;;8728:7;8634:32;;;;;-1:-1:-1;8634:32:50;;8582:27;;;;:::i;:::-;727:12474;;8582:27;;;;8511:32;;727:12474;8511:32;;727:12474;8511:32;;;;;;727:12474;8511:32;;;:::i;:::-;;;727:12474;;;;8553:19;727:12474;;8511:32;;;;;-1:-1:-1;8511:32:50;;8413:44;;;;727:12474;8413:44;;727:12474;8413:44;;;;;;727:12474;8413:44;;;:::i;:::-;;;727:12474;;;;;8413:44;;;;;;;-1:-1:-1;8413:44:50;;8356:37;;;;:::i;:::-;727:12474;;8356:37;;;;8278:1062;727:12474;;;;;;-1:-1:-1;;;;;;;;;;;8772:37:50;;;;;727:12474;;;;;;;;8772:37;;;;;;727:12474;8772:37;;;:::i;:::-;;;;;;;;;;;;;;8751:589;-1:-1:-1;;8829:5:50;727:12474;8819:16;;-1:-1:-1;;;;;727:12474:50;8819:16;:::i;:::-;8187:11;727:12474;-1:-1:-1;;;;;727:12474:50;;8845:37;;;;;727:12474;;;;;;;;;;;;;8845:37;;727:12474;8845:37;;;;;;;;;8751:589;;727:12474;;8772:37;;;;:::i;:::-;727:12474;;8772:37;;;;8751:589;8910:8;727:12474;;;8900:18;8910:8;;;-1:-1:-1;;;;;;;;;;;8930:60:50;;;;;727:12474;;;;;;;;8930:60;;;;;;727:12474;8930:60;;;:::i;8897:443::-;9098:5;727:12474;9088:16;;-1:-1:-1;;;;;727:12474:50;9088:16;:::i;:::-;8187:11;727:12474;-1:-1:-1;;;;;727:12474:50;;9114:37;;;;;727:12474;;;;;;;;;;;;;9114:37;;727:12474;9114:37;;;;;;;;;8897:443;-1:-1:-1;9171:14:50;727:12474;9098:5;727:12474;;;-1:-1:-1;;;9171:44:50;;-1:-1:-1;;;;;727:12474:50;;;;9171:44;;727:12474;;;;1671:64:26;;;727:12474:50;;;;;;;;;;9171:44;;;;;;;;;;;8897:443;9236:7;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;9255:39:50;;;;;727:12474;;;;;;;;;;;;;9255:39;;727:12474;;9255:39;;727:12474;;;;;;-1:-1:-1;;;727:12474:50;;;;9255:39;;;;;;;;;;;8897:443;-1:-1:-1;;8187:11:50;727:12474;-1:-1:-1;;;;;727:12474:50;9304:27;;;;;727:12474;;-1:-1:-1;;;9304:27:50;;727:12474;9304:27;;1671:64:26;;;;727:12474:50;;;;;;;;;;;;;;;;;;;9304:27;;;;;;;;;;8897:443;;727:12474;;9255:39;;;;:::i;:::-;727:12474;;9255:39;;;;;727:12474;;;;;;;;;9171:44;;;;727:12474;9171:44;;;;;;;;;727:12474;9171:44;;;:::i;:::-;;;727:12474;;;;;;;9171:44;;;;;;-1:-1:-1;9171:44:50;;9114:37;;;;:::i;:::-;727:12474;;9114:37;;;;8281:38;727:12474;8311:8;727:12474;;;8300:19;;8281:38;;:15;727:12474;;;;8291:5;;8281:15;;8187:83;;;;:::i;:::-;727:12474;;8187:83;;;;727:12474;;;;;;;;;;;;;;;12713:9;727:12474;-1:-1:-1;;;;;727:12474:50;;12713:9;;727:12474;;12713:9;:::i;:::-;-1:-1:-1;;;;;;;;;;;12731:49:50;;;;;;727:12474;;;;;12731:49;;727:12474;;;;;;12731:49;;727:12474;12731:49;;727:12474;;;;;;;;;;;12731:49;;;;;;;;;;;727:12474;;;12788:11;727:12474;;;;12788:96;;;;;;727:12474;;;;;;12788:96;;727:12474;;12788:96;;727:12474;;12810:6;727:12474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;727:12474:50;;;;;;;;;;12788:11;727:12474;;-1:-1:-1;;;727:12474:50;;;;;;;;;;12855:9;727:12474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:26;12788:96:50;;;;;;;;;;727:12474;;;12855:9;727:12474;;;;;-1:-1:-1;727:12474:50;;;;;;;;;;-1:-1:-1;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;727:12474:50;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;727:12474:50;;-1:-1:-1;727:12474:50;;-1:-1:-1;727:12474:50;;-1:-1:-1;727:12474:50;;;;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;727:12474:50;;;;;;;;;;;;12810:6;727:12474;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;-1:-1:-1;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;727:12474:50;;;;;;;;12731:49;;;;:::i;:::-;727:12474;;12731:49;;;;727:12474;;;;;;;;;;;;;988:32;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1708:69;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1112:36;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;;;;;;;5977:41:50;;;;;;727:12474;;-1:-1:-1;;;5977:41:50;;;727:12474;;5977:41;;727:12474;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;5977:41;;;;;;;;;727:12474;-1:-1:-1;6031:5:50;727:12474;-1:-1:-1;;;;;727:12474:50;;6026:11;;727:12474;;6026:11;:::i;:::-;6045;727:12474;;;;;;;;6045:37;;;;;;727:12474;;;;;;;;;;6045:37;;;;;;;;;;;;;;;727:12474;;;6114:9;727:12474;6114:9;727:12474;;6114:9;:::i;:::-;727:12474;;;;6197:17;727:12474;6132:83;;;;;;727:12474;;-1:-1:-1;;;6132:83:50;;727:12474;;;;;;;;;;;6132:83;;727:12474;6132:83;;;:::i;:::-;;;;;;;;;;;;;;727:12474;6226:5;;;;;;:22;;;727:12474;6223:674;;;727:12474;;;6259:16;727:12474;6031:5;727:12474;;6259:16;:::i;:::-;727:12474;;;;6285:37;;;;;;727:12474;;;;;;;6285:37;;;;;;;;;;;;;;;6223:674;727:12474;;;6342:14;727:12474;;;;6031:5;727:12474;;;;;;;;;;;;6342:44;;727:12474;6342:44;;727:12474;;;;;1671:64:26;6342:44:50;;;;;;;;;;;6223:674;6407:7;;;;;;:::i;:::-;727:12474;;;;;;;;;;;;;;;;6440:32;;727:12474;6440:32;;1671:64:26;6440:32:50;;;;;;;;;;;6223:674;6482:19;;727:12474;6482:19;;;;;;:::i;:::-;727:12474;;;;;;;;;;;6525:30;;;;;;;;;;;;;6223:674;6565:19;;;;;:::i;6525:30::-;;;;;;;;;;;;;;;;:::i;:::-;;;727:12474;;;;6565:19;727:12474;;6525:30;;;;;;;;;6440:32;;;;;;;;;;;;;;;;;:::i;:::-;;;727:12474;;;;;;;6440:32;;;;;;;;727:12474;;;;;;;;;6342:44;;;;;;;;;;;;;;;;:::i;:::-;;;727:12474;;;;;6342:44;;;;;;;;6285:37;;;;:::i;:::-;727:12474;;6285:37;;;;6223:674;6599:298;;;;;;;;;;6602:6;;;6620:37;;;;;727:12474;;;;6620:37;;;;;;;;;727:12474;6620:37;;;:::i;:::-;;;;;;;;;;;;;;6599:298;727:12474;;6667:16;727:12474;6031:5;727:12474;;6667:16;:::i;:::-;727:12474;;6693:37;;;;;727:12474;;;;;6693:37;;;;;;;;;;;;;;;6599:298;;727:12474;;6620:37;;;;:::i;:::-;727:12474;;6620:37;;;;6599:298;6755:60;;;;;727:12474;;;;6755:60;;;;;;;;;727:12474;6755:60;;;:::i;6226:22::-;6235:13;6240:8;6235:13;;;6226:22;;6132:83;;;;:::i;:::-;727:12474;;6132:83;;;;6045:37;;;;:::i;:::-;727:12474;;6045:37;;;;5977:41;;;;:::i;:::-;727:12474;;5977:41;;;;727:12474;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;9419:11;727:12474;;9502:5;727:12474;-1:-1:-1;;;;;727:12474:50;;;9411:28;;727:12474;9497:11;;727:12474;;9497:11;:::i;:::-;727:12474;-1:-1:-1;;;;;;;;;;;9516:41:50;;;;;727:12474;;-1:-1:-1;;;9516:41:50;;727:12474;;9516:41;;727:12474;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;;9516:41;;;;;;;;727:12474;;;;;;;9565:56;;;;;727:12474;;;;;;9565:56;;;;9598:20;;727:12474;9598:20;;9565:56;;;;;;;;;;;;;727:12474;;;9937:9;727:12474;9937:9;727:12474;;9937:9;:::i;:::-;727:12474;;;;10020:17;727:12474;9955:83;;;;;;727:12474;;-1:-1:-1;;;9955:83:50;;727:12474;;;;;;;;;;;9955:83;;727:12474;9955:83;;;:::i;:::-;;;;;;;;;;;;;;727:12474;;;10046:11;727:12474;9502:5;727:12474;;10046:11;:::i;:::-;727:12474;;;;10065:56;;;;;;727:12474;;;;;;;10065:56;;;;;;;;;;;;;;;727:12474;;;;;;;;;;;10177:28;727:12474;;;;;;10177:28;;;:::i;:::-;727:12474;10253:15;727:12474;;;;;;;;;;;;10253:35;;;;;;;;;;;;;;;727:12474;1671:64:26;727:12474:50;1671:64:26;;727:12474:50;;10243:46;727:12474;10302:9;727:12474;9937:9;727:12474;;10302:9;:::i;:::-;727:12474;;;;10320:19;;;;;727:12474;;;;;;;;;;;;;10320:19;;;;;;;;;;;;;;727:12474;;;10372:28;727:12474;;;10372:28;;;:::i;:::-;10253:15;727:12474;;;;;;10431:35;;;;;;;;;;;;7918:5:29;10431:35:50;;;;;727:12474;1671:64:26;727:12474:50;1671:64:26;;727:12474:50;;10421:46;:68;7918:5:29;;:::i;10431:35:50:-;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;10320:19;;;;;;:::i;:::-;727:12474;;10320:19;;;;;10253:35;;;;;;;;;;;;;:::i;:::-;;;;727:12474;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;727:12474:50;10065:56;;;;:::i;:::-;727:12474;;10065:56;;;;9955:83;;;;:::i;:::-;727:12474;;9955:83;;;;9565:56;;;;:::i;:::-;727:12474;;9565:56;;;;9516:41;;;;:::i;:::-;727:12474;;9516:41;;;;727:12474;;;;;;;;;;;;;802:40;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;950:32;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1480:78;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1564:70;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;1076:30;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;2578:18;;;;;;;;-1:-1:-1;;;;;2578:18:50;;;;;;;;;;;;;;;;;;;727:12474;;;;;;2563:33;727:12474;;-1:-1:-1;;;;;727:12474:50;;;;;2563:33;727:12474;;;2640:30;;;;;;;;;;-1:-1:-1;;;;;2640:30:50;;;;;;;727:12474;2640:30;;;;;;;727:12474;;;;2640:30;;;;;;;;;727:12474;;;;;;;2625:45;727:12474;;-1:-1:-1;;;;;727:12474:50;;;;;2625:45;727:12474;;;-1:-1:-1;;;;;727:12474:50;;2723:50;727:12474;;;2723:50;727:12474;;;;;;2563:33;727:12474;;;;2827:34;;;;;;;;;;-1:-1:-1;;;;;2827:34:50;;;;;;;;727:12474;2827:34;;;;727:12474;;2827:34;;;;;;;;;727:12474;;;;;;-1:-1:-1;;;;;727:12474:50;;2808:53;727:12474;;;2808:53;727:12474;-1:-1:-1;;;;;;;;;;;2940:38:50;;;;727:12474;;-1:-1:-1;;;2940:38:50;;2957:4;727:12474;2940:38;;727:12474;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2940:38:50;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;-1:-1:-1;;;;;727:12474:50;2986:75;;;;;727:12474;;;;;;;;;;;;;2986:75;;;727:12474;2986:75;;727:12474;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;2986:75;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;-1:-1:-1;;;;;727:12474:50;3069:67;;;;;727:12474;;;;;;;;;;;;;3069:67;;;727:12474;3069:67;;727:12474;;;;;;3069:67;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;3212:18;727:12474;-1:-1:-1;;;;;727:12474:50;;;;;3175:71;;;;;727:12474;;;;;;;;;;;;;;;3175:71;;727:12474;3175:71;;727:12474;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;3175:71;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;3327:7;727:12474;-1:-1:-1;;;;;727:12474:50;;;;;3290:64;;;;;727:12474;;;;;;;;;;;;;;;3290:64;;727:12474;3290:64;;727:12474;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;3290:64;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;3423:10;727:12474;-1:-1:-1;;;;;727:12474:50;;;;;3386:55;;;;;727:12474;;;;;;;;;;;;;;;3386:55;;727:12474;3386:55;;727:12474;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;3386:55;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;3494:32;;;;;-1:-1:-1;;;;;3494:32:50;;;;;;;;;;;;;;;;727:12474;;3494:32;;;;;;;;;;;;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;3566:71;;;;;727:12474;;;-1:-1:-1;;;3566:71:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;3566:71;;727:12474;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;3566:71;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;3645:66;;;;;727:12474;;;;;;;;;;;;;;;3645:66;;727:12474;3645:66;;727:12474;;;;;;3645:66;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;3763:36;;;;;-1:-1:-1;;;;;3763:36:50;;;;;;;;;;;;;;;;727:12474;;3763:36;;;;;;;;;;;;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;3834:79;;;;;727:12474;;;-1:-1:-1;;;3834:79:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;3834:79;;727:12474;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;3834:79;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;3921:69;;;;;727:12474;;;;;;;;;;;;;;;3921:69;;727:12474;3921:69;;727:12474;;;;;;3921:69;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;4033:28;;;;;-1:-1:-1;;;;;4033:28:50;;;;;;;;;;;;;;;;727:12474;;4033:28;;;;;;;;;;;;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;4095:63;;;;;727:12474;;;-1:-1:-1;;;4095:63:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;4095:63;;727:12474;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;4095:63;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;4166:61;;;;;727:12474;;;;;;;;;;;;;;;4166:61;;727:12474;4166:61;;727:12474;;;;;;4166:61;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;4279:33;;;;;-1:-1:-1;;;;;4279:33:50;;;;;;;;;;;;;;;;727:12474;;4279:33;;;;;;;;;;;;;4261:51;727:12474;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;4350:73;;;;;727:12474;;;-1:-1:-1;;;4350:73:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;4350:73;;727:12474;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;4350:73;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;4261:51;727:12474;-1:-1:-1;;;;;727:12474:50;;;;;4431:66;;;;;727:12474;;;;;;;;;;;;;;;4431:66;;727:12474;4431:66;;727:12474;;;;;;4431:66;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;4549:33;;;;;-1:-1:-1;;;;;4549:33:50;;;;;;;;;;;;;;;;727:12474;;4549:33;;;;;;;;;;;;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;4620:73;;;;;727:12474;;;-1:-1:-1;;;4620:73:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;4620:73;;727:12474;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;4620:73;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;4701:67;;;;;727:12474;;;;;;;;;;;;;;;4701:67;;727:12474;4701:67;;727:12474;;;;;;4701:67;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;4825:40;;;;;-1:-1:-1;;;;;4825:40:50;;;;;;;;;;;;;;;;727:12474;;4825:40;;;;;;;;;;;;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;4901:87;;;;;727:12474;;;-1:-1:-1;;;4901:87:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;4901:87;;727:12474;;;;;3423:10;727:12474;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;4901:87;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;4996:74;;;;;727:12474;;;;;;;;;;;;;;;4996:74;;727:12474;4996:74;;727:12474;;;;;;4996:74;;;;;;;;727:12474;;;;;;;;2563:33;727:12474;;;;;5107:26;;;;;-1:-1:-1;;;;;5107:26:50;;;;;;;;;;;;;;;;727:12474;;5107:26;;;;;;;;;;;;;5096:37;727:12474;;-1:-1:-1;;;;;727:12474:50;;;-1:-1:-1;;;;;;727:12474:50;;;;;;2808:53;727:12474;;;;;;5164:59;;;;;727:12474;;;-1:-1:-1;;;5164:59:50;;727:12474;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;5164:59;;727:12474;;;;;5096:37;727:12474;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;;;5164:59;;;;;;;;727:12474;-1:-1:-1;2808:53:50;727:12474;5096:37;727:12474;-1:-1:-1;;;;;727:12474:50;;;;;5231:60;;;;;727:12474;;;;;;;;;;;;;;;5231:60;;727:12474;5231:60;;727:12474;;;;;;5231:60;;;;;;;;727:12474;5373:38;;-1:-1:-1;;;;;;;;;;;5373:38:50;;;;727:12474;;-1:-1:-1;;;5373:38:50;;2957:4;727:12474;5373:38;;727:12474;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;5373:38:50;;;;;;;;727:12474;-1:-1:-1;2563:33:50;727:12474;-1:-1:-1;;;;;727:12474:50;5419:32;;;;;727:12474;;;;;;;;;;;;;5419:32;;;;;;;;;;727:12474;-1:-1:-1;2723:50:50;727:12474;5541:9;727:12474;;;-1:-1:-1;;;5528:29:50;;-1:-1:-1;;;;;727:12474:50;;;;5528:29;;727:12474;;;;;;;;;;;;;;;;;;5528:29;;;;;;;;;;;727:12474;;;;;;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;5528:29;;;;727:12474;5528:29;727:12474;5528:29;;;;;;;:::i;:::-;;;;5419:32;;;;:::i;:::-;727:12474;;5419:32;;;;5373:38;;;;:::i;:::-;727:12474;;5373:38;;;;5231:60;;;;:::i;:::-;727:12474;;5231:60;;;;5164:59;;;;:::i;:::-;727:12474;;5164:59;;;;5107:26;-1:-1:-1;;;1671:64:26;;;727:12474:50;1671:64:26;727:12474:50;1671:64:26;;4996:74:50;;;;:::i;:::-;727:12474;;4996:74;;;;4901:87;;;;:::i;:::-;727:12474;;4901:87;;;;4701:67;;;;:::i;:::-;727:12474;;4701:67;;;;4620:73;;;;:::i;:::-;727:12474;;4620:73;;;;4431:66;;;;:::i;:::-;727:12474;;4431:66;;;;4350:73;;;;:::i;:::-;727:12474;;4350:73;;;;4166:61;;;;:::i;:::-;727:12474;;4166:61;;;;4095:63;;;;:::i;:::-;727:12474;;4095:63;;;;3921:69;;;;:::i;:::-;727:12474;;3921:69;;;;3834:79;;;;:::i;:::-;727:12474;;3834:79;;;;3645:66;;;;:::i;:::-;727:12474;;3645:66;;;;3566:71;;;;:::i;:::-;727:12474;;3566:71;;;;3386:55;;;;:::i;:::-;727:12474;;3386:55;;;;3290:64;;;;:::i;:::-;727:12474;;3290:64;;;;3175:71;;;;:::i;:::-;727:12474;;3175:71;;;;3069:67;;;;:::i;:::-;727:12474;;3069:67;;;;2986:75;;;;:::i;:::-;727:12474;;2986:75;;;;2940:38;;;;:::i;:::-;727:12474;;2940:38;;;;2827:34;-1:-1:-1;;;1671:64:26;;;727:12474:50;1671:64:26;;;;2640:30:50;-1:-1:-1;;;1671:64:26;;;727:12474:50;1671:64:26;;;;2578:18:50;-1:-1:-1;;;1671:64:26;;;727:12474:50;1671:64:26;;;;727:12474:50;;;;;;;-1:-1:-1;;727:12474:50;;;;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;;;;6994:9;727:12474;-1:-1:-1;;;;;727:12474:50;6994:9;;727:12474;;6994:9;:::i;:::-;7012:11;727:12474;;;;;7077:17;727:12474;7012:83;;;;;727:12474;;7012:83;727:12474;;;;;;;;;;;;7012:83;;727:12474;7012:83;;;:::i;:::-;;;;;;;;;;;727:12474;7106:5;;;;;;:38;;;727:12474;7103:973;;;727:12474;;7155:16;727:12474;7165:5;727:12474;;7155:16;:::i;:::-;727:12474;;;;;7181:37;;;;;727:12474;;;;;;;;;;;;;7181:37;;;;;;;;;;7103:973;727:12474;;;7238:14;727:12474;;;;7165:5;727:12474;;;;;;;;;;;7238:44;;727:12474;7238:44;;727:12474;;;;;1671:64:26;727:12474:50;;;7238:44;;;;;;;;;;;;;;7103:973;7303:7;;;;;;:::i;:::-;727:12474;;;;;;;;;;;;;;7336:32;;;;;727:12474;7336:32;;1671:64:26;7336:32:50;;;;;;;;;;7103:973;7378:19;;;;;:::i;:::-;727:12474;;;;7407:38;;;;;;;727:12474;;;;;;;;;;;;;7407:38;;;727:12474;7407:38;;1671:64:26;7407:38:50;;;;;;;;;;;7103:973;727:12474;;;;;;;7470:32;;;;;;;727:12474;7470:32;;1671:64:26;7470:32:50;;;;;;;;;;;7103:973;7523:17;;7564:7;7523:17;;;;:::i;7470:32::-;;;;;;;;;;;;;;;;;:::i;:::-;;;727:12474;;;;;;;7523:17;7470:32;;;;;;;7407:38;;;;;;;:::i;:::-;727:12474;;7407:38;;;;;;727:12474;;;;7336:32;;;;;;;;;;;;;;;:::i;:::-;;;727:12474;;;;7378:19;727:12474;;7336:32;;;;;;;;727:12474;;;;;;;;;7238:44;;;;;;;;;;;;;;;;;:::i;:::-;;;727:12474;;;;;7238:44;;;;;;;;;;727:12474;;;;;;;;;7181:37;;;;:::i;:::-;727:12474;;7181:37;;;;7103:973;7587:489;;;;;;;;7590:6;;;727:12474;;-1:-1:-1;;;;;;;;;;;7608:37:50;;;;;727:12474;;;;;;;;7608:37;;;;;;727:12474;7608:37;;;:::i;7587:489::-;727:12474;;;;7822:16;727:12474;7832:5;727:12474;;7822:16;:::i;:::-;727:12474;;;;7848:37;;;;;727:12474;;;;;;;;;;;;7848:37;;;;;;;;;;;;;7587:489;727:12474;;;7905:14;727:12474;;;;;7832:5;727:12474;;;;;;;;;;;;7905:44;;727:12474;7905:44;;727:12474;;;;;1671:64:26;7905:44:50;;;;;;;;;;;7587:489;727:12474;-1:-1:-1;;;;;;;;;;;7959:60:50;;;;;727:12474;;;;;;;;7959:60;;;;;;727:12474;7959:60;;;:::i;:::-;;;;;;;;;;;;;;7587:489;727:12474;;;;8029:38;;;;;;727:12474;;;;;;;;;;;;8029:38;;727:12474;8029:38;;1671:64:26;8029:38:50;;;;;;;;7587:489;;727:12474;;7959:60;;;;:::i;:::-;727:12474;;7959:60;;;;7905:44;;;;;727:12474;7905:44;;;;;;;;;727:12474;7905:44;;;:::i;:::-;;;727:12474;;;;;;;7905:44;;;;;;;-1:-1:-1;7905:44:50;;7848:37;;;;:::i;:::-;727:12474;;7848:37;;;;7106:38;7115:17;7136:8;7115:17;;;;:::i;:::-;:29;;7106:38;;7012:83;;;;;;;:::i;:::-;;;;;727:12474;;;;;;;;;;;:::o;1671:64:26:-;-1:-1:-1;;;;;1671:64:26;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:26;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:26;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;1671:64:26;;;;;;-1:-1:-1;;1671:64:26;;;;:::o;:::-;;;;;;;;;;:::i;:::-;727:12474:50;1671:64:26;727:12474:50;;1671:64:26;;;:::i;:::-;;;;-1:-1:-1;1671:64:26;;;;:::o;:::-;;;:::o;1819:584::-;1873:7;727:12474:50;;;;;;;;;;;;;;;1896:14:26:o;1869:528::-;1941:25;-1:-1:-1;;;;;;;;;;;2939:104:26;;1980:374;;2367:19;;;:::o;1980:374::-;727:12474:50;;;;;2196:43:26;;;727:12474:50;;;;1671:64:26;;;727:12474:50;1671:64:26;;;727:12474:50;2196:43:26;;727:12474:50;1671:64:26;;;;;;-1:-1:-1;;;;;1671:64:26;;;;;;;;2086:175;;1671:64;;;;;;727:12474:50;1671:64:26;2086:175;;;1671:64;;;;;;;;;;;;;;;;:::i;:::-;;;2086:175;;;;;;;;;:::i;:::-;2047:232;;;;;;;:::i;:::-;2196:43;1671:64;;;2312:27;;1671:64;;;;2196:43;2312:27;1671:64;727:12474:50;;;;1671:64:26;;;;2297:42;2367:19;:::o;727:12474:50:-;;;;;;;;;;-1:-1:-1;;;;;727:12474:50;;;;;;;:::o;2410:424:26:-;-1:-1:-1;;;;;;;;;;;2939:104:26;;2445:359;;2410:424;727:12474:50;;;;2928:1:26;727:12474:50;;;2928:1:26;727:12474:50;2410:424:26:o;2445:359::-;727:12474:50;;2645:67:26;;;;727:12474:50;;;;1671:64:26;;;727:12474:50;;;1671:64:26;2705:4;727:12474:50;;;1671:64:26;727:12474:50;2645:67:26;;727:12474:50;1671:64:26;;;;;;-1:-1:-1;;;;;1671:64:26;;;;;-1:-1:-1;1671:64:26;2534:196;;1671:64;;;;727:12474:50;1671:64:26;2534:196;;;1671:64;;;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;727:12474:50;;;;;;-1:-1:-1;7034:6:50;727:12474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;727:12474:50;;;;;;;7042:22;727:12474;-1:-1:-1;;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;727:12474:50;7066:9;727:12474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:64:26;727:12474:50:o;:::-;;;;;7066:9;-1:-1:-1;727:12474:50;;;-1:-1:-1;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;727:12474:50;;;;;;;;;;;;;7042:22;-1:-1:-1;727:12474:50;;;;-1:-1:-1;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;727:12474:50;;;;;;;;;;;;;;;;;-1:-1:-1;727:12474:50;;-1:-1:-1;727:12474:50;;;;;;;;;;;;;;7034:6;-1:-1:-1;727:12474:50;;;;-1:-1:-1;727:12474:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;:::o;3255:157:26:-;3314:10;3310:96;;3255:157::o;3310:96::-;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;3345:30:26;;;:::i;:::-;3255:157::o;5202:262::-;5259:6;;;5255:203;;5202:262;;:::o;5255:203::-;727:12474:50;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;5286:41:26;727:12474:50;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;1671:64:26;5346:31;;;;;;;;727:12474:50;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;1671:64:26;5396:31;;;;;:::i;1449:98:29:-;-1:-1:-1;;;;;;;;;;;1495:22:29;;;;;727:12474:50;;-1:-1:-1;;;1495:22:29;;-1:-1:-1;;;;;727:12474:50;;;1495:22:29;;;727:12474:50;;;-1:-1:-1;;;727:12474:50;;;1671:64:26;1495:22:29;;;727:12474:50;;;1495:22:29;;;;;;;;;;1449:98;1527:13;;;;;;727:12474:50;;;;;;;;;;;;;;;1527:13:29;;1495:22;1527:13;;727:12474:50;1527:13:29;;;;;;;;1449:98;;:::o;1527:13::-;;;;;:::i;:::-;727:12474:50;;1449:98:29;:::o;1495:22::-;;;;;;;:::i;:::-;;;;;1998:108;-1:-1:-1;;;;;;;;;;;2049:22:29;;;;;727:12474:50;;-1:-1:-1;;;2049:22:29;;-1:-1:-1;;;;;727:12474:50;;;2049:22:29;;;727:12474:50;;;-1:-1:-1;;;727:12474:50;;;1671:64:26;2049:22:29;;;727:12474:50;;;2049:22:29;;;;;;;;;;1998:108;2081:18;;;;;;727:12474:50;;;;;;;;;;;;;;;2081:18:29;;2049:22;2081:18;;727:12474:50;2081:18:29;;;;;;;;1998:108;;:::o;2049:22::-;;;;;;;:::i;:::-;;;;;727:12474:50;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;727:12474:50;;;;;;;;;;;;;;;;;;:::i;:::-;;1671:64:26;727:12474:50;;1671:64:26;;;:::i;:::-;727:12474:50;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;10679:516:29:-;;37288:5;;;;;;37308;;;;:::i;:::-;37288:45;;11836:1:50;10853:16:29;;10849:340;;10679:516;;;:::o;10849:340::-;727:12474:50;;;;;;;-1:-1:-1;;;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;10890:53:29;727:12474:50;;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;1671:64:26;10962:32:29;;;;;;;;;727:12474:50;;;;;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;;;;;;;1671:64:26;11013:32:29;;;727:12474:50;;;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;11836:1;727:12474;;;1671:64:26;11064:39:29;727:12474:50;;;;;;;;;;-1:-1:-1;;;727:12474:50;;;;;;1671:64:26;11122:36:29;;;:::i;37288:45::-;37328:5;;;;:::i;:::-;37288:45;;",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ENSAddress()": "223e6be4",
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "contOwner()": "63c72d60",
    "depCont()": "cc91c436",
    "factoryProxy()": "7509c39b",
    "failed()": "ba414fa6",
    "frensArt()": "94cd95e3",
    "frensClaim()": "d20c8819",
    "frensInitialiser()": "32551a60",
    "frensMetaHelper()": "bc48e947",
    "frensPoolSetter()": "929230f2",
    "frensPoolShare()": "591167c7",
    "frensPoolShareTokenURI()": "bc073b18",
    "frensStorage()": "30dbf887",
    "proxy()": "ec556889",
    "setUp()": "0a9254e4",
    "ssvRegistryAddress()": "25b5e62f",
    "stakingPool()": "0c56ae3b",
    "stakingPoolFactory()": "a1b8adcb",
    "testAddToDeposit(uint64,uint64)": "020f12da",
    "testBadWithdrawalCred()": "8adcff77",
    "testDeposit(uint72)": "4ccd89c4",
    "testDistribute(uint32,uint32)": "c07d2f57",
    "testLock()": "e96d88e0",
    "testOwner()": "9e535c69",
    "testStake()": "3a1143da",
    "testWithdraw(uint72,uint72)": "90f805d9",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENSAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depCont\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryProxy\",\"outputs\":[{\"internalType\":\"contract FactoryProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensArt\",\"outputs\":[{\"internalType\":\"contract FrensArt\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensClaim\",\"outputs\":[{\"internalType\":\"contract FrensClaim\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensInitialiser\",\"outputs\":[{\"internalType\":\"contract FrensInitialiser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensMetaHelper\",\"outputs\":[{\"internalType\":\"contract FrensMetaHelper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolSetter\",\"outputs\":[{\"internalType\":\"contract FrensPoolSetter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShare\",\"outputs\":[{\"internalType\":\"contract FrensPoolShare\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensPoolShareTokenURI\",\"outputs\":[{\"internalType\":\"contract FrensPoolShareTokenURI\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frensStorage\",\"outputs\":[{\"internalType\":\"contract FrensStorage\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxy\",\"outputs\":[{\"internalType\":\"contract IStakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ssvRegistryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPool\",\"outputs\":[{\"internalType\":\"contract StakingPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingPoolFactory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"x\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"y\",\"type\":\"uint64\"}],\"name\":\"testAddToDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBadWithdrawalCred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"}],\"name\":\"testDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"x\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"y\",\"type\":\"uint32\"}],\"name\":\"testDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"x\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"y\",\"type\":\"uint72\"}],\"name\":\"testWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/foundry/StakingPoolLockedTest.t.sol\":\"StakingPoolLockedTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/FactoryProxy.sol\":{\"keccak256\":\"0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101\",\"dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh\"]},\"contracts/FrensArt.sol\":{\"keccak256\":\"0xe6d6172800d11dace5dfa27f3b82816a4ce01ddcd26c1786ac3b196698f196df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://150ee63d455708e2bb0ec641a7fef45521d50f4aadedca015fd34621d529fdeb\",\"dweb:/ipfs/QmewgeAn6Zv6qBYyfRft4GmP8FzWAP8dsV6VxuE8gZR47a\"]},\"contracts/FrensBase.sol\":{\"keccak256\":\"0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2\",\"dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH\"]},\"contracts/FrensClaim.sol\":{\"keccak256\":\"0xaa8d3f88b4783a321f67b942bca28e5ece345da690433d6b414677a59f96e6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5866f1dd00a45e9ebcd9e4a848fddb06c063c8b76bcb0d9e178a5e450dc2d440\",\"dweb:/ipfs/QmTKDJ3QPxLv66CFNuooGQWxTL7Fmb1CwW7cBH6f3yeFYh\"]},\"contracts/FrensInitialiser.sol\":{\"keccak256\":\"0xc127523697a2bb3e8ad630cfd534a9a19a1fac21650354b6a3152f2448ae8493\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3698ae7dc1d1be141357fed44b2a7a13de2adacc167e60f35274841bacde55a\",\"dweb:/ipfs/QmZSRjLRY2Z6j4DvXrFPFoYXWAPoNH9cE3AhA2uFeGCgat\"]},\"contracts/FrensMetaHelper.sol\":{\"keccak256\":\"0x5015f78f31e0059801e7f0e0aa2cf310d2428f5ad8a25fb218f4cf1937e7a0bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://257475c3cce3d5ad0043b30b577f24057431cc6823b2dc41c1c1ce54cb5ce951\",\"dweb:/ipfs/Qmf2agJsg5aWBjB4dzwC9uhrNk7vZN8kmZ5LJWkaTMUzLc\"]},\"contracts/FrensPoolSetter.sol\":{\"keccak256\":\"0x0f25a64a46aa476d8b63936f17bdb54bb3c706365b4c645b076b2abf2ef706e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://642e98f682282b241f6cb4dd45af039767b3995249bd7475265363fc82554a37\",\"dweb:/ipfs/QmebZFH8F8iEqFYh8YFe2MQgGu2a6L6BnP5SnS3GgyJ7CX\"]},\"contracts/FrensPoolShare.sol\":{\"keccak256\":\"0xf60fbcf36afe227189f7bc67cf5138a714201739d40bad632a740c6fff7894e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79f0def13feb6e475e7b720188d410be898b147758d7b4734a7dd6842b40a4d2\",\"dweb:/ipfs/QmTJ1JWTagKpxAfpqb6iVe1mzvSERCVgJEvkMpQrm52Qar\"]},\"contracts/FrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x77b2e4778250b68a1cd0adc965345af03b07e8bb9a7c699b8c9a799e762cc5e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ecbede8a24e2e9c502db0ae012a99569e670b78002c121b0355529dcbde9b4\",\"dweb:/ipfs/QmcDG9iQabF1v1b9HjSwDsfxGstbjKX4vxWn3JyfK1aShW\"]},\"contracts/FrensStorage.sol\":{\"keccak256\":\"0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709\",\"dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0x8f67a13e8d2369f7ee4f7dc04ecc3105dfe231cdad3c66b92a6f7c1e47631967\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d481a47fb0a9ae8a00cf911588d37a21f78035bba8a13735093e6c871d9e6ed0\",\"dweb:/ipfs/QmSpb9TGvMycWEJNwcFJUeDL7LSoGHyYyvRTb5hwWy8CyS\"]},\"contracts/StakingPoolFactory.sol\":{\"keccak256\":\"0x4a6b8800222b1c669de2cc872f81697db78a0407af094ea94f3e71b8228e0d71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e68e21b76202cad6e1e6cd5ac6d303c5229e748408a44ab8431feb0872771c10\",\"dweb:/ipfs/QmSrAAvis2iAmVijFDtefPncykBMKhDKRYYyTPJf5eL4ZY\"]},\"contracts/ToColor.sol\":{\"keccak256\":\"0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359\",\"dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM\"]},\"contracts/interfaces/IDepositContract.sol\":{\"keccak256\":\"0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168\",\"dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu\"]},\"contracts/interfaces/IENS.sol\":{\"keccak256\":\"0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8\",\"dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X\"]},\"contracts/interfaces/IFrensArt.sol\":{\"keccak256\":\"0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d\",\"dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz\"]},\"contracts/interfaces/IFrensClaim.sol\":{\"keccak256\":\"0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655\",\"dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z\"]},\"contracts/interfaces/IFrensMetaHelper.sol\":{\"keccak256\":\"0x75d3316c4d09445565c75dc8015730bee8e6bcb6b3de5f85cce5b07ffc06a9d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beaaceb02740b5094e65cc023987a63fe871faab2a75812f6e463bff199810be\",\"dweb:/ipfs/QmWFqTW8wEB7LpSbVrftHoGTCia9qfXPymt7mLjbi2CwcS\"]},\"contracts/interfaces/IFrensPoolSetter.sol\":{\"keccak256\":\"0x066693106fba73dfdbf8a8dae1d0ba2ce094322cb9916242ba634b2490874523\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d7a839010bcc167af913a071f44cbc0a911330153150265915b7ff107e530d7\",\"dweb:/ipfs/QmWv7Vq5pTrncjCg4DmXjKfE4QW1f8MSQTMAApmSmNvW1H\"]},\"contracts/interfaces/IFrensPoolShare.sol\":{\"keccak256\":\"0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2\",\"dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs\"]},\"contracts/interfaces/IFrensPoolShareTokenURI.sol\":{\"keccak256\":\"0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009\",\"dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M\"]},\"contracts/interfaces/IFrensStorage.sol\":{\"keccak256\":\"0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63\",\"dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW\"]},\"contracts/interfaces/IReverseResolver.sol\":{\"keccak256\":\"0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6\",\"dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv\"]},\"contracts/interfaces/ISSVRegistry.sol\":{\"keccak256\":\"0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4\",\"dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D\"]},\"contracts/interfaces/IStakingPool.sol\":{\"keccak256\":\"0x3d6e17dab3ea38ff89421d8b543c695eaa749d29bcf6dd02230f2d8af0258707\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce0706e5be0e074c5f87e886214ea1a20d4502e7d592cb9924f282b3b51f965c\",\"dweb:/ipfs/QmP3aKmV8nFU4yARbGsCM4MHS9haq7QzH88EYPmkKjEkpS\"]},\"contracts/interfaces/IStakingPoolFactory.sol\":{\"keccak256\":\"0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8\",\"dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X\"]},\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol\":{\"keccak256\":\"0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea\",\"dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d\",\"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849\",\"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f\",\"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1\",\"dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/base64-sol/base64.sol\":{\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe\",\"dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE\"]},\"test/foundry/StakingPoolLockedTest.t.sol\":{\"keccak256\":\"0xa94d8e84660c457467eacde0fd7b407062376763cf3cd49a7b5e7233d9a4c375\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0b02595fe582ac46e4c574a7ffea0fd48d185f238c85c1b9301c7ee1494120a3\",\"dweb:/ipfs/QmQ3paKzi7ShKdaN1WpJ6ehU6QomZeZ7bBn2p6zViTrgWN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ENSAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "contOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depCont",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factoryProxy",
          "outputs": [
            {
              "internalType": "contract FactoryProxy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensArt",
          "outputs": [
            {
              "internalType": "contract FrensArt",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensClaim",
          "outputs": [
            {
              "internalType": "contract FrensClaim",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensInitialiser",
          "outputs": [
            {
              "internalType": "contract FrensInitialiser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensMetaHelper",
          "outputs": [
            {
              "internalType": "contract FrensMetaHelper",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolSetter",
          "outputs": [
            {
              "internalType": "contract FrensPoolSetter",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShare",
          "outputs": [
            {
              "internalType": "contract FrensPoolShare",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensPoolShareTokenURI",
          "outputs": [
            {
              "internalType": "contract FrensPoolShareTokenURI",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frensStorage",
          "outputs": [
            {
              "internalType": "contract FrensStorage",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxy",
          "outputs": [
            {
              "internalType": "contract IStakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ssvRegistryAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPool",
          "outputs": [
            {
              "internalType": "contract StakingPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "stakingPoolFactory",
          "outputs": [
            {
              "internalType": "contract StakingPoolFactory",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "x",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "y",
              "type": "uint64"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddToDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBadWithdrawalCred"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "x",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "y",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDistribute"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testLock"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testStake"
        },
        {
          "inputs": [
            {
              "internalType": "uint72",
              "name": "x",
              "type": "uint72"
            },
            {
              "internalType": "uint72",
              "name": "y",
              "type": "uint72"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testWithdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/foundry/StakingPoolLockedTest.t.sol": "StakingPoolLockedTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/FactoryProxy.sol": {
        "keccak256": "0x6b654252da0a42715cb27f7375c0c665678297ac897c71fa7feb8fd93f4617b2",
        "urls": [
          "bzz-raw://6ea46a32e247658936bffe88d138cd57e3602bbb0528ff45fbc2185956a93101",
          "dweb:/ipfs/Qmb7E5LreWNkKn91Hczeii54FeYyECNGdW2Xb9m8PJfyMh"
        ],
        "license": "MIT"
      },
      "contracts/FrensArt.sol": {
        "keccak256": "0xe6d6172800d11dace5dfa27f3b82816a4ce01ddcd26c1786ac3b196698f196df",
        "urls": [
          "bzz-raw://150ee63d455708e2bb0ec641a7fef45521d50f4aadedca015fd34621d529fdeb",
          "dweb:/ipfs/QmewgeAn6Zv6qBYyfRft4GmP8FzWAP8dsV6VxuE8gZR47a"
        ],
        "license": "MIT"
      },
      "contracts/FrensBase.sol": {
        "keccak256": "0x7374e6a194a565712df6aa0f2e80fa9e4ab6a179b5ed331b830e14075907e88f",
        "urls": [
          "bzz-raw://7bd6edaf892e5d24d2d843f78399c33776906acc98024b9572ac44292e771ae2",
          "dweb:/ipfs/QmTmSxTL1EDXhq5grFpWNiTie9oba4zmS7tZugtsh4L9GH"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/FrensClaim.sol": {
        "keccak256": "0xaa8d3f88b4783a321f67b942bca28e5ece345da690433d6b414677a59f96e6ac",
        "urls": [
          "bzz-raw://5866f1dd00a45e9ebcd9e4a848fddb06c063c8b76bcb0d9e178a5e450dc2d440",
          "dweb:/ipfs/QmTKDJ3QPxLv66CFNuooGQWxTL7Fmb1CwW7cBH6f3yeFYh"
        ],
        "license": "MIT"
      },
      "contracts/FrensInitialiser.sol": {
        "keccak256": "0xc127523697a2bb3e8ad630cfd534a9a19a1fac21650354b6a3152f2448ae8493",
        "urls": [
          "bzz-raw://f3698ae7dc1d1be141357fed44b2a7a13de2adacc167e60f35274841bacde55a",
          "dweb:/ipfs/QmZSRjLRY2Z6j4DvXrFPFoYXWAPoNH9cE3AhA2uFeGCgat"
        ],
        "license": "MIT"
      },
      "contracts/FrensMetaHelper.sol": {
        "keccak256": "0x5015f78f31e0059801e7f0e0aa2cf310d2428f5ad8a25fb218f4cf1937e7a0bc",
        "urls": [
          "bzz-raw://257475c3cce3d5ad0043b30b577f24057431cc6823b2dc41c1c1ce54cb5ce951",
          "dweb:/ipfs/Qmf2agJsg5aWBjB4dzwC9uhrNk7vZN8kmZ5LJWkaTMUzLc"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolSetter.sol": {
        "keccak256": "0x0f25a64a46aa476d8b63936f17bdb54bb3c706365b4c645b076b2abf2ef706e4",
        "urls": [
          "bzz-raw://642e98f682282b241f6cb4dd45af039767b3995249bd7475265363fc82554a37",
          "dweb:/ipfs/QmebZFH8F8iEqFYh8YFe2MQgGu2a6L6BnP5SnS3GgyJ7CX"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShare.sol": {
        "keccak256": "0xf60fbcf36afe227189f7bc67cf5138a714201739d40bad632a740c6fff7894e3",
        "urls": [
          "bzz-raw://79f0def13feb6e475e7b720188d410be898b147758d7b4734a7dd6842b40a4d2",
          "dweb:/ipfs/QmTJ1JWTagKpxAfpqb6iVe1mzvSERCVgJEvkMpQrm52Qar"
        ],
        "license": "MIT"
      },
      "contracts/FrensPoolShareTokenURI.sol": {
        "keccak256": "0x77b2e4778250b68a1cd0adc965345af03b07e8bb9a7c699b8c9a799e762cc5e7",
        "urls": [
          "bzz-raw://73ecbede8a24e2e9c502db0ae012a99569e670b78002c121b0355529dcbde9b4",
          "dweb:/ipfs/QmcDG9iQabF1v1b9HjSwDsfxGstbjKX4vxWn3JyfK1aShW"
        ],
        "license": "MIT"
      },
      "contracts/FrensStorage.sol": {
        "keccak256": "0xa5ce2d7f158a094e5cb1b1cea3af299101173279505665d02e4c989ea5a83acf",
        "urls": [
          "bzz-raw://bbe3c8dc9ea5eb70495b84a3ccd1c552c99c28680c59b5a7f7f0c6d72d669709",
          "dweb:/ipfs/QmTtUr1vZ5gEEwQ43XC3s8ZxTWefbGBzEexpHDAV7pHkwd"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/StakingPool.sol": {
        "keccak256": "0x8f67a13e8d2369f7ee4f7dc04ecc3105dfe231cdad3c66b92a6f7c1e47631967",
        "urls": [
          "bzz-raw://d481a47fb0a9ae8a00cf911588d37a21f78035bba8a13735093e6c871d9e6ed0",
          "dweb:/ipfs/QmSpb9TGvMycWEJNwcFJUeDL7LSoGHyYyvRTb5hwWy8CyS"
        ],
        "license": "MIT"
      },
      "contracts/StakingPoolFactory.sol": {
        "keccak256": "0x4a6b8800222b1c669de2cc872f81697db78a0407af094ea94f3e71b8228e0d71",
        "urls": [
          "bzz-raw://e68e21b76202cad6e1e6cd5ac6d303c5229e748408a44ab8431feb0872771c10",
          "dweb:/ipfs/QmSrAAvis2iAmVijFDtefPncykBMKhDKRYYyTPJf5eL4ZY"
        ],
        "license": "MIT"
      },
      "contracts/ToColor.sol": {
        "keccak256": "0x80d48cfb10669856b687d9ed46b3571ba82505490b020fc1b5128dc2aaa70cbd",
        "urls": [
          "bzz-raw://9b1613765da711cbcf62ba57328fabcb35980acc195be6fd088aa49f41f28359",
          "dweb:/ipfs/QmSTosJokNoR8YihqwiuATwrgZbUckkTpnkccDnEk1hDLM"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IDepositContract.sol": {
        "keccak256": "0x7590a7c7c977852560b0f2373e71ad175d1aa15d320d1238b2fe64e4cd1902f7",
        "urls": [
          "bzz-raw://481024426ee16f5d1253236e8e273884a3ead5eb3f78386785b635862d7b0168",
          "dweb:/ipfs/QmTEacNQKUsCGvLQ5rpAJVTUqejM8jRxg83fD17xmsaJQu"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IENS.sol": {
        "keccak256": "0x4d761c3e61513fd65c0ff43e159efdb9c6fb4d2440640f7b1f55da5d8e67970c",
        "urls": [
          "bzz-raw://b130cf15534edfe321240ba8d0648eb85ab1eafb73f126a0c9621522f423e6f8",
          "dweb:/ipfs/QmRMR6MFpduCvGg7sy5FV1qoosg1p5C888BdAaHrsZEG7X"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensArt.sol": {
        "keccak256": "0xfdb4c36608a20ac7f10ccb1b5d59ec26b25587860fb596dc12414b27591db2a0",
        "urls": [
          "bzz-raw://964db06f48cd83968079b4fc0660ed620e0dbf02fc75f747f3482763d2730c7d",
          "dweb:/ipfs/QmTssWRwWEDGnwyCKrVkLpUMS3cXhBhPrLZXJJRiJKETfz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensClaim.sol": {
        "keccak256": "0x2928f60e0fa3ec849ca19d1728ae11ecfc85fdb0bd7ef60f5d64b30a6474594f",
        "urls": [
          "bzz-raw://60f22a3d36d3dd0eca819d4d67529e5896c31c6390121ec0b8a32d663244a655",
          "dweb:/ipfs/QmNuAaqXkXRc2foSLhvAUp6JH4862WpVSvM95ujRa9Va5Z"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensMetaHelper.sol": {
        "keccak256": "0x75d3316c4d09445565c75dc8015730bee8e6bcb6b3de5f85cce5b07ffc06a9d3",
        "urls": [
          "bzz-raw://beaaceb02740b5094e65cc023987a63fe871faab2a75812f6e463bff199810be",
          "dweb:/ipfs/QmWFqTW8wEB7LpSbVrftHoGTCia9qfXPymt7mLjbi2CwcS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolSetter.sol": {
        "keccak256": "0x066693106fba73dfdbf8a8dae1d0ba2ce094322cb9916242ba634b2490874523",
        "urls": [
          "bzz-raw://5d7a839010bcc167af913a071f44cbc0a911330153150265915b7ff107e530d7",
          "dweb:/ipfs/QmWv7Vq5pTrncjCg4DmXjKfE4QW1f8MSQTMAApmSmNvW1H"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShare.sol": {
        "keccak256": "0x4a067398ee088267118c64c608b0dc78e655568556038136edba9817342a4ac6",
        "urls": [
          "bzz-raw://b83bc197ebbfbde8ce74ab071252cdfdb79c70a1f9e6e9111e3ff5ee2eae98a2",
          "dweb:/ipfs/QmafPT3RiqxeWDavzkBxAXYWSdJt7QwzKNY78MsSt1fJcs"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensPoolShareTokenURI.sol": {
        "keccak256": "0x3fc19266145fb90aed63716c57842d6dedcdb62ef499ee70fd22bf638df8fa8c",
        "urls": [
          "bzz-raw://0a51d0d17d7ba04ca5ad12080d7f2237d602389029b01e0dcf11879c2b293009",
          "dweb:/ipfs/QmaQRVvkfJmwG9rx6Hxt6UdjD8UeBPYy9pfXDevqmXe21M"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IFrensStorage.sol": {
        "keccak256": "0x460c440b2f1de0c6a41fff71e5f2c38117217a8aae946f6856ac720fc555a203",
        "urls": [
          "bzz-raw://f420d7f01fc1a3b71dd30f61cdd0ea9fc6196fdc7506f3fd5cff8a865658bd63",
          "dweb:/ipfs/QmeJKA3JWVuTThnTPnLiZqmefKD6Kv4AkxUUVfpW2emjeW"
        ],
        "license": "GPL-3.0-only"
      },
      "contracts/interfaces/IReverseResolver.sol": {
        "keccak256": "0x720b9b5ecca8643bf2796e06ff206291b306c3c680c442551e6f9d267b1ffb52",
        "urls": [
          "bzz-raw://031bba9c81bb34fb7674101269b65b224e62a4fb0a7460f6a1ab9edfaec17bb6",
          "dweb:/ipfs/QmVCR9sacCkjENrtpuqnpWoydYM76SiJZfFuJzi7VbMnqv"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISSVRegistry.sol": {
        "keccak256": "0xc43589f0f38f8dcd2b808071bc46162081b6198be4baee9f44d5ff1556ffb10f",
        "urls": [
          "bzz-raw://e4b06e18cb1a32add0e0646ef91013d468df609d50dd66cbd4da4a5417eab6c4",
          "dweb:/ipfs/QmcLF8rKSYg4Mu3SD3WppLjpXJGTW4L6xBXuXU8NSEAV5D"
        ],
        "license": "GPL-3.0-or-later"
      },
      "contracts/interfaces/IStakingPool.sol": {
        "keccak256": "0x3d6e17dab3ea38ff89421d8b543c695eaa749d29bcf6dd02230f2d8af0258707",
        "urls": [
          "bzz-raw://ce0706e5be0e074c5f87e886214ea1a20d4502e7d592cb9924f282b3b51f965c",
          "dweb:/ipfs/QmP3aKmV8nFU4yARbGsCM4MHS9haq7QzH88EYPmkKjEkpS"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IStakingPoolFactory.sol": {
        "keccak256": "0xa09ae0bd2ac371390418befdb940f15f6dce1e235d09028b14d761e258cd4a45",
        "urls": [
          "bzz-raw://a9cc1ee4273f02a8c1bbf053d836bc9d95d4156eaf402017d2dd9d2bf67c53d8",
          "dweb:/ipfs/QmdjsW1TjFHiEZ3qTeKKEzZJN6tY8LvzhXmy8QZS2Ehj1X"
        ],
        "license": "MIT"
      },
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
        "urls": [
          "bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
          "dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/IERC721Enumerable.sol": {
        "keccak256": "0xf0f689f041c9970ece22ba42dc66cacf2aee78699e1eab26658becb738322356",
        "urls": [
          "bzz-raw://afdb91fc2300f833f28e106d0407eac00a4b759ee2f7c936940cf02bb52cb2ea",
          "dweb:/ipfs/QmaXjg7jKVwkH9e7fepxWaQT2oAqGpJJTY11SeyhCNaPc5"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
        "urls": [
          "bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
          "dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
        "urls": [
          "bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
          "dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
        "urls": [
          "bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
          "dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0x483f88fbbb1d6d75000fbe8ce14279b5e6121cd5a29ff5f1b91fed407735a6c3",
        "urls": [
          "bzz-raw://51cbe83f9ccd8619d58ca5458ff49c470c656a45856b0e7435eebf5f5d431bf1",
          "dweb:/ipfs/QmZwR7nwu4hzVJW2m3JTPyjUopoxZUxjYLSgcSK5D4F7E2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
        "urls": [
          "bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
          "dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
        "urls": [
          "bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
          "dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/base64-sol/base64.sol": {
        "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
        "urls": [
          "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
          "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
        ],
        "license": "MIT"
      },
      "test/foundry/StakingPoolLockedTest.t.sol": {
        "keccak256": "0xa94d8e84660c457467eacde0fd7b407062376763cf3cd49a7b5e7233d9a4c375",
        "urls": [
          "bzz-raw://0b02595fe582ac46e4c574a7ffea0fd48d185f238c85c1b9301c7ee1494120a3",
          "dweb:/ipfs/QmQ3paKzi7ShKdaN1WpJ6ehU6QomZeZ7bBn2p6zViTrgWN"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/foundry/StakingPoolLockedTest.t.sol",
    "id": 34357,
    "exportedSymbols": {
      "Address": [
        30390
      ],
      "Base64": [
        30766
      ],
      "Context": [
        30412
      ],
      "DSTest": [
        7184
      ],
      "ERC165": [
        30639
      ],
      "ERC721": [
        29563
      ],
      "ERC721Enumerable": [
        30035
      ],
      "FactoryProxy": [
        58
      ],
      "FrensArt": [
        237
      ],
      "FrensBase": [
        828
      ],
      "FrensClaim": [
        906
      ],
      "FrensInitialiser": [
        1086
      ],
      "FrensMetaHelper": [
        1568
      ],
      "FrensPoolSetter": [
        1881
      ],
      "FrensPoolShare": [
        2067
      ],
      "FrensPoolShareTokenURI": [
        2434
      ],
      "FrensStorage": [
        3064
      ],
      "IDepositContract": [
        4570
      ],
      "IENS": [
        4707
      ],
      "IERC165": [
        30651
      ],
      "IERC721": [
        29679
      ],
      "IERC721Enumerable": [
        30066
      ],
      "IERC721Metadata": [
        30093
      ],
      "IERC721Receiver": [
        29697
      ],
      "IFrensArt": [
        4717
      ],
      "IFrensClaim": [
        4728
      ],
      "IFrensMetaHelper": [
        4771
      ],
      "IFrensPoolSetter": [
        4828
      ],
      "IFrensPoolShare": [
        4867
      ],
      "IFrensPoolShareTokenURI": [
        4877
      ],
      "IFrensStorage": [
        5073
      ],
      "IReverseResolver": [
        5083
      ],
      "ISSVRegistry": [
        5285
      ],
      "IStakingPool": [
        5385
      ],
      "IStakingPoolFactory": [
        5397
      ],
      "Ownable": [
        28729
      ],
      "Script": [
        7447
      ],
      "StakingPool": [
        4377
      ],
      "StakingPoolFactory": [
        4475
      ],
      "StakingPoolLockedTest": [
        34356
      ],
      "StdStorage": [
        10475
      ],
      "Strings": [
        30615
      ],
      "Test": [
        10377
      ],
      "ToColor": [
        4551
      ],
      "Vm": [
        12496
      ],
      "console": [
        20560
      ],
      "console2": [
        28624
      ],
      "stdError": [
        10447
      ],
      "stdJson": [
        7807
      ],
      "stdMath": [
        11716
      ],
      "stdStorage": [
        11577
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:13163:50",
    "nodes": [
      {
        "id": 33003,
        "nodeType": "PragmaDirective",
        "src": "39:24:50",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 33004,
        "nodeType": "ImportDirective",
        "src": "65:28:50",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 11717,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33005,
        "nodeType": "ImportDirective",
        "src": "113:38:50",
        "nodes": [],
        "absolutePath": "contracts/FrensArt.sol",
        "file": "../../contracts/FrensArt.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 238,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33006,
        "nodeType": "ImportDirective",
        "src": "152:46:50",
        "nodes": [],
        "absolutePath": "contracts/FrensInitialiser.sol",
        "file": "../../contracts/FrensInitialiser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 1087,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33007,
        "nodeType": "ImportDirective",
        "src": "199:45:50",
        "nodes": [],
        "absolutePath": "contracts/FrensMetaHelper.sol",
        "file": "../../contracts/FrensMetaHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 1569,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33008,
        "nodeType": "ImportDirective",
        "src": "245:52:50",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShareTokenURI.sol",
        "file": "../../contracts/FrensPoolShareTokenURI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 2435,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33009,
        "nodeType": "ImportDirective",
        "src": "298:42:50",
        "nodes": [],
        "absolutePath": "contracts/FrensStorage.sol",
        "file": "../../contracts/FrensStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 3065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33010,
        "nodeType": "ImportDirective",
        "src": "341:42:50",
        "nodes": [],
        "absolutePath": "contracts/FactoryProxy.sol",
        "file": "../../contracts/FactoryProxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 59,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33011,
        "nodeType": "ImportDirective",
        "src": "384:41:50",
        "nodes": [],
        "absolutePath": "contracts/StakingPool.sol",
        "file": "../../contracts/StakingPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 4378,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33012,
        "nodeType": "ImportDirective",
        "src": "426:48:50",
        "nodes": [],
        "absolutePath": "contracts/StakingPoolFactory.sol",
        "file": "../../contracts/StakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 4476,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33013,
        "nodeType": "ImportDirective",
        "src": "475:40:50",
        "nodes": [],
        "absolutePath": "contracts/FrensClaim.sol",
        "file": "../../contracts/FrensClaim.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 907,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33014,
        "nodeType": "ImportDirective",
        "src": "516:45:50",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolSetter.sol",
        "file": "../../contracts/FrensPoolSetter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 1882,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33015,
        "nodeType": "ImportDirective",
        "src": "562:44:50",
        "nodes": [],
        "absolutePath": "contracts/FrensPoolShare.sol",
        "file": "../../contracts/FrensPoolShare.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 2068,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33016,
        "nodeType": "ImportDirective",
        "src": "607:60:50",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IStakingPoolFactory.sol",
        "file": "../../contracts/interfaces/IStakingPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 5398,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33017,
        "nodeType": "ImportDirective",
        "src": "668:57:50",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IDepositContract.sol",
        "file": "../../contracts/interfaces/IDepositContract.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34357,
        "sourceUnit": 4571,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34356,
        "nodeType": "ContractDefinition",
        "src": "727:12474:50",
        "nodes": [
          {
            "id": 33022,
            "nodeType": "VariableDeclaration",
            "src": "772:24:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "94cd95e3",
            "mutability": "mutable",
            "name": "frensArt",
            "nameLocation": "788:8:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensArt_$237",
              "typeString": "contract FrensArt"
            },
            "typeName": {
              "id": 33021,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33020,
                "name": "FrensArt",
                "nameLocations": [
                  "772:8:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 237,
                "src": "772:8:50"
              },
              "referencedDeclaration": 237,
              "src": "772:8:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensArt_$237",
                "typeString": "contract FrensArt"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33025,
            "nodeType": "VariableDeclaration",
            "src": "802:40:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "32551a60",
            "mutability": "mutable",
            "name": "frensInitialiser",
            "nameLocation": "826:16:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
              "typeString": "contract FrensInitialiser"
            },
            "typeName": {
              "id": 33024,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33023,
                "name": "FrensInitialiser",
                "nameLocations": [
                  "802:16:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1086,
                "src": "802:16:50"
              },
              "referencedDeclaration": 1086,
              "src": "802:16:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                "typeString": "contract FrensInitialiser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33028,
            "nodeType": "VariableDeclaration",
            "src": "848:38:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc48e947",
            "mutability": "mutable",
            "name": "frensMetaHelper",
            "nameLocation": "871:15:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
              "typeString": "contract FrensMetaHelper"
            },
            "typeName": {
              "id": 33027,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33026,
                "name": "FrensMetaHelper",
                "nameLocations": [
                  "848:15:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1568,
                "src": "848:15:50"
              },
              "referencedDeclaration": 1568,
              "src": "848:15:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                "typeString": "contract FrensMetaHelper"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33031,
            "nodeType": "VariableDeclaration",
            "src": "892:52:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc073b18",
            "mutability": "mutable",
            "name": "frensPoolShareTokenURI",
            "nameLocation": "922:22:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
              "typeString": "contract FrensPoolShareTokenURI"
            },
            "typeName": {
              "id": 33030,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33029,
                "name": "FrensPoolShareTokenURI",
                "nameLocations": [
                  "892:22:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2434,
                "src": "892:22:50"
              },
              "referencedDeclaration": 2434,
              "src": "892:22:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                "typeString": "contract FrensPoolShareTokenURI"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33034,
            "nodeType": "VariableDeclaration",
            "src": "950:32:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "30dbf887",
            "mutability": "mutable",
            "name": "frensStorage",
            "nameLocation": "970:12:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensStorage_$3064",
              "typeString": "contract FrensStorage"
            },
            "typeName": {
              "id": 33033,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33032,
                "name": "FrensStorage",
                "nameLocations": [
                  "950:12:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3064,
                "src": "950:12:50"
              },
              "referencedDeclaration": 3064,
              "src": "950:12:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensStorage_$3064",
                "typeString": "contract FrensStorage"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33037,
            "nodeType": "VariableDeclaration",
            "src": "988:32:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "7509c39b",
            "mutability": "mutable",
            "name": "factoryProxy",
            "nameLocation": "1008:12:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryProxy_$58",
              "typeString": "contract FactoryProxy"
            },
            "typeName": {
              "id": 33036,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33035,
                "name": "FactoryProxy",
                "nameLocations": [
                  "988:12:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58,
                "src": "988:12:50"
              },
              "referencedDeclaration": 58,
              "src": "988:12:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                "typeString": "contract FactoryProxy"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33040,
            "nodeType": "VariableDeclaration",
            "src": "1026:44:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "a1b8adcb",
            "mutability": "mutable",
            "name": "stakingPoolFactory",
            "nameLocation": "1052:18:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
              "typeString": "contract StakingPoolFactory"
            },
            "typeName": {
              "id": 33039,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33038,
                "name": "StakingPoolFactory",
                "nameLocations": [
                  "1026:18:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4475,
                "src": "1026:18:50"
              },
              "referencedDeclaration": 4475,
              "src": "1026:18:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                "typeString": "contract StakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33043,
            "nodeType": "VariableDeclaration",
            "src": "1076:30:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "0c56ae3b",
            "mutability": "mutable",
            "name": "stakingPool",
            "nameLocation": "1095:11:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingPool_$4377",
              "typeString": "contract StakingPool"
            },
            "typeName": {
              "id": 33042,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33041,
                "name": "StakingPool",
                "nameLocations": [
                  "1076:11:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4377,
                "src": "1076:11:50"
              },
              "referencedDeclaration": 4377,
              "src": "1076:11:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingPool_$4377",
                "typeString": "contract StakingPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33046,
            "nodeType": "VariableDeclaration",
            "src": "1112:36:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "591167c7",
            "mutability": "mutable",
            "name": "frensPoolShare",
            "nameLocation": "1134:14:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
              "typeString": "contract FrensPoolShare"
            },
            "typeName": {
              "id": 33045,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33044,
                "name": "FrensPoolShare",
                "nameLocations": [
                  "1112:14:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2067,
                "src": "1112:14:50"
              },
              "referencedDeclaration": 2067,
              "src": "1112:14:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                "typeString": "contract FrensPoolShare"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33049,
            "nodeType": "VariableDeclaration",
            "src": "1154:32:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec556889",
            "mutability": "mutable",
            "name": "proxy",
            "nameLocation": "1181:5:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IStakingPoolFactory_$5397",
              "typeString": "contract IStakingPoolFactory"
            },
            "typeName": {
              "id": 33048,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33047,
                "name": "IStakingPoolFactory",
                "nameLocations": [
                  "1154:19:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5397,
                "src": "1154:19:50"
              },
              "referencedDeclaration": 5397,
              "src": "1154:19:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IStakingPoolFactory_$5397",
                "typeString": "contract IStakingPoolFactory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33052,
            "nodeType": "VariableDeclaration",
            "src": "1192:28:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "d20c8819",
            "mutability": "mutable",
            "name": "frensClaim",
            "nameLocation": "1210:10:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensClaim_$906",
              "typeString": "contract FrensClaim"
            },
            "typeName": {
              "id": 33051,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33050,
                "name": "FrensClaim",
                "nameLocations": [
                  "1192:10:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 906,
                "src": "1192:10:50"
              },
              "referencedDeclaration": 906,
              "src": "1192:10:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensClaim_$906",
                "typeString": "contract FrensClaim"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33055,
            "nodeType": "VariableDeclaration",
            "src": "1226:38:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "929230f2",
            "mutability": "mutable",
            "name": "frensPoolSetter",
            "nameLocation": "1249:15:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
              "typeString": "contract FrensPoolSetter"
            },
            "typeName": {
              "id": 33054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33053,
                "name": "FrensPoolSetter",
                "nameLocations": [
                  "1226:15:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1881,
                "src": "1226:15:50"
              },
              "referencedDeclaration": 1881,
              "src": "1226:15:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                "typeString": "contract FrensPoolSetter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33061,
            "nodeType": "VariableDeclaration",
            "src": "1285:84:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "cc91c436",
            "mutability": "mutable",
            "name": "depCont",
            "nameLocation": "1308:7:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 33056,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1285:15:50",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303231396162353430333536634242383339436265303533303364373730354661",
                  "id": 33059,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1326:42:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000219ab540356cBB839Cbe05303d7705Fa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33058,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1318:8:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 33057,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1318:8:50",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 33060,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1318:51:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33064,
            "nodeType": "VariableDeclaration",
            "src": "1480:78:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "25b5e62f",
            "mutability": "mutable",
            "name": "ssvRegistryAddress",
            "nameLocation": "1495:18:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33062,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1480:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862396531353565363542356334443636646632384461384539613039353766303646313142633034",
              "id": 33063,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1516:42:50",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb9e155e65B5c4D66df28Da8E9a0957f06F11Bc04"
            },
            "visibility": "public"
          },
          {
            "id": 33067,
            "nodeType": "VariableDeclaration",
            "src": "1564:70:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "223e6be4",
            "mutability": "mutable",
            "name": "ENSAddress",
            "nameLocation": "1579:10:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33065,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1564:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030304332453037346543363941306446623239393742413643376432653165",
              "id": 33066,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1592:42:50",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
            },
            "visibility": "public"
          },
          {
            "id": 33073,
            "nodeType": "VariableDeclaration",
            "src": "1641:60:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "depositContract",
            "nameLocation": "1658:15:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDepositContract_$4570",
              "typeString": "contract IDepositContract"
            },
            "typeName": {
              "id": 33069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33068,
                "name": "IDepositContract",
                "nameLocations": [
                  "1641:16:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4570,
                "src": "1641:16:50"
              },
              "referencedDeclaration": 4570,
              "src": "1641:16:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$4570",
                "typeString": "contract IDepositContract"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 33071,
                  "name": "depCont",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 33061,
                  "src": "1693:7:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 33070,
                "name": "IDepositContract",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4570,
                "src": "1676:16:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IDepositContract_$4570_$",
                  "typeString": "type(contract IDepositContract)"
                }
              },
              "id": 33072,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1676:25:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDepositContract_$4570",
                "typeString": "contract IDepositContract"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33076,
            "nodeType": "VariableDeclaration",
            "src": "1708:69:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "63c72d60",
            "mutability": "mutable",
            "name": "contOwner",
            "nameLocation": "1723:9:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33074,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1708:7:50",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303031313131373338",
              "id": 33075,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1735:42:50",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x0000000000000000000000000000000001111738"
            },
            "visibility": "public"
          },
          {
            "id": 33082,
            "nodeType": "VariableDeclaration",
            "src": "1783:82:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1806:5:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 33077,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1783:15:50",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030304131316345",
                  "id": 33080,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1822:42:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x00000000000000000000000000000000000A11cE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33079,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1814:8:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 33078,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1814:8:50",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 33081,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1814:51:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33088,
            "nodeType": "VariableDeclaration",
            "src": "1871:80:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1894:3:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 33083,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1871:15:50",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030423062",
                  "id": 33086,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1908:42:50",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x0000000000000000000000000000000000000B0b"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33085,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "1900:8:50",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_payable_$",
                  "typeString": "type(address payable)"
                },
                "typeName": {
                  "id": 33084,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1900:8:50",
                  "stateMutability": "payable",
                  "typeDescriptions": {}
                }
              },
              "id": 33087,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1900:51:50",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33091,
            "nodeType": "VariableDeclaration",
            "src": "1958:116:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "pubkey",
            "nameLocation": "1964:6:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 33089,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1958:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7",
              "id": 33090,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1973:101:50",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bdfcfb749742c3093aa9581e8ef2ad1af416ff72460d5243d448d690ad5323e3",
                "typeString": "literal_string hex\"b01569ec66772826955cb5ff0637ba938c4be3b01fe1ada49ef7a7ab4b799d259d952488240ca8db87d8a9ebad3a8aa7\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33094,
            "nodeType": "VariableDeclaration",
            "src": "2080:100:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "withdrawal_credentials",
            "nameLocation": "2086:22:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 33092,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2080:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c",
              "id": 33093,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2111:69:50",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_5d67e6bdff9aea033a87277a58dc16c10570179f0e67537385b6a1ef5aafe5d7",
                "typeString": "literal_string hex\"010000000000000000000000a38d17ef017a314ccd72b8f199c0e108ef7ca04c\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33097,
            "nodeType": "VariableDeclaration",
            "src": "2186:215:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "signature",
            "nameLocation": "2192:9:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 33095,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "2186:5:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": {
              "hexValue": "b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3",
              "id": 33096,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "hexString",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2204:197:50",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_92410a21b5a1c3f6142a52b50473f8a72585ecd3f6161746c16dd03094aaf9d4",
                "typeString": "literal_string hex\"b257af61464f370cf607a57b4b124b24f3513591c7c47643542fc655ca655afabd984f81d66b11f607f912162dcbf16d106d30d4ba9bbad0bf8bdd6aaa96d02784843a1116f5b707c7fd15124769279de944dfe2d39411f1a04bb834c0b0bbc3\""
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33100,
            "nodeType": "VariableDeclaration",
            "src": "2407:94:50",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "deposit_data_root",
            "nameLocation": "2415:17:50",
            "scope": 34356,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 33098,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2407:7:50",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307834333632613038353937613136373037623466396364653838616132653964353164313737373562363734393037323630373263653838393731323864346332",
              "id": 33099,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2435:66:50",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30479219748484076069933062356768087265247727824042884735859412202213029237954_by_1",
                "typeString": "int_const 3047...(69 digits omitted)...7954"
              },
              "value": "0x4362a08597a16707b4f9cde88aa2e9d51d17775b67490726072ce8897128d4c2"
            },
            "visibility": "internal"
          },
          {
            "id": 33421,
            "nodeType": "FunctionDefinition",
            "src": "2508:3245:50",
            "nodes": [],
            "body": {
              "id": 33420,
              "nodeType": "Block",
              "src": "2532:3221:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 33108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33103,
                      "name": "frensStorage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33034,
                      "src": "2563:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$3064",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 33106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2578:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_FrensStorage_$3064_$",
                          "typeString": "function () returns (contract FrensStorage)"
                        },
                        "typeName": {
                          "id": 33105,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33104,
                            "name": "FrensStorage",
                            "nameLocations": [
                              "2582:12:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3064,
                            "src": "2582:12:50"
                          },
                          "referencedDeclaration": 3064,
                          "src": "2582:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      },
                      "id": 33107,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2578:18:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensStorage_$3064",
                        "typeString": "contract FrensStorage"
                      }
                    },
                    "src": "2563:33:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensStorage_$3064",
                      "typeString": "contract FrensStorage"
                    }
                  },
                  "id": 33109,
                  "nodeType": "ExpressionStatement",
                  "src": "2563:33:50"
                },
                {
                  "expression": {
                    "id": 33116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33110,
                      "name": "factoryProxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33037,
                      "src": "2625:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33114,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "2657:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2640:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FactoryProxy_$58_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FactoryProxy)"
                        },
                        "typeName": {
                          "id": 33112,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33111,
                            "name": "FactoryProxy",
                            "nameLocations": [
                              "2644:12:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 58,
                            "src": "2644:12:50"
                          },
                          "referencedDeclaration": 58,
                          "src": "2644:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FactoryProxy_$58",
                            "typeString": "contract FactoryProxy"
                          }
                        }
                      },
                      "id": 33115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2640:30:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryProxy_$58",
                        "typeString": "contract FactoryProxy"
                      }
                    },
                    "src": "2625:45:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryProxy_$58",
                      "typeString": "contract FactoryProxy"
                    }
                  },
                  "id": 33117,
                  "nodeType": "ExpressionStatement",
                  "src": "2625:45:50"
                },
                {
                  "expression": {
                    "id": 33125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33118,
                      "name": "proxy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33049,
                      "src": "2723:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5397",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33122,
                              "name": "factoryProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33037,
                              "src": "2759:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryProxy_$58",
                                "typeString": "contract FactoryProxy"
                              }
                            ],
                            "id": 33121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2751:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33120,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2751:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2751:21:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33119,
                        "name": "IStakingPoolFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5397,
                        "src": "2731:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IStakingPoolFactory_$5397_$",
                          "typeString": "type(contract IStakingPoolFactory)"
                        }
                      },
                      "id": 33124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2731:42:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStakingPoolFactory_$5397",
                        "typeString": "contract IStakingPoolFactory"
                      }
                    },
                    "src": "2723:50:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStakingPoolFactory_$5397",
                      "typeString": "contract IStakingPoolFactory"
                    }
                  },
                  "id": 33126,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:50:50"
                },
                {
                  "expression": {
                    "id": 33133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33127,
                      "name": "frensInitialiser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33025,
                      "src": "2808:16:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33131,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "2848:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2827:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensInitialiser_$1086_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensInitialiser)"
                        },
                        "typeName": {
                          "id": 33129,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33128,
                            "name": "FrensInitialiser",
                            "nameLocations": [
                              "2831:16:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1086,
                            "src": "2831:16:50"
                          },
                          "referencedDeclaration": 1086,
                          "src": "2831:16:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                            "typeString": "contract FrensInitialiser"
                          }
                        }
                      },
                      "id": 33132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2827:34:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                        "typeString": "contract FrensInitialiser"
                      }
                    },
                    "src": "2808:53:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                      "typeString": "contract FrensInitialiser"
                    }
                  },
                  "id": 33134,
                  "nodeType": "ExpressionStatement",
                  "src": "2808:53:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33140,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2957:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 33139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2949:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33138,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2949:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2949:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33144,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2972:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 33143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2964:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2964:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2964:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33135,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "2940:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12496",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2943:5:50",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11953,
                      "src": "2940:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 33146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2940:38:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33147,
                  "nodeType": "ExpressionStatement",
                  "src": "2940:38:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33153,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33025,
                            "src": "3023:16:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 33152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3015:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33151,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3015:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3015:25:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73496e697469616c69736572",
                        "id": 33155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3042:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        },
                        "value": "FrensInitialiser"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af6bc23c6bc9722686195552eac647dee3f7f0047136b2b64e7df71540737ba7",
                          "typeString": "literal_string \"FrensInitialiser\""
                        }
                      ],
                      "expression": {
                        "id": 33148,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "2986:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3003:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "2986:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2986:75:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33157,
                  "nodeType": "ExpressionStatement",
                  "src": "2986:75:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33163,
                            "name": "frensInitialiser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33025,
                            "src": "3112:16:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                              "typeString": "contract FrensInitialiser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                              "typeString": "contract FrensInitialiser"
                            }
                          ],
                          "id": 33162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3104:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3104:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3104:25:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3131:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33158,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3069:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33160,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3086:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "3069:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3069:67:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33167,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:67:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33171,
                        "name": "ssvRegistryAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33064,
                        "src": "3212:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5353565265676973747279",
                        "id": 33172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3232:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        },
                        "value": "SSVRegistry"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cb7a0377e806762d9a6b64dffd901bab4dac8648a775e3cad48d8e2d946b1ab",
                          "typeString": "literal_string \"SSVRegistry\""
                        }
                      ],
                      "expression": {
                        "id": 33168,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3175:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3192:19:50",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "3175:36:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3175:71:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33174,
                  "nodeType": "ExpressionStatement",
                  "src": "3175:71:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33178,
                        "name": "depCont",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33061,
                        "src": "3327:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "4465706f736974436f6e7472616374",
                        "id": 33179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        },
                        "value": "DepositContract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_150894c16ee196976b82baf1c63412d5ca0d81bd0045ba4e7c39bc876a8fedad",
                          "typeString": "literal_string \"DepositContract\""
                        }
                      ],
                      "expression": {
                        "id": 33175,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3290:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3307:19:50",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "3290:36:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3290:64:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33181,
                  "nodeType": "ExpressionStatement",
                  "src": "3290:64:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33185,
                        "name": "ENSAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33067,
                        "src": "3423:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "454e53",
                        "id": 33186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3435:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        },
                        "value": "ENS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6541a52bd1e2d547f94d35a45a80202c1b90f4c950cdd9d32f03c207f2e0c05",
                          "typeString": "literal_string \"ENS\""
                        }
                      ],
                      "expression": {
                        "id": 33182,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3386:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3403:19:50",
                      "memberName": "setExternalContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1047,
                      "src": "3386:36:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3386:55:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33188,
                  "nodeType": "ExpressionStatement",
                  "src": "3386:55:50"
                },
                {
                  "expression": {
                    "id": 33195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33189,
                      "name": "frensPoolShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33046,
                      "src": "3477:14:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33193,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "3513:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3494:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensPoolShare_$2067_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShare)"
                        },
                        "typeName": {
                          "id": 33191,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33190,
                            "name": "FrensPoolShare",
                            "nameLocations": [
                              "3498:14:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2067,
                            "src": "3498:14:50"
                          },
                          "referencedDeclaration": 2067,
                          "src": "3498:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                            "typeString": "contract FrensPoolShare"
                          }
                        }
                      },
                      "id": 33194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3494:32:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                        "typeString": "contract FrensPoolShare"
                      }
                    },
                    "src": "3477:49:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                      "typeString": "contract FrensPoolShare"
                    }
                  },
                  "id": 33196,
                  "nodeType": "ExpressionStatement",
                  "src": "3477:49:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33202,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33046,
                            "src": "3603:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 33201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3595:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33200,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3595:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3595:23:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265",
                        "id": 33204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        },
                        "value": "FrensPoolShare"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b962551e77d912aa4a87631a044539a31e5e1da237754c8d926f3313a03d9097",
                          "typeString": "literal_string \"FrensPoolShare\""
                        }
                      ],
                      "expression": {
                        "id": 33197,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3566:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3583:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "3566:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3566:71:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33206,
                  "nodeType": "ExpressionStatement",
                  "src": "3566:71:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33212,
                            "name": "frensPoolShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33046,
                            "src": "3688:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                              "typeString": "contract FrensPoolShare"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                              "typeString": "contract FrensPoolShare"
                            }
                          ],
                          "id": 33211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3680:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33210,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3680:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3680:23:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3705:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33207,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3645:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3662:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "3645:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3645:66:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33216,
                  "nodeType": "ExpressionStatement",
                  "src": "3645:66:50"
                },
                {
                  "expression": {
                    "id": 33223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33217,
                      "name": "stakingPoolFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33040,
                      "src": "3742:18:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33221,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "3786:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3763:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_StakingPoolFactory_$4475_$",
                          "typeString": "function (contract IFrensStorage) returns (contract StakingPoolFactory)"
                        },
                        "typeName": {
                          "id": 33219,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33218,
                            "name": "StakingPoolFactory",
                            "nameLocations": [
                              "3767:18:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 4475,
                            "src": "3767:18:50"
                          },
                          "referencedDeclaration": 4475,
                          "src": "3767:18:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                            "typeString": "contract StakingPoolFactory"
                          }
                        }
                      },
                      "id": 33222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3763:36:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                        "typeString": "contract StakingPoolFactory"
                      }
                    },
                    "src": "3742:57:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                      "typeString": "contract StakingPoolFactory"
                    }
                  },
                  "id": 33224,
                  "nodeType": "ExpressionStatement",
                  "src": "3742:57:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33230,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33040,
                            "src": "3871:18:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 33229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3863:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33228,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3863:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3863:27:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5374616b696e67506f6f6c466163746f7279",
                        "id": 33232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3892:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        },
                        "value": "StakingPoolFactory"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f52d25daac5b6281064c620f329e67b01efbe500cca573b904704b1eba6c1fa",
                          "typeString": "literal_string \"StakingPoolFactory\""
                        }
                      ],
                      "expression": {
                        "id": 33225,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3834:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3851:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "3834:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3834:79:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33234,
                  "nodeType": "ExpressionStatement",
                  "src": "3834:79:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33240,
                            "name": "stakingPoolFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33040,
                            "src": "3964:18:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                              "typeString": "contract StakingPoolFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolFactory_$4475",
                              "typeString": "contract StakingPoolFactory"
                            }
                          ],
                          "id": 33239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3956:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33238,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3956:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3956:27:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3985:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33235,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "3921:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3938:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "3921:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:69:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33244,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:69:50"
                },
                {
                  "expression": {
                    "id": 33251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33245,
                      "name": "frensClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33052,
                      "src": "4020:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$906",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33249,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "4048:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4033:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensClaim_$906_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensClaim)"
                        },
                        "typeName": {
                          "id": 33247,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33246,
                            "name": "FrensClaim",
                            "nameLocations": [
                              "4037:10:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 906,
                            "src": "4037:10:50"
                          },
                          "referencedDeclaration": 906,
                          "src": "4037:10:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensClaim_$906",
                            "typeString": "contract FrensClaim"
                          }
                        }
                      },
                      "id": 33250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4033:28:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensClaim_$906",
                        "typeString": "contract FrensClaim"
                      }
                    },
                    "src": "4020:41:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensClaim_$906",
                      "typeString": "contract FrensClaim"
                    }
                  },
                  "id": 33252,
                  "nodeType": "ExpressionStatement",
                  "src": "4020:41:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33258,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33052,
                            "src": "4132:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$906",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$906",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 33257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4124:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4124:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4124:19:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73436c61696d",
                        "id": 33260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        },
                        "value": "FrensClaim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_553603b30d5926c76d096cde343e4864e9f3e852aedfe94a8b9ee985e5bf9f24",
                          "typeString": "literal_string \"FrensClaim\""
                        }
                      ],
                      "expression": {
                        "id": 33253,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4095:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4112:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "4095:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:63:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33262,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:63:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33268,
                            "name": "frensClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33052,
                            "src": "4209:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensClaim_$906",
                              "typeString": "contract FrensClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensClaim_$906",
                              "typeString": "contract FrensClaim"
                            }
                          ],
                          "id": 33267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4201:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4201:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4201:19:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4222:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33263,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4166:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4183:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "4166:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4166:61:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33272,
                  "nodeType": "ExpressionStatement",
                  "src": "4166:61:50"
                },
                {
                  "expression": {
                    "id": 33279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33273,
                      "name": "frensPoolSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33055,
                      "src": "4261:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                        "typeString": "contract FrensPoolSetter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33277,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "4299:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4279:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensPoolSetter_$1881_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolSetter)"
                        },
                        "typeName": {
                          "id": 33275,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33274,
                            "name": "FrensPoolSetter",
                            "nameLocations": [
                              "4283:15:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1881,
                            "src": "4283:15:50"
                          },
                          "referencedDeclaration": 1881,
                          "src": "4283:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                            "typeString": "contract FrensPoolSetter"
                          }
                        }
                      },
                      "id": 33278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4279:33:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                        "typeString": "contract FrensPoolSetter"
                      }
                    },
                    "src": "4261:51:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                      "typeString": "contract FrensPoolSetter"
                    }
                  },
                  "id": 33280,
                  "nodeType": "ExpressionStatement",
                  "src": "4261:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33286,
                            "name": "frensPoolSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33055,
                            "src": "4387:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                              "typeString": "contract FrensPoolSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                              "typeString": "contract FrensPoolSetter"
                            }
                          ],
                          "id": 33285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4379:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33284,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4379:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4379:24:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c536574746572",
                        "id": 33288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4405:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45b002fb55a01b34a6c58e4d710b50ebbce7cf0354e418a1b19e16023b42cc4a",
                          "typeString": "literal_string \"FrensPoolSetter\""
                        },
                        "value": "FrensPoolSetter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45b002fb55a01b34a6c58e4d710b50ebbce7cf0354e418a1b19e16023b42cc4a",
                          "typeString": "literal_string \"FrensPoolSetter\""
                        }
                      ],
                      "expression": {
                        "id": 33281,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4350:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4367:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "4350:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4350:73:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33290,
                  "nodeType": "ExpressionStatement",
                  "src": "4350:73:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33296,
                            "name": "frensPoolSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33055,
                            "src": "4474:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                              "typeString": "contract FrensPoolSetter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolSetter_$1881",
                              "typeString": "contract FrensPoolSetter"
                            }
                          ],
                          "id": 33295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4466:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4466:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4466:24:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4492:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33291,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4431:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4448:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "4431:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4431:66:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33300,
                  "nodeType": "ExpressionStatement",
                  "src": "4431:66:50"
                },
                {
                  "expression": {
                    "id": 33307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33301,
                      "name": "frensMetaHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33028,
                      "src": "4531:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33305,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "4569:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4549:19:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensMetaHelper_$1568_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensMetaHelper)"
                        },
                        "typeName": {
                          "id": 33303,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33302,
                            "name": "FrensMetaHelper",
                            "nameLocations": [
                              "4553:15:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1568,
                            "src": "4553:15:50"
                          },
                          "referencedDeclaration": 1568,
                          "src": "4553:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                            "typeString": "contract FrensMetaHelper"
                          }
                        }
                      },
                      "id": 33306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4549:33:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                        "typeString": "contract FrensMetaHelper"
                      }
                    },
                    "src": "4531:51:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                      "typeString": "contract FrensMetaHelper"
                    }
                  },
                  "id": 33308,
                  "nodeType": "ExpressionStatement",
                  "src": "4531:51:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33314,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33028,
                            "src": "4657:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 33313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4649:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4649:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4649:24:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e734d65746148656c706572",
                        "id": 33316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4675:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        },
                        "value": "FrensMetaHelper"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28b19c549f89fbb0da4ef852ceb97c79e4b0b5c25723327d0f04137c17cce5c4",
                          "typeString": "literal_string \"FrensMetaHelper\""
                        }
                      ],
                      "expression": {
                        "id": 33309,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4620:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4637:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "4620:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4620:73:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33318,
                  "nodeType": "ExpressionStatement",
                  "src": "4620:73:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33324,
                            "name": "frensMetaHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33028,
                            "src": "4744:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                              "typeString": "contract FrensMetaHelper"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensMetaHelper_$1568",
                              "typeString": "contract FrensMetaHelper"
                            }
                          ],
                          "id": 33323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4736:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33322,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4736:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4736:24:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4762:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33319,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4701:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4718:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "4701:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4701:67:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33328,
                  "nodeType": "ExpressionStatement",
                  "src": "4701:67:50"
                },
                {
                  "expression": {
                    "id": 33335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33329,
                      "name": "frensPoolShareTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33031,
                      "src": "4800:22:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33333,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "4852:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4825:26:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensPoolShareTokenURI_$2434_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensPoolShareTokenURI)"
                        },
                        "typeName": {
                          "id": 33331,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33330,
                            "name": "FrensPoolShareTokenURI",
                            "nameLocations": [
                              "4829:22:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2434,
                            "src": "4829:22:50"
                          },
                          "referencedDeclaration": 2434,
                          "src": "4829:22:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                            "typeString": "contract FrensPoolShareTokenURI"
                          }
                        }
                      },
                      "id": 33334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4825:40:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                        "typeString": "contract FrensPoolShareTokenURI"
                      }
                    },
                    "src": "4800:65:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                      "typeString": "contract FrensPoolShareTokenURI"
                    }
                  },
                  "id": 33336,
                  "nodeType": "ExpressionStatement",
                  "src": "4800:65:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33342,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33031,
                            "src": "4938:22:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 33341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4930:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4930:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4930:31:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73506f6f6c5368617265546f6b656e555249",
                        "id": 33344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4963:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        },
                        "value": "FrensPoolShareTokenURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31a2fff60def4dcf9ea6a6a20de87bccd63f782757c99cdd5049ee5bbc3cbdb0",
                          "typeString": "literal_string \"FrensPoolShareTokenURI\""
                        }
                      ],
                      "expression": {
                        "id": 33337,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4901:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4918:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "4901:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:87:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33346,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:87:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33352,
                            "name": "frensPoolShareTokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33031,
                            "src": "5039:22:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensPoolShareTokenURI_$2434",
                              "typeString": "contract FrensPoolShareTokenURI"
                            }
                          ],
                          "id": 33351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5031:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33350,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5031:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33353,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5031:31:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5064:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33347,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "4996:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5013:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "4996:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4996:74:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33356,
                  "nodeType": "ExpressionStatement",
                  "src": "4996:74:50"
                },
                {
                  "expression": {
                    "id": 33363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33357,
                      "name": "frensArt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33022,
                      "src": "5096:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$237",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33361,
                          "name": "frensStorage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33034,
                          "src": "5120:12:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_FrensStorage_$3064",
                            "typeString": "contract FrensStorage"
                          }
                        ],
                        "id": 33360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5107:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IFrensStorage_$5073_$returns$_t_contract$_FrensArt_$237_$",
                          "typeString": "function (contract IFrensStorage) returns (contract FrensArt)"
                        },
                        "typeName": {
                          "id": 33359,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33358,
                            "name": "FrensArt",
                            "nameLocations": [
                              "5111:8:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 237,
                            "src": "5111:8:50"
                          },
                          "referencedDeclaration": 237,
                          "src": "5111:8:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FrensArt_$237",
                            "typeString": "contract FrensArt"
                          }
                        }
                      },
                      "id": 33362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5107:26:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FrensArt_$237",
                        "typeString": "contract FrensArt"
                      }
                    },
                    "src": "5096:37:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FrensArt_$237",
                      "typeString": "contract FrensArt"
                    }
                  },
                  "id": 33364,
                  "nodeType": "ExpressionStatement",
                  "src": "5096:37:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33370,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33022,
                            "src": "5201:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$237",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$237",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 33369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5193:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5193:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5193:17:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4672656e73417274",
                        "id": 33372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5212:10:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        },
                        "value": "FrensArt"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee648cafeb849c5934d7d5b296ec4421a607e59d76feb171f0023e668c00053e",
                          "typeString": "literal_string \"FrensArt\""
                        }
                      ],
                      "expression": {
                        "id": 33365,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "5164:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5181:11:50",
                      "memberName": "setContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 974,
                      "src": "5164:28:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5164:59:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33374,
                  "nodeType": "ExpressionStatement",
                  "src": "5164:59:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33380,
                            "name": "frensArt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33022,
                            "src": "5274:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FrensArt_$237",
                              "typeString": "contract FrensArt"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FrensArt_$237",
                              "typeString": "contract FrensArt"
                            }
                          ],
                          "id": 33379,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5266:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33378,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5266:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5266:17:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 33382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5285:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33375,
                        "name": "frensInitialiser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33025,
                        "src": "5231:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensInitialiser_$1086",
                          "typeString": "contract FrensInitialiser"
                        }
                      },
                      "id": 33377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5248:17:50",
                      "memberName": "setContractExists",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 942,
                      "src": "5231:34:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool) external"
                      }
                    },
                    "id": 33383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5231:60:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33384,
                  "nodeType": "ExpressionStatement",
                  "src": "5231:60:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33390,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5390:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 33389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5382:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5382:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5382:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33394,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5405:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingPoolLockedTest_$34356",
                              "typeString": "contract StakingPoolLockedTest"
                            }
                          ],
                          "id": 33393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5397:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5397:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5397:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 33385,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "5373:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12496",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5376:5:50",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11953,
                      "src": "5373:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 33396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5373:38:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33397,
                  "nodeType": "ExpressionStatement",
                  "src": "5373:38:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33398,
                        "name": "frensStorage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33034,
                        "src": "5419:12:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FrensStorage_$3064",
                          "typeString": "contract FrensStorage"
                        }
                      },
                      "id": 33400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5432:17:50",
                      "memberName": "setDeployedStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2630,
                      "src": "5419:30:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 33401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5419:32:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33402,
                  "nodeType": "ExpressionStatement",
                  "src": "5419:32:50"
                },
                {
                  "assignments": [
                    33404
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33404,
                      "mutability": "mutable",
                      "name": "pool",
                      "nameLocation": "5520:4:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 33420,
                      "src": "5512:12:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33403,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5512:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33410,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 33407,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "5541:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 33408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5552:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 33405,
                        "name": "proxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33049,
                        "src": "5528:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStakingPoolFactory_$5397",
                          "typeString": "contract IStakingPoolFactory"
                        }
                      },
                      "id": 33406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5534:6:50",
                      "memberName": "create",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5396,
                      "src": "5528:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$returns$_t_address_$",
                        "typeString": "function (address,bool) external returns (address)"
                      }
                    },
                    "id": 33409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5528:29:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5511:46:50"
                },
                {
                  "expression": {
                    "id": 33418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33411,
                      "name": "stakingPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33043,
                      "src": "5597:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4377",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 33415,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33404,
                              "src": "5631:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 33414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5623:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 33413,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5623:8:50",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5623:13:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 33412,
                        "name": "StakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4377,
                        "src": "5611:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingPool_$4377_$",
                          "typeString": "type(contract StakingPool)"
                        }
                      },
                      "id": 33417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5611:26:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingPool_$4377",
                        "typeString": "contract StakingPool"
                      }
                    },
                    "src": "5597:40:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingPool_$4377",
                      "typeString": "contract StakingPool"
                    }
                  },
                  "id": 33419,
                  "nodeType": "ExpressionStatement",
                  "src": "5597:40:50"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "2517:5:50",
            "parameters": {
              "id": 33101,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2522:2:50"
            },
            "returnParameters": {
              "id": 33102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2532:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33439,
            "nodeType": "FunctionDefinition",
            "src": "5759:143:50",
            "nodes": [],
            "body": {
              "id": 33438,
              "nodeType": "Block",
              "src": "5787:115:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33425,
                      "mutability": "mutable",
                      "name": "stakingPoolOwner",
                      "nameLocation": "5803:16:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 33438,
                      "src": "5795:24:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 33424,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5795:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33429,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33426,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "5822:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5834:5:50",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4261,
                      "src": "5822:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 33428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5822:19:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5795:46:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33431,
                        "name": "stakingPoolOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33425,
                        "src": "5858:16:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33434,
                            "name": "contOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33076,
                            "src": "5884:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 33433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5876:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33432,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5876:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5876:18:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33430,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8565,
                        8590,
                        8603,
                        8619,
                        8661,
                        8703,
                        8745,
                        8782,
                        8819,
                        8856,
                        5718,
                        5743,
                        5773,
                        5798,
                        5857,
                        5882,
                        5912,
                        5937,
                        7037,
                        7072
                      ],
                      "referencedDeclaration": 5718,
                      "src": "5849:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 33436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5849:46:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33437,
                  "nodeType": "ExpressionStatement",
                  "src": "5849:46:50"
                }
              ]
            },
            "functionSelector": "9e535c69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testOwner",
            "nameLocation": "5768:9:50",
            "parameters": {
              "id": 33422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5777:2:50"
            },
            "returnParameters": {
              "id": 33423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5787:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33572,
            "nodeType": "FunctionDefinition",
            "src": "5908:995:50",
            "nodes": [],
            "body": {
              "id": 33571,
              "nodeType": "Block",
              "src": "5946:957:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5993:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33444,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "5977:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12496",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5980:12:50",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11982,
                      "src": "5977:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5977:41:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33449,
                  "nodeType": "ExpressionStatement",
                  "src": "5977:41:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33451,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33082,
                        "src": "6031:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33450,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "6026:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6026:11:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33453,
                  "nodeType": "ExpressionStatement",
                  "src": "6026:11:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33454,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33043,
                          "src": "6045:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6057:13:50",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3252,
                        "src": "6045:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 33457,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33441,
                          "src": "6078:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        }
                      ],
                      "src": "6045:35:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6045:37:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33460,
                  "nodeType": "ExpressionStatement",
                  "src": "6045:37:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33462,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "6114:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33461,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "6109:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6109:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33464,
                  "nodeType": "ExpressionStatement",
                  "src": "6109:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33468,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "6154:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33469,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "6162:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33470,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "6186:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33471,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "6197:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33465,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "6132:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6144:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "6132:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6132:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33473,
                  "nodeType": "ExpressionStatement",
                  "src": "6132:83:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33474,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33441,
                        "src": "6226:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6230:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6226:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33477,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33441,
                        "src": "6235:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 33478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6240:8:50",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "6235:13:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6226:22:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33530,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33441,
                        "src": "6602:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6607:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6602:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33568,
                      "nodeType": "Block",
                      "src": "6745:152:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 33554,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6771:43:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 33551,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "6755:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6758:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "6755:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33555,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6755:60:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33556,
                          "nodeType": "ExpressionStatement",
                          "src": "6755:60:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33558,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "6835:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33557,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "6825:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6825:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33560,
                          "nodeType": "ExpressionStatement",
                          "src": "6825:16:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33561,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "6851:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6863:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "6851:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33564,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33441,
                                  "src": "6884:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "6851:35:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6851:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33567,
                          "nodeType": "ExpressionStatement",
                          "src": "6851:37:50"
                        }
                      ]
                    },
                    "id": 33569,
                    "nodeType": "IfStatement",
                    "src": "6599:298:50",
                    "trueBody": {
                      "id": 33550,
                      "nodeType": "Block",
                      "src": "6610:129:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6636:20:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33533,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "6620:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6623:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "6620:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6620:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33538,
                          "nodeType": "ExpressionStatement",
                          "src": "6620:37:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33540,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "6677:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33539,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "6667:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6667:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33542,
                          "nodeType": "ExpressionStatement",
                          "src": "6667:16:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33543,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "6693:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6705:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "6693:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33546,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33441,
                                  "src": "6726:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "6693:35:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6693:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33549,
                          "nodeType": "ExpressionStatement",
                          "src": "6693:37:50"
                        }
                      ]
                    }
                  },
                  "id": 33570,
                  "nodeType": "IfStatement",
                  "src": "6223:674:50",
                  "trueBody": {
                    "id": 33529,
                    "nodeType": "Block",
                    "src": "6249:344:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33482,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "6269:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33481,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8003,
                              8024,
                              8048,
                              8072
                            ],
                            "referencedDeclaration": 8003,
                            "src": "6259:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6259:16:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33484,
                        "nodeType": "ExpressionStatement",
                        "src": "6259:16:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33485,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "6285:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6297:13:50",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3252,
                              "src": "6285:25:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33488,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33441,
                                "src": "6318:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "6285:35:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6285:37:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33491,
                        "nodeType": "ExpressionStatement",
                        "src": "6285:37:50"
                      },
                      {
                        "assignments": [
                          33493
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33493,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6337:2:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33529,
                            "src": "6332:7:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33492,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6332:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33499,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33496,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "6377:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33497,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6384:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33494,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33046,
                              "src": "6342:14:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6357:19:50",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29775,
                            "src": "6342:34:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6342:44:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6332:54:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33501,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33493,
                                "src": "6407:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 33502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6413:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6407:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33500,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5667,
                              5688
                            ],
                            "referencedDeclaration": 5667,
                            "src": "6396:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6396:20:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33505,
                        "nodeType": "ExpressionStatement",
                        "src": "6396:20:50"
                      },
                      {
                        "assignments": [
                          33507
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33507,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "6431:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33529,
                            "src": "6426:11:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33506,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6426:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33512,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33510,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33493,
                              "src": "6469:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33508,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "6440:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33509,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6452:16:50",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4229,
                            "src": "6440:28:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6440:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6426:46:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33514,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33441,
                              "src": "6491:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 33515,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33507,
                              "src": "6494:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33513,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8565,
                              8590,
                              8603,
                              8619,
                              8661,
                              8703,
                              8745,
                              8782,
                              8819,
                              8856,
                              5718,
                              5743,
                              5773,
                              5798,
                              5857,
                              5882,
                              5912,
                              5937,
                              7037,
                              7072
                            ],
                            "referencedDeclaration": 5912,
                            "src": "6482:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6482:19:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33517,
                        "nodeType": "ExpressionStatement",
                        "src": "6482:19:50"
                      },
                      {
                        "assignments": [
                          33519
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33519,
                            "mutability": "mutable",
                            "name": "totDep",
                            "nameLocation": "6516:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33529,
                            "src": "6511:11:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33518,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6511:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33523,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 33520,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "6525:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6537:16:50",
                            "memberName": "getTotalDeposits",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4248,
                            "src": "6525:28:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 33522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6525:30:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6511:44:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33525,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33441,
                              "src": "6574:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 33526,
                              "name": "totDep",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33519,
                              "src": "6577:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33524,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8565,
                              8590,
                              8603,
                              8619,
                              8661,
                              8703,
                              8745,
                              8782,
                              8819,
                              8856,
                              5718,
                              5743,
                              5773,
                              5798,
                              5857,
                              5882,
                              5912,
                              5937,
                              7037,
                              7072
                            ],
                            "referencedDeclaration": 5912,
                            "src": "6565:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6565:19:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33528,
                        "nodeType": "ExpressionStatement",
                        "src": "6565:19:50"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "4ccd89c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDeposit",
            "nameLocation": "5917:11:50",
            "parameters": {
              "id": 33442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33441,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "5936:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 33572,
                  "src": "5929:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 33440,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "5929:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5928:10:50"
            },
            "returnParameters": {
              "id": 33443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5946:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33735,
            "nodeType": "FunctionDefinition",
            "src": "6909:1173:50",
            "nodes": [],
            "body": {
              "id": 33734,
              "nodeType": "Block",
              "src": "6962:1120:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33580,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "6994:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33579,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "6989:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6989:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33582,
                  "nodeType": "ExpressionStatement",
                  "src": "6989:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33586,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "7034:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33587,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "7042:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33588,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "7066:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33589,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "7077:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33583,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "7012:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7024:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "7012:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7012:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33591,
                  "nodeType": "ExpressionStatement",
                  "src": "7012:83:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 33594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33592,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33574,
                        "src": "7106:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7110:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7106:5:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 33597,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33574,
                              "src": "7120:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 33596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7115:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33595,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7115:4:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7115:7:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 33601,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33576,
                              "src": "7130:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 33600,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7125:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33599,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7125:4:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33602,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7125:7:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7115:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 33604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7136:8:50",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "7115:29:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7106:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 33679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33677,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33574,
                        "src": "7590:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7595:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "7590:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 33731,
                      "nodeType": "Block",
                      "src": "7733:343:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33699,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "7832:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33698,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "7822:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7822:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33701,
                          "nodeType": "ExpressionStatement",
                          "src": "7822:16:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33702,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "7848:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7860:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "7848:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33705,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33574,
                                  "src": "7881:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "7848:35:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7848:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33708,
                          "nodeType": "ExpressionStatement",
                          "src": "7848:37:50"
                        },
                        {
                          "assignments": [
                            33710
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 33710,
                              "mutability": "mutable",
                              "name": "id",
                              "nameLocation": "7900:2:50",
                              "nodeType": "VariableDeclaration",
                              "scope": 33731,
                              "src": "7895:7:50",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 33709,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7895:4:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 33716,
                          "initialValue": {
                            "arguments": [
                              {
                                "id": 33713,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "7940:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 33714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7947:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 33711,
                                "name": "frensPoolShare",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33046,
                                "src": "7905:14:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                                  "typeString": "contract FrensPoolShare"
                                }
                              },
                              "id": 33712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7920:19:50",
                              "memberName": "tokenOfOwnerByIndex",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 29775,
                              "src": "7905:34:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view external returns (uint256)"
                              }
                            },
                            "id": 33715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7905:44:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "7895:54:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                "id": 33720,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7975:43:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                },
                                "value": "total deposits cannot be more than 32 Eth"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                  "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                }
                              ],
                              "expression": {
                                "id": 33717,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "7959:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7962:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "7959:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33721,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7959:60:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33722,
                          "nodeType": "ExpressionStatement",
                          "src": "7959:60:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33728,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33710,
                                "src": "8064:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 33723,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "8029:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8041:12:50",
                                "memberName": "addToDeposit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3341,
                                "src": "8029:24:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256) payable external"
                                }
                              },
                              "id": 33727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33726,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33576,
                                  "src": "8061:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "8029:34:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 33729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8029:38:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33730,
                          "nodeType": "ExpressionStatement",
                          "src": "8029:38:50"
                        }
                      ]
                    },
                    "id": 33732,
                    "nodeType": "IfStatement",
                    "src": "7587:489:50",
                    "trueBody": {
                      "id": 33697,
                      "nodeType": "Block",
                      "src": "7598:129:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33683,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7624:20:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33680,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "7608:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7611:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "7608:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7608:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33685,
                          "nodeType": "ExpressionStatement",
                          "src": "7608:37:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33687,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "7665:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33686,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "7655:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7655:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33689,
                          "nodeType": "ExpressionStatement",
                          "src": "7655:16:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33690,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "7681:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33692,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7693:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "7681:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33693,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33574,
                                  "src": "7714:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "src": "7681:35:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7681:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33696,
                          "nodeType": "ExpressionStatement",
                          "src": "7681:37:50"
                        }
                      ]
                    }
                  },
                  "id": 33733,
                  "nodeType": "IfStatement",
                  "src": "7103:973:50",
                  "trueBody": {
                    "id": 33676,
                    "nodeType": "Block",
                    "src": "7145:436:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33608,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "7165:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33607,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8003,
                              8024,
                              8048,
                              8072
                            ],
                            "referencedDeclaration": 8003,
                            "src": "7155:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7155:16:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33610,
                        "nodeType": "ExpressionStatement",
                        "src": "7155:16:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33611,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "7181:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7193:13:50",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3252,
                              "src": "7181:25:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33614,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33574,
                                "src": "7214:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7181:35:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7181:37:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33617,
                        "nodeType": "ExpressionStatement",
                        "src": "7181:37:50"
                      },
                      {
                        "assignments": [
                          33619
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33619,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "7233:2:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33676,
                            "src": "7228:7:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33618,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7228:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33625,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33622,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "7273:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7280:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33620,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33046,
                              "src": "7238:14:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7253:19:50",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29775,
                            "src": "7238:34:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7238:44:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7228:54:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33627,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33619,
                                "src": "7303:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 33628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7309:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "7303:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33626,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5667,
                              5688
                            ],
                            "referencedDeclaration": 5667,
                            "src": "7292:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7292:20:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33631,
                        "nodeType": "ExpressionStatement",
                        "src": "7292:20:50"
                      },
                      {
                        "assignments": [
                          33633
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33633,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "7327:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33676,
                            "src": "7322:11:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33632,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7322:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33638,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33636,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33619,
                              "src": "7365:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33634,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "7336:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7348:16:50",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4229,
                            "src": "7336:28:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7336:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7322:46:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33640,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33574,
                              "src": "7387:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 33641,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33633,
                              "src": "7390:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33639,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8565,
                              8590,
                              8603,
                              8619,
                              8661,
                              8703,
                              8745,
                              8782,
                              8819,
                              8856,
                              5718,
                              5743,
                              5773,
                              5798,
                              5857,
                              5882,
                              5912,
                              5937,
                              7037,
                              7072
                            ],
                            "referencedDeclaration": 5912,
                            "src": "7378:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7378:19:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33643,
                        "nodeType": "ExpressionStatement",
                        "src": "7378:19:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33649,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33619,
                              "src": "7442:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 33644,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "7407:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7419:12:50",
                              "memberName": "addToDeposit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3341,
                              "src": "7407:24:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256) payable external"
                              }
                            },
                            "id": 33648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33647,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33576,
                                "src": "7439:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "src": "7407:34:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                              "typeString": "function (uint256) payable external"
                            }
                          },
                          "id": 33650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7407:38:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33651,
                        "nodeType": "ExpressionStatement",
                        "src": "7407:38:50"
                      },
                      {
                        "assignments": [
                          33653
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33653,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "7460:7:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33676,
                            "src": "7455:12:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33652,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7455:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33658,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33656,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33619,
                              "src": "7499:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33654,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "7470:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7482:16:50",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4229,
                            "src": "7470:28:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7470:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7455:47:50"
                      },
                      {
                        "assignments": [
                          33660
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33660,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "7517:3:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33676,
                            "src": "7512:8:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33659,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7512:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33670,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 33663,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33574,
                                "src": "7528:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 33662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7523:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33661,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7523:4:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33664,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7523:7:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 33667,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33576,
                                "src": "7538:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 33666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7533:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33665,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "7533:4:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7533:7:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7523:17:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7512:28:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33672,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33660,
                              "src": "7559:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33673,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33653,
                              "src": "7564:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33671,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8565,
                              8590,
                              8603,
                              8619,
                              8661,
                              8703,
                              8745,
                              8782,
                              8819,
                              8856,
                              5718,
                              5743,
                              5773,
                              5798,
                              5857,
                              5882,
                              5912,
                              5937,
                              7037,
                              7072
                            ],
                            "referencedDeclaration": 5912,
                            "src": "7550:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7550:22:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33675,
                        "nodeType": "ExpressionStatement",
                        "src": "7550:22:50"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "020f12da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddToDeposit",
            "nameLocation": "6918:16:50",
            "parameters": {
              "id": 33577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33574,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "6942:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 33735,
                  "src": "6935:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33573,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6935:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33576,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "6952:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 33735,
                  "src": "6945:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 33575,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "6945:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6934:20:50"
            },
            "returnParameters": {
              "id": 33578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6962:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33926,
            "nodeType": "FunctionDefinition",
            "src": "8088:1258:50",
            "nodes": [],
            "body": {
              "id": 33925,
              "nodeType": "Block",
              "src": "8137:1209:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33743,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "8169:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33742,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "8164:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8164:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33745,
                  "nodeType": "ExpressionStatement",
                  "src": "8164:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33749,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "8209:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33750,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "8217:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33751,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "8241:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33752,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "8252:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33746,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "8187:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8199:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "8187:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8187:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33754,
                  "nodeType": "ExpressionStatement",
                  "src": "8187:83:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 33768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 33761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 33757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33755,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33737,
                          "src": "8281:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 33756,
                          "name": "y",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33739,
                          "src": "8286:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "src": "8281:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "&&",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        },
                        "id": 33760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33758,
                          "name": "x",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33737,
                          "src": "8291:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint72",
                            "typeString": "uint72"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 33759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8295:1:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8291:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "8281:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 33767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 33764,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33737,
                            "src": "8305:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint72",
                              "typeString": "uint72"
                            }
                          ],
                          "id": 33763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8300:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 33762,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8300:4:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8300:7:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "hexValue": "3332",
                        "id": 33766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8311:8:50",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_32000000000000000000_by_1",
                          "typeString": "int_const 32000000000000000000"
                        },
                        "value": "32"
                      },
                      "src": "8300:19:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8281:38:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint72",
                        "typeString": "uint72"
                      },
                      "id": 33840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 33838,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33737,
                        "src": "8754:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint72",
                          "typeString": "uint72"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 33839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8759:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "8754:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 33861,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33737,
                              "src": "8905:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "id": 33860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8900:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 33859,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8900:4:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8900:7:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 33863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8910:8:50",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32"
                        },
                        "src": "8900:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 33921,
                        "nodeType": "Block",
                        "src": "9078:262:50",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33884,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33082,
                                  "src": "9098:5:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33883,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  8003,
                                  8024,
                                  8048,
                                  8072
                                ],
                                "referencedDeclaration": 8003,
                                "src": "9088:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 33885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9088:16:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33886,
                            "nodeType": "ExpressionStatement",
                            "src": "9088:16:50"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 33887,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33043,
                                    "src": "9114:11:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4377",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33889,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9126:13:50",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3252,
                                  "src": "9114:25:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 33891,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 33890,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33737,
                                    "src": "9147:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "9114:35:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33892,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9114:37:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33893,
                            "nodeType": "ExpressionStatement",
                            "src": "9114:37:50"
                          },
                          {
                            "assignments": [
                              33895
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 33895,
                                "mutability": "mutable",
                                "name": "id",
                                "nameLocation": "9166:2:50",
                                "nodeType": "VariableDeclaration",
                                "scope": 33921,
                                "src": "9161:7:50",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 33894,
                                  "name": "uint",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9161:4:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 33901,
                            "initialValue": {
                              "arguments": [
                                {
                                  "id": 33898,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33082,
                                  "src": "9206:5:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 33899,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9213:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 33896,
                                  "name": "frensPoolShare",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33046,
                                  "src": "9171:14:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                                    "typeString": "contract FrensPoolShare"
                                  }
                                },
                                "id": 33897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9186:19:50",
                                "memberName": "tokenOfOwnerByIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 29775,
                                "src": "9171:34:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (address,uint256) view external returns (uint256)"
                                }
                              },
                              "id": 33900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9171:44:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "9161:54:50"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 33905,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 33903,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33895,
                                    "src": "9236:2:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 33904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9242:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "9236:7:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 33902,
                                "name": "assertTrue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  5667,
                                  5688
                                ],
                                "referencedDeclaration": 5667,
                                "src": "9225:10:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                                  "typeString": "function (bool)"
                                }
                              },
                              "id": 33906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9225:20:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33907,
                            "nodeType": "ExpressionStatement",
                            "src": "9225:20:50"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f7420656e6f756768206465706f7369746564",
                                  "id": 33911,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9271:22:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  },
                                  "value": "not enough deposited"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_85c56fdd810ecac0e0d24c0cd67c0395d5799f1d6532c0300c2d118e7243822c",
                                    "typeString": "literal_string \"not enough deposited\""
                                  }
                                ],
                                "expression": {
                                  "id": 33908,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7215,
                                  "src": "9255:2:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$12496",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 33910,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9258:12:50",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11982,
                                "src": "9255:15:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 33912,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9255:39:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33913,
                            "nodeType": "ExpressionStatement",
                            "src": "9255:39:50"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33917,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33895,
                                  "src": "9325:2:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 33918,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33739,
                                  "src": "9329:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                ],
                                "expression": {
                                  "id": 33914,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "9304:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "9316:8:50",
                                "memberName": "withdraw",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3786,
                                "src": "9304:20:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256,uint256) external"
                                }
                              },
                              "id": 33919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9304:27:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33920,
                            "nodeType": "ExpressionStatement",
                            "src": "9304:27:50"
                          }
                        ]
                      },
                      "id": 33922,
                      "nodeType": "IfStatement",
                      "src": "8897:443:50",
                      "trueBody": {
                        "id": 33882,
                        "nodeType": "Block",
                        "src": "8920:152:50",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "746f74616c206465706f736974732063616e6e6f74206265206d6f7265207468616e20333220457468",
                                  "id": 33868,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8946:43:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  },
                                  "value": "total deposits cannot be more than 32 Eth"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7c4c5c9373bf91213915e67e411cb555bfd760a18f35bf26dc1843cb664fb639",
                                    "typeString": "literal_string \"total deposits cannot be more than 32 Eth\""
                                  }
                                ],
                                "expression": {
                                  "id": 33865,
                                  "name": "vm",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7215,
                                  "src": "8930:2:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Vm_$12496",
                                    "typeString": "contract Vm"
                                  }
                                },
                                "id": 33867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8933:12:50",
                                "memberName": "expectRevert",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 11982,
                                "src": "8930:15:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                  "typeString": "function (bytes memory) external"
                                }
                              },
                              "id": 33869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8930:60:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33870,
                            "nodeType": "ExpressionStatement",
                            "src": "8930:60:50"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 33872,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33082,
                                  "src": "9010:5:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 33871,
                                "name": "startHoax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  8003,
                                  8024,
                                  8048,
                                  8072
                                ],
                                "referencedDeclaration": 8003,
                                "src": "9000:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 33873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9000:16:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33874,
                            "nodeType": "ExpressionStatement",
                            "src": "9000:16:50"
                          },
                          {
                            "expression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 33875,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33043,
                                    "src": "9026:11:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4377",
                                      "typeString": "contract StakingPool"
                                    }
                                  },
                                  "id": 33877,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9038:13:50",
                                  "memberName": "depositToPool",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3252,
                                  "src": "9026:25:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                    "typeString": "function () payable external"
                                  }
                                },
                                "id": 33879,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "value"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 33878,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33737,
                                    "src": "9059:1:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint72",
                                      "typeString": "uint72"
                                    }
                                  }
                                ],
                                "src": "9026:35:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9026:37:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 33881,
                            "nodeType": "ExpressionStatement",
                            "src": "9026:37:50"
                          }
                        ]
                      }
                    },
                    "id": 33923,
                    "nodeType": "IfStatement",
                    "src": "8751:589:50",
                    "trueBody": {
                      "id": 33858,
                      "nodeType": "Block",
                      "src": "8762:129:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 33844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8788:20:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 33841,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "8772:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 33843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8775:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "8772:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 33845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8772:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33846,
                          "nodeType": "ExpressionStatement",
                          "src": "8772:37:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 33848,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "8829:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 33847,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "8819:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 33849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8819:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33850,
                          "nodeType": "ExpressionStatement",
                          "src": "8819:16:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 33851,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "8845:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 33853,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8857:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "8845:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 33855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 33854,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33737,
                                  "src": "8878:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint72",
                                    "typeString": "uint72"
                                  }
                                }
                              ],
                              "src": "8845:35:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8845:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 33857,
                          "nodeType": "ExpressionStatement",
                          "src": "8845:37:50"
                        }
                      ]
                    }
                  },
                  "id": 33924,
                  "nodeType": "IfStatement",
                  "src": "8278:1062:50",
                  "trueBody": {
                    "id": 33837,
                    "nodeType": "Block",
                    "src": "8320:425:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33770,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "8340:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 33769,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8003,
                              8024,
                              8048,
                              8072
                            ],
                            "referencedDeclaration": 8003,
                            "src": "8330:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 33771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8330:16:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33772,
                        "nodeType": "ExpressionStatement",
                        "src": "8330:16:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 33773,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "8356:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 33775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8368:13:50",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3252,
                              "src": "8356:25:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 33777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 33776,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33737,
                                "src": "8389:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "src": "8356:35:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 33778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8356:37:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33779,
                        "nodeType": "ExpressionStatement",
                        "src": "8356:37:50"
                      },
                      {
                        "assignments": [
                          33781
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33781,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "8408:2:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33837,
                            "src": "8403:7:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33780,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8403:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33787,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33784,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "8448:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 33785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8455:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 33782,
                              "name": "frensPoolShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33046,
                              "src": "8413:14:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FrensPoolShare_$2067",
                                "typeString": "contract FrensPoolShare"
                              }
                            },
                            "id": 33783,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8428:19:50",
                            "memberName": "tokenOfOwnerByIndex",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29775,
                            "src": "8413:34:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8413:44:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8403:54:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 33791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 33789,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33781,
                                "src": "8478:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 33790,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8484:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "8478:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 33788,
                            "name": "assertTrue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              5667,
                              5688
                            ],
                            "referencedDeclaration": 5667,
                            "src": "8467:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool)"
                            }
                          },
                          "id": 33792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8467:20:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33793,
                        "nodeType": "ExpressionStatement",
                        "src": "8467:20:50"
                      },
                      {
                        "assignments": [
                          33795
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33795,
                            "mutability": "mutable",
                            "name": "depAmt",
                            "nameLocation": "8502:6:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33837,
                            "src": "8497:11:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33794,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8497:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33800,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33798,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33781,
                              "src": "8540:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33796,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "8511:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8523:16:50",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4229,
                            "src": "8511:28:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8511:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8497:46:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33802,
                              "name": "x",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33737,
                              "src": "8562:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            },
                            {
                              "id": 33803,
                              "name": "depAmt",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33795,
                              "src": "8565:6:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33801,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8565,
                              8590,
                              8603,
                              8619,
                              8661,
                              8703,
                              8745,
                              8782,
                              8819,
                              8856,
                              5718,
                              5743,
                              5773,
                              5798,
                              5857,
                              5882,
                              5912,
                              5937,
                              7037,
                              7072
                            ],
                            "referencedDeclaration": 5912,
                            "src": "8553:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8553:19:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33805,
                        "nodeType": "ExpressionStatement",
                        "src": "8553:19:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33809,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33781,
                              "src": "8603:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33810,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33739,
                              "src": "8607:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint72",
                                "typeString": "uint72"
                              }
                            ],
                            "expression": {
                              "id": 33806,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "8582:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8594:8:50",
                            "memberName": "withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3786,
                            "src": "8582:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) external"
                            }
                          },
                          "id": 33811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8582:27:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33812,
                        "nodeType": "ExpressionStatement",
                        "src": "8582:27:50"
                      },
                      {
                        "assignments": [
                          33814
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33814,
                            "mutability": "mutable",
                            "name": "depAmt2",
                            "nameLocation": "8624:7:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33837,
                            "src": "8619:12:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33813,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8619:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33819,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 33817,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33781,
                              "src": "8663:2:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 33815,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "8634:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 33816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8646:16:50",
                            "memberName": "getDepositAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4229,
                            "src": "8634:28:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view external returns (uint256)"
                            }
                          },
                          "id": 33818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8634:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8619:47:50"
                      },
                      {
                        "assignments": [
                          33821
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 33821,
                            "mutability": "mutable",
                            "name": "tot",
                            "nameLocation": "8681:3:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 33837,
                            "src": "8676:8:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 33820,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8676:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 33831,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 33824,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33737,
                                "src": "8692:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 33823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8687:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33822,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8687:4:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8687:7:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 33828,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33739,
                                "src": "8702:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint72",
                                  "typeString": "uint72"
                                }
                              ],
                              "id": 33827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8697:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 33826,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8697:4:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 33829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8697:7:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8687:17:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8676:28:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33833,
                              "name": "tot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33821,
                              "src": "8723:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 33834,
                              "name": "depAmt2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33814,
                              "src": "8728:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 33832,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8565,
                              8590,
                              8603,
                              8619,
                              8661,
                              8703,
                              8745,
                              8782,
                              8819,
                              8856,
                              5718,
                              5743,
                              5773,
                              5798,
                              5857,
                              5882,
                              5912,
                              5937,
                              7037,
                              7072
                            ],
                            "referencedDeclaration": 5912,
                            "src": "8714:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 33835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8714:22:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 33836,
                        "nodeType": "ExpressionStatement",
                        "src": "8714:22:50"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "90f805d9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testWithdraw",
            "nameLocation": "8097:12:50",
            "parameters": {
              "id": 33740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33737,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "8117:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 33926,
                  "src": "8110:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 33736,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "8110:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33739,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "8127:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 33926,
                  "src": "8120:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint72",
                    "typeString": "uint72"
                  },
                  "typeName": {
                    "id": 33738,
                    "name": "uint72",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint72",
                      "typeString": "uint72"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8109:20:50"
            },
            "returnParameters": {
              "id": 33741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8137:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34026,
            "nodeType": "FunctionDefinition",
            "src": "9352:1145:50",
            "nodes": [],
            "body": {
              "id": 34025,
              "nodeType": "Block",
              "src": "9380:1117:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33930,
                      "mutability": "mutable",
                      "name": "initialBalance",
                      "nameLocation": "9394:14:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34025,
                      "src": "9389:19:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33929,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9389:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33936,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 33933,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33043,
                          "src": "9419:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                            "typeString": "contract StakingPool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                            "typeString": "contract StakingPool"
                          }
                        ],
                        "id": 33932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9411:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 33931,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9411:7:50",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 33934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9411:20:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 33935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9432:7:50",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9411:28:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9389:50:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33938,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33082,
                        "src": "9502:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33937,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "9497:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9497:11:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33940,
                  "nodeType": "ExpressionStatement",
                  "src": "9497:11:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6e6f7420616363657074696e67206465706f73697473",
                        "id": 33944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9532:24:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        },
                        "value": "not accepting deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_50658a37ec54949fc12cd48aa0e210509c880b9aae3001508f07a56843d40880",
                          "typeString": "literal_string \"not accepting deposits\""
                        }
                      ],
                      "expression": {
                        "id": 33941,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "9516:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12496",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9519:12:50",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11982,
                      "src": "9516:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9516:41:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33946,
                  "nodeType": "ExpressionStatement",
                  "src": "9516:41:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33947,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33043,
                          "src": "9565:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9577:13:50",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3252,
                        "src": "9565:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9598:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "9565:54:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9565:56:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33953,
                  "nodeType": "ExpressionStatement",
                  "src": "9565:56:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33955,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "9937:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33954,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "9932:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9932:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33957,
                  "nodeType": "ExpressionStatement",
                  "src": "9932:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33961,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "9977:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33962,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "9985:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33963,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "10009:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 33964,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "10020:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 33958,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "9955:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 33960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9967:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "9955:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 33965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9955:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33966,
                  "nodeType": "ExpressionStatement",
                  "src": "9955:83:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33968,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33082,
                        "src": "10051:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 33967,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "10046:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10046:11:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33970,
                  "nodeType": "ExpressionStatement",
                  "src": "10046:11:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 33971,
                          "name": "stakingPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33043,
                          "src": "10065:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                            "typeString": "contract StakingPool"
                          }
                        },
                        "id": 33973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10077:13:50",
                        "memberName": "depositToPool",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3252,
                        "src": "10065:25:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 33975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10098:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        }
                      ],
                      "src": "10065:54:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 33976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10065:56:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33977,
                  "nodeType": "ExpressionStatement",
                  "src": "10065:56:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33979,
                          "name": "initialBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33930,
                          "src": "10138:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3332303030303030303030303030303030303030",
                          "id": 33980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10155:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32000000000000000000_by_1",
                            "typeString": "int_const 32000000000000000000"
                          },
                          "value": "32000000000000000000"
                        },
                        "src": "10138:37:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 33984,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "10185:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 33983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10177:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33982,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10177:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10177:20:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 33986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10198:7:50",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10177:28:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33978,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8565,
                        8590,
                        8603,
                        8619,
                        8661,
                        8703,
                        8745,
                        8782,
                        8819,
                        8856,
                        5718,
                        5743,
                        5773,
                        5798,
                        5857,
                        5882,
                        5912,
                        5937,
                        7037,
                        7072
                      ],
                      "referencedDeclaration": 5912,
                      "src": "10129:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10129:77:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33988,
                  "nodeType": "ExpressionStatement",
                  "src": "10129:77:50"
                },
                {
                  "assignments": [
                    33990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33990,
                      "mutability": "mutable",
                      "name": "deposit_count_hash",
                      "nameLocation": "10222:18:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34025,
                      "src": "10214:26:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 33989,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10214:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33996,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33992,
                            "name": "depositContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33073,
                            "src": "10253:15:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDepositContract_$4570",
                              "typeString": "contract IDepositContract"
                            }
                          },
                          "id": 33993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10269:17:50",
                          "memberName": "get_deposit_count",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4569,
                          "src": "10253:33:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view external returns (bytes memory)"
                          }
                        },
                        "id": 33994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10253:35:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 33991,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "10243:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 33995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10243:46:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10214:75:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33998,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "10302:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 33997,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "10297:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 33999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10297:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34000,
                  "nodeType": "ExpressionStatement",
                  "src": "10297:15:50"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 34001,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "10320:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10332:5:50",
                      "memberName": "stake",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3528,
                      "src": "10320:17:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 34004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10320:19:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34005,
                  "nodeType": "ExpressionStatement",
                  "src": "10320:19:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34007,
                        "name": "initialBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33930,
                        "src": "10356:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34010,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "10380:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            ],
                            "id": 34009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10372:7:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 34008,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10372:7:50",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10372:20:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 34012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10393:7:50",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "10372:28:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34006,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8565,
                        8590,
                        8603,
                        8619,
                        8661,
                        8703,
                        8745,
                        8782,
                        8819,
                        8856,
                        5718,
                        5743,
                        5773,
                        5798,
                        5857,
                        5882,
                        5912,
                        5937,
                        7037,
                        7072
                      ],
                      "referencedDeclaration": 5912,
                      "src": "10347:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 34013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10347:54:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34014,
                  "nodeType": "ExpressionStatement",
                  "src": "10347:54:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 34022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34017,
                                  "name": "depositContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33073,
                                  "src": "10431:15:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IDepositContract_$4570",
                                    "typeString": "contract IDepositContract"
                                  }
                                },
                                "id": 34018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "10447:17:50",
                                "memberName": "get_deposit_count",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4569,
                                "src": "10431:33:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () view external returns (bytes memory)"
                                }
                              },
                              "id": 34019,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10431:35:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 34016,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "10421:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 34020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10421:46:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 34021,
                          "name": "deposit_count_hash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33990,
                          "src": "10471:18:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10421:68:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 34015,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8515,
                        8529
                      ],
                      "referencedDeclaration": 8515,
                      "src": "10409:11:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 34023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10409:81:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34024,
                  "nodeType": "ExpressionStatement",
                  "src": "10409:81:50"
                }
              ]
            },
            "functionSelector": "3a1143da",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testStake",
            "nameLocation": "9361:9:50",
            "parameters": {
              "id": 33927,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9370:2:50"
            },
            "returnParameters": {
              "id": 33928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9380:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34300,
            "nodeType": "FunctionDefinition",
            "src": "10503:2146:50",
            "nodes": [],
            "body": {
              "id": 34299,
              "nodeType": "Block",
              "src": "10554:2095:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34034,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "10586:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34033,
                      "name": "hoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7913,
                        7934,
                        7958,
                        7982
                      ],
                      "referencedDeclaration": 7913,
                      "src": "10581:4:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10581:15:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34036,
                  "nodeType": "ExpressionStatement",
                  "src": "10581:15:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34040,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "10626:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34041,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "10634:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34042,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "10658:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34043,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "10669:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34037,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "10604:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10616:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "10604:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 34044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10604:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34045,
                  "nodeType": "ExpressionStatement",
                  "src": "10604:83:50"
                },
                {
                  "assignments": [
                    34047
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34047,
                      "mutability": "mutable",
                      "name": "maxUint32",
                      "nameLocation": "10700:9:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34299,
                      "src": "10695:14:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34046,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10695:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34049,
                  "initialValue": {
                    "hexValue": "34323934393637323935",
                    "id": 34048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10712:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "4294967295"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10695:27:50"
                },
                {
                  "assignments": [
                    34051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34051,
                      "mutability": "mutable",
                      "name": "aliceDeposit",
                      "nameLocation": "10735:12:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34299,
                      "src": "10730:17:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34050,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10730:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34060,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 34057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 34054,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34028,
                            "src": "10755:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 34053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10750:4:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 34052,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10750:4:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10750:7:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3331393939393939393939393939393939393939",
                        "id": 34056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10760:20:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31999999999999999999_by_1",
                          "typeString": "int_const 31999999999999999999"
                        },
                        "value": "31999999999999999999"
                      },
                      "src": "10750:30:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 34058,
                      "name": "maxUint32",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34047,
                      "src": "10783:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10750:42:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10730:62:50"
                },
                {
                  "assignments": [
                    34062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34062,
                      "mutability": "mutable",
                      "name": "bobDeposit",
                      "nameLocation": "10805:10:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34299,
                      "src": "10800:15:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34061,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "10800:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34066,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3332303030303030303030303030303030303030",
                      "id": 34063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10818:20:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_32000000000000000000_by_1",
                        "typeString": "int_const 32000000000000000000"
                      },
                      "value": "32000000000000000000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 34064,
                      "name": "aliceDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34051,
                      "src": "10841:12:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10818:35:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10800:53:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 34073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 34069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 34067,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34028,
                        "src": "10864:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10869:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "10864:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 34072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 34070,
                        "name": "y",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34030,
                        "src": "10874:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "313030",
                        "id": 34071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10878:3:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      },
                      "src": "10874:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10864:17:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "id": 34227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 34225,
                        "name": "x",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34028,
                        "src": "12130:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 34226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12135:1:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "12130:6:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 34296,
                      "nodeType": "Block",
                      "src": "12273:370:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34247,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "12288:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34246,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7913,
                                7934,
                                7958,
                                7982
                              ],
                              "referencedDeclaration": 7913,
                              "src": "12283:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12283:11:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34249,
                          "nodeType": "ExpressionStatement",
                          "src": "12283:11:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34250,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "12304:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34252,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12316:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "12304:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34253,
                                  "name": "aliceDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34051,
                                  "src": "12337:12:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "12304:46:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12304:48:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34256,
                          "nodeType": "ExpressionStatement",
                          "src": "12304:48:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34258,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33088,
                                "src": "12367:3:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34257,
                              "name": "hoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                7913,
                                7934,
                                7958,
                                7982
                              ],
                              "referencedDeclaration": 7913,
                              "src": "12362:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12362:9:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34260,
                          "nodeType": "ExpressionStatement",
                          "src": "12362:9:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34261,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "12381:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12393:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "12381:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34264,
                                  "name": "bobDeposit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34062,
                                  "src": "12414:10:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "src": "12381:44:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34266,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12381:46:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34267,
                          "nodeType": "ExpressionStatement",
                          "src": "12381:46:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34269,
                                "name": "contOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33076,
                                "src": "12447:9:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 34268,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "12437:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12437:20:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34271,
                          "nodeType": "ExpressionStatement",
                          "src": "12437:20:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34272,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "12467:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12479:5:50",
                              "memberName": "stake",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3528,
                              "src": "12467:17:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 34275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12467:19:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34276,
                          "nodeType": "ExpressionStatement",
                          "src": "12467:19:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34282,
                                "name": "y",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34030,
                                "src": "12526:1:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 34279,
                                    "name": "stakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33043,
                                    "src": "12504:11:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_StakingPool_$4377",
                                      "typeString": "contract StakingPool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_StakingPool_$4377",
                                      "typeString": "contract StakingPool"
                                    }
                                  ],
                                  "id": 34278,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12496:8:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 34277,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12496:8:50",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 34280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12496:20:50",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 34281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12517:8:50",
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "12496:29:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 34283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12496:32:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34284,
                          "nodeType": "ExpressionStatement",
                          "src": "12496:32:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d696e696d756d206f66203130302077656920746f2064697374726962757465",
                                "id": 34288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12554:34:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_0f00fb37f6a37183ae3803ed39ad837a119d5582659746e10b4b04d676b4b4ea",
                                  "typeString": "literal_string \"minimum of 100 wei to distribute\""
                                },
                                "value": "minimum of 100 wei to distribute"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_0f00fb37f6a37183ae3803ed39ad837a119d5582659746e10b4b04d676b4b4ea",
                                  "typeString": "literal_string \"minimum of 100 wei to distribute\""
                                }
                              ],
                              "expression": {
                                "id": 34285,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "12538:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 34287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12541:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "12538:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 34289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12538:51:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34290,
                          "nodeType": "ExpressionStatement",
                          "src": "12538:51:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34291,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "12599:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12611:21:50",
                              "memberName": "distributeAndClaimAll",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4007,
                              "src": "12599:33:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                "typeString": "function () external"
                              }
                            },
                            "id": 34294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12599:35:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34295,
                          "nodeType": "ExpressionStatement",
                          "src": "12599:35:50"
                        }
                      ]
                    },
                    "id": 34297,
                    "nodeType": "IfStatement",
                    "src": "12127:516:50",
                    "trueBody": {
                      "id": 34245,
                      "nodeType": "Block",
                      "src": "12138:129:50",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "6d757374206465706f736974206574686572",
                                "id": 34231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12164:20:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                },
                                "value": "must deposit ether"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_047e60e450174b0a20069a9cb8362865bfe5607213b8888c29d67a10d2b260f7",
                                  "typeString": "literal_string \"must deposit ether\""
                                }
                              ],
                              "expression": {
                                "id": 34228,
                                "name": "vm",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7215,
                                "src": "12148:2:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vm_$12496",
                                  "typeString": "contract Vm"
                                }
                              },
                              "id": 34230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12151:12:50",
                              "memberName": "expectRevert",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 11982,
                              "src": "12148:15:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (bytes memory) external"
                              }
                            },
                            "id": 34232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12148:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34233,
                          "nodeType": "ExpressionStatement",
                          "src": "12148:37:50"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34235,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "12205:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34234,
                              "name": "startHoax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                8003,
                                8024,
                                8048,
                                8072
                              ],
                              "referencedDeclaration": 8003,
                              "src": "12195:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                "typeString": "function (address)"
                              }
                            },
                            "id": 34236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12195:16:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34237,
                          "nodeType": "ExpressionStatement",
                          "src": "12195:16:50"
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 34238,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "12221:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                },
                                "id": 34240,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "12233:13:50",
                                "memberName": "depositToPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3252,
                                "src": "12221:25:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                  "typeString": "function () payable external"
                                }
                              },
                              "id": 34242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "nodeType": "FunctionCallOptions",
                              "options": [
                                {
                                  "id": 34241,
                                  "name": "x",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34028,
                                  "src": "12254:1:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                }
                              ],
                              "src": "12221:35:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12221:37:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 34244,
                          "nodeType": "ExpressionStatement",
                          "src": "12221:37:50"
                        }
                      ]
                    }
                  },
                  "id": 34298,
                  "nodeType": "IfStatement",
                  "src": "10861:1782:50",
                  "trueBody": {
                    "id": 34224,
                    "nodeType": "Block",
                    "src": "10882:1239:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34075,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33082,
                              "src": "10897:5:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 34074,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7913,
                              7934,
                              7958,
                              7982
                            ],
                            "referencedDeclaration": 7913,
                            "src": "10892:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 34076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10892:11:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34077,
                        "nodeType": "ExpressionStatement",
                        "src": "10892:11:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34078,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "10913:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10925:13:50",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3252,
                              "src": "10913:25:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 34081,
                                "name": "aliceDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34051,
                                "src": "10946:12:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "10913:46:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 34083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10913:48:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34084,
                        "nodeType": "ExpressionStatement",
                        "src": "10913:48:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34086,
                              "name": "bob",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33088,
                              "src": "10976:3:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 34085,
                            "name": "hoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              7913,
                              7934,
                              7958,
                              7982
                            ],
                            "referencedDeclaration": 7913,
                            "src": "10971:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 34087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10971:9:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34088,
                        "nodeType": "ExpressionStatement",
                        "src": "10971:9:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 34089,
                                "name": "stakingPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33043,
                                "src": "10990:11:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingPool_$4377",
                                  "typeString": "contract StakingPool"
                                }
                              },
                              "id": 34091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11002:13:50",
                              "memberName": "depositToPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3252,
                              "src": "10990:25:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$__$returns$__$",
                                "typeString": "function () payable external"
                              }
                            },
                            "id": 34093,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 34092,
                                "name": "bobDeposit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34062,
                                "src": "11023:10:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "10990:44:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                              "typeString": "function () payable external"
                            }
                          },
                          "id": 34094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10990:46:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34095,
                        "nodeType": "ExpressionStatement",
                        "src": "10990:46:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34097,
                              "name": "contOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33076,
                              "src": "11056:9:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 34096,
                            "name": "startHoax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8003,
                              8024,
                              8048,
                              8072
                            ],
                            "referencedDeclaration": 8003,
                            "src": "11046:9:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 34098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11046:20:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34099,
                        "nodeType": "ExpressionStatement",
                        "src": "11046:20:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34100,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "11076:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 34102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11088:5:50",
                            "memberName": "stake",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3528,
                            "src": "11076:17:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 34103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11076:19:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34104,
                        "nodeType": "ExpressionStatement",
                        "src": "11076:19:50"
                      },
                      {
                        "assignments": [
                          34106
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34106,
                            "mutability": "mutable",
                            "name": "aliceBalance",
                            "nameLocation": "11110:12:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 34224,
                            "src": "11105:17:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34105,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11105:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34112,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34109,
                                "name": "alice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33082,
                                "src": "11133:5:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11125:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11125:7:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11125:14:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 34111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11140:7:50",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "11125:22:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11105:42:50"
                      },
                      {
                        "assignments": [
                          34114
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34114,
                            "mutability": "mutable",
                            "name": "bobBalance",
                            "nameLocation": "11162:10:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 34224,
                            "src": "11157:15:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34113,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11157:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34120,
                        "initialValue": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 34117,
                                "name": "bob",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33088,
                                "src": "11183:3:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 34116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11175:7:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 34115,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11175:7:50",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34118,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11175:12:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 34119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11188:7:50",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "11175:20:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11157:38:50"
                      },
                      {
                        "assignments": [
                          34122
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34122,
                            "mutability": "mutable",
                            "name": "aliceShare",
                            "nameLocation": "11210:10:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 34224,
                            "src": "11205:15:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34121,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11205:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34138,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 34135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 34132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 34125,
                                        "name": "y",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34030,
                                        "src": "11229:1:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "id": 34124,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11224:4:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 34123,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11224:4:50",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 34126,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11224:7:50",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 34129,
                                          "name": "stakingPool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 33043,
                                          "src": "11242:11:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                                            "typeString": "contract StakingPool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_StakingPool_$4377",
                                            "typeString": "contract StakingPool"
                                          }
                                        ],
                                        "id": 34128,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11234:7:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 34127,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11234:7:50",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 34130,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11234:20:50",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 34131,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "11255:7:50",
                                    "memberName": "balance",
                                    "nodeType": "MemberAccess",
                                    "src": "11234:28:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11224:38:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 34133,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11223:40:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 34134,
                              "name": "aliceDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34051,
                              "src": "11266:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11223:55:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "3332303030303030303030303030303030303030",
                            "id": 34136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11281:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32000000000000000000_by_1",
                              "typeString": "int_const 32000000000000000000"
                            },
                            "value": "32000000000000000000"
                          },
                          "src": "11223:78:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11205:96:50"
                      },
                      {
                        "assignments": [
                          34140
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34140,
                            "mutability": "mutable",
                            "name": "bobShare",
                            "nameLocation": "11316:8:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 34224,
                            "src": "11311:13:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34139,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11311:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34154,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 34150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 34143,
                                      "name": "y",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34030,
                                      "src": "11333:1:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint32",
                                        "typeString": "uint32"
                                      }
                                    ],
                                    "id": 34142,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11328:4:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 34141,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11328:4:50",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 34144,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11328:7:50",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 34147,
                                        "name": "stakingPool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 33043,
                                        "src": "11346:11:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                                          "typeString": "contract StakingPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                                          "typeString": "contract StakingPool"
                                        }
                                      ],
                                      "id": 34146,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "11338:7:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 34145,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "11338:7:50",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 34148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11338:20:50",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 34149,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11359:7:50",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "11338:28:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11328:38:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 34151,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11327:40:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 34152,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34122,
                            "src": "11370:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11327:53:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11311:69:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34160,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34030,
                              "src": "11420:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 34157,
                                  "name": "stakingPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33043,
                                  "src": "11398:11:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StakingPool_$4377",
                                    "typeString": "contract StakingPool"
                                  }
                                ],
                                "id": 34156,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11390:8:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 34155,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11390:8:50",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11390:20:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 34159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11411:8:50",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "11390:29:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 34161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11390:32:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34162,
                        "nodeType": "ExpressionStatement",
                        "src": "11390:32:50"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 34163,
                              "name": "stakingPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33043,
                              "src": "11432:11:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingPool_$4377",
                                "typeString": "contract StakingPool"
                              }
                            },
                            "id": 34165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11444:21:50",
                            "memberName": "distributeAndClaimAll",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 4007,
                            "src": "11432:33:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 34166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11432:35:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34167,
                        "nodeType": "ExpressionStatement",
                        "src": "11432:35:50"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34168,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34122,
                            "src": "11480:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 34169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11494:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11480:15:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 34175,
                        "nodeType": "IfStatement",
                        "src": "11477:34:50",
                        "trueBody": {
                          "expression": {
                            "id": 34173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 34171,
                              "name": "aliceShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34122,
                              "src": "11497:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 34172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11510:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11497:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 34174,
                          "nodeType": "ExpressionStatement",
                          "src": "11497:14:50"
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34176,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "11524:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 34177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11536:1:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "11524:13:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 34183,
                        "nodeType": "IfStatement",
                        "src": "11521:29:50",
                        "trueBody": {
                          "expression": {
                            "id": 34181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 34179,
                              "name": "bobShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34140,
                              "src": "11539:8:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "30",
                              "id": 34180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11549:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "11539:11:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 34182,
                          "nodeType": "ExpressionStatement",
                          "src": "11539:11:50"
                        }
                      },
                      {
                        "assignments": [
                          34185
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34185,
                            "mutability": "mutable",
                            "name": "aliceBalanceExpected",
                            "nameLocation": "11565:20:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 34224,
                            "src": "11560:25:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34184,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11560:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34189,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34186,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34106,
                            "src": "11588:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 34187,
                            "name": "aliceShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34122,
                            "src": "11603:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11588:25:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11560:53:50"
                      },
                      {
                        "expression": {
                          "id": 34196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 34190,
                            "name": "aliceBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34106,
                            "src": "11623:12:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 34193,
                                  "name": "alice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33082,
                                  "src": "11646:5:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 34192,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11638:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34191,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11638:7:50",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11638:14:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 34195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11653:7:50",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "11638:22:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11623:37:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34197,
                        "nodeType": "ExpressionStatement",
                        "src": "11623:37:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34199,
                              "name": "aliceBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34106,
                              "src": "11800:12:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34200,
                              "name": "aliceBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34185,
                              "src": "11814:20:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 34201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11836:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 34198,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8925,
                              8961,
                              9011,
                              9047
                            ],
                            "referencedDeclaration": 8925,
                            "src": "11782:17:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 34202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11782:56:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34203,
                        "nodeType": "ExpressionStatement",
                        "src": "11782:56:50"
                      },
                      {
                        "assignments": [
                          34205
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 34205,
                            "mutability": "mutable",
                            "name": "bobBalanceExpected",
                            "nameLocation": "11853:18:50",
                            "nodeType": "VariableDeclaration",
                            "scope": 34224,
                            "src": "11848:23:50",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 34204,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11848:4:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 34209,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 34208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 34206,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34114,
                            "src": "11874:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 34207,
                            "name": "bobShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34140,
                            "src": "11887:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11874:21:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11848:47:50"
                      },
                      {
                        "expression": {
                          "id": 34216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 34210,
                            "name": "bobBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34114,
                            "src": "11905:10:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 34213,
                                  "name": "bob",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33088,
                                  "src": "11926:3:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "id": 34212,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11918:7:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 34211,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11918:7:50",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11918:12:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 34215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11931:7:50",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "11918:20:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11905:33:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 34217,
                        "nodeType": "ExpressionStatement",
                        "src": "11905:33:50"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 34219,
                              "name": "bobBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34114,
                              "src": "12078:10:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 34220,
                              "name": "bobBalanceExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34205,
                              "src": "12090:18:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 34221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12110:1:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "id": 34218,
                            "name": "assertApproxEqAbs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              8925,
                              8961,
                              9011,
                              9047
                            ],
                            "referencedDeclaration": 8925,
                            "src": "12060:17:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 34222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12060:52:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34223,
                        "nodeType": "ExpressionStatement",
                        "src": "12060:52:50"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "c07d2f57",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDistribute",
            "nameLocation": "10512:14:50",
            "parameters": {
              "id": 34031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34028,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "10534:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34300,
                  "src": "10527:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 34027,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10527:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34030,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "10544:1:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34300,
                  "src": "10537:8:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 34029,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10537:6:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10526:20:50"
            },
            "returnParameters": {
              "id": 34032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10554:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34323,
            "nodeType": "FunctionDefinition",
            "src": "12655:236:50",
            "nodes": [],
            "body": {
              "id": 34322,
              "nodeType": "Block",
              "src": "12695:196:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34304,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "12713:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34303,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8024,
                        8048,
                        8072
                      ],
                      "referencedDeclaration": 8003,
                      "src": "12703:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12703:20:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34306,
                  "nodeType": "ExpressionStatement",
                  "src": "12703:20:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "7769746864726177616c2063726564656e7469616c206d69736d61746368",
                        "id": 34310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12747:32:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        },
                        "value": "withdrawal credential mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4d3bad30e34d265ba637120749aea53712f8ab28de2e5f774effbd4113b7d808",
                          "typeString": "literal_string \"withdrawal credential mismatch\""
                        }
                      ],
                      "expression": {
                        "id": 34307,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "12731:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12496",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34309,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12734:12:50",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11982,
                      "src": "12731:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12731:49:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34312,
                  "nodeType": "ExpressionStatement",
                  "src": "12731:49:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34316,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "12810:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "hexValue": "01000000000000000000000000dead",
                        "id": 34317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12818:35:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        "value": "\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ޭ"
                      },
                      {
                        "id": 34318,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "12855:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34319,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "12866:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5b6e546494de8bc867a3f1cd17cc3938d65897e7eecf6756cfc625b860026652",
                          "typeString": "literal_string hex\"01000000000000000000000000dead\""
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34313,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "12788:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34315,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12800:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "12788:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 34320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12788:96:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34321,
                  "nodeType": "ExpressionStatement",
                  "src": "12788:96:50"
                }
              ]
            },
            "functionSelector": "8adcff77",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBadWithdrawalCred",
            "nameLocation": "12664:21:50",
            "parameters": {
              "id": 34301,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12685:2:50"
            },
            "returnParameters": {
              "id": 34302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12695:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34355,
            "nodeType": "FunctionDefinition",
            "src": "12897:301:50",
            "nodes": [],
            "body": {
              "id": 34354,
              "nodeType": "Block",
              "src": "12924:274:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34327,
                        "name": "contOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33076,
                        "src": "12961:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 34326,
                      "name": "startHoax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8003,
                        8024,
                        8048,
                        8072
                      ],
                      "referencedDeclaration": 8003,
                      "src": "12951:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12951:20:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34329,
                  "nodeType": "ExpressionStatement",
                  "src": "12951:20:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34333,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "13001:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34334,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "13009:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34335,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "13033:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34336,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "13044:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34330,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "12979:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12991:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "12979:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 34337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12979:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34338,
                  "nodeType": "ExpressionStatement",
                  "src": "12979:83:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "77726f6e67207374617465",
                        "id": 34342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13086:13:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5707d4fbf04e9bc9ef481445136a118e0a93f13ffc5a45989669399492733b10",
                          "typeString": "literal_string \"wrong state\""
                        },
                        "value": "wrong state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5707d4fbf04e9bc9ef481445136a118e0a93f13ffc5a45989669399492733b10",
                          "typeString": "literal_string \"wrong state\""
                        }
                      ],
                      "expression": {
                        "id": 34339,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7215,
                        "src": "13070:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$12496",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 34341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13073:12:50",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11982,
                      "src": "13070:15:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 34343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13070:30:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34344,
                  "nodeType": "ExpressionStatement",
                  "src": "13070:30:50"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34348,
                        "name": "pubkey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33091,
                        "src": "13130:6:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34349,
                        "name": "withdrawal_credentials",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33094,
                        "src": "13138:22:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34350,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33097,
                        "src": "13162:9:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        }
                      },
                      {
                        "id": 34351,
                        "name": "deposit_data_root",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33100,
                        "src": "13173:17:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage",
                          "typeString": "bytes storage ref"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34345,
                        "name": "stakingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33043,
                        "src": "13108:11:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingPool_$4377",
                          "typeString": "contract StakingPool"
                        }
                      },
                      "id": 34347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13120:9:50",
                      "memberName": "setPubKey",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3640,
                      "src": "13108:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes memory,bytes memory,bytes memory,bytes32) external"
                      }
                    },
                    "id": 34352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13108:83:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34353,
                  "nodeType": "ExpressionStatement",
                  "src": "13108:83:50"
                }
              ]
            },
            "functionSelector": "e96d88e0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testLock",
            "nameLocation": "12906:8:50",
            "parameters": {
              "id": 34324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12914:2:50"
            },
            "returnParameters": {
              "id": 34325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12924:0:50"
            },
            "scope": 34356,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33018,
              "name": "Test",
              "nameLocations": [
                "761:4:50"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10377,
              "src": "761:4:50"
            },
            "id": 33019,
            "nodeType": "InheritanceSpecifier",
            "src": "761:4:50"
          }
        ],
        "canonicalName": "StakingPoolLockedTest",
        "contractDependencies": [
          58,
          237,
          906,
          1086,
          1568,
          1881,
          2067,
          2434,
          3064,
          4475
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34356,
          10377,
          7447,
          7184
        ],
        "name": "StakingPoolLockedTest",
        "nameLocation": "736:21:50",
        "scope": 34357,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 50
}